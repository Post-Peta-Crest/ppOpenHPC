
<html>
<head>
<title>TPass5 メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.4.13. TPass5 メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>TPass5</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>pass5.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>74</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TPass5</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>public</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>TPass5 ( TList * aTokenList , TList * aValDataList , TList * aTuneRegionList )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>パス５クラス生成<br>変数の初期化と出力ファイルのオープンを行う。</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap></td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap>aTokenList  トークンリスト<br>aValDataList    変数リスト<br>aTuneRegionList チューニングリージョンリスト</td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap></td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TList::Add</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>64</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_2_6.htm">TMainF::ErrMessage</a></td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap><a href="16_2_6.htm">767</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap>c_str</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>fopen</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>fprintf</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap>mkdir</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>rfind</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>stat</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>substr</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
</table>

<p></p>
参照外部変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>MainF</td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap>53</td>
</tr>
</table>

<p></p>
参照メンバ変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TPass5::Comment</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>86</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>TPass5::fpInOATHeader</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>80</td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap>TPass5::fpOutControl</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>77</td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>TPass5::fpOutDynamic</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>76</td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>TPass5::fpOutHeader</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>78</td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap>TPass5::fpOutInstall</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>74</td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>TPass5::fpOutList</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>73</td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>TPass5::fpOutOATHeader</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>81</td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>TPass5::fpOutStatic</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>75</td>
</tr>
<tr>
<td nowrap>10</td>
<td nowrap>TPass5::SrcFname</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>67</td>
</tr>
<tr>
<td nowrap>11</td>
<td nowrap>TPass5::TokenList</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>69</td>
</tr>
<tr>
<td nowrap>12</td>
<td nowrap>TPass5::TuneRegionList</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>71</td>
</tr>
<tr>
<td nowrap>13</td>
<td nowrap>TPass5::ValDataList</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>70</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_1_1.htm">TList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_1_1.htm">57</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +------------------------------------------------------------------------------+ 
    74  +--+ TPass5::TPass5(TList *aTokenList,TList *aValDataList,TList *aTuneRegionList) | 
    75     | {                                                                            | 
           +--+---------------------------------------------------------------------------+ 
    76        +--- string DirName;
    77        +--- string fname;
    78        +--- string s;
    79        +--- string FileExtStr;
    80        +--- struct stat sb;
    81        +--- int i;
    82        +--- FILE *fpOut;
    83        |    
              |  +------------------------------------------------+ 
    84        +--+ if(MainF-&gt;SrcCodeType == MainF-&gt;sctFortran77){ | 
              |  +--+---------------------------------------------+ 
    85        |     +--- Comment = 'c';
              |   +-+---+ 
    86        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
    86        |   |  else{  | 
              |   +-+-------+ 
    87        |     +--- Comment = '!';
              |   +-+---+ 
    88        |   |  }  | 
              |   +-----+ 
    89        +--- TokenList = aTokenList;
    90        +--- ValDataList = aValDataList;
    91        +--- TuneRegionList = aTuneRegionList;
    92        |    
    93        +--- fname = MainF-&gt;SrcFileNameList.Strings[0];
    94        +--- DirName = fname.substr(0,fname.rfind(&quot;/&quot;)+1);
              |  +--------------------+ 
    95        +--+ if(DirName == &quot;&quot;){ | 
              |  +--+-----------------+ 
    96        |     +--- DirName = &quot;./&quot;;
              |   +-+---+ 
    97        |   |  }  | 
              |   +-----+ 
    98        +--- s = DirName+&quot;OAT&quot;;
              |  +--------------------------------+ 
    99        +--+ if(stat(s.c_str(),&amp;sb) == -1){ | 
              |  +--+-----------------------------+ 
   100        |     +--- #ifdef _WIN32
              |     |  +----------------------------+ 
   101        |     +--+ if(mkdir(s.c_str()) != 0){ | 
              |     |  +--+-------------------------+ 
   102        |     |     +--- MainF-&gt;ErrMessage(-1,&quot;フォルダが作成出来ません。 &quot;);
              |     |   +-+---+ 
   103        |     |   |  }  | 
              |     |   +-----+ 
   104        |     +--- #else
   105        |     +--- mkdir(s.c_str(),
   106        |     |            S_IRUSR | S_IWUSR | S_IXUSR |         /* rwx */  
   107        |     |            S_IRGRP | S_IWGRP | S_IXGRP |         /* rwx */  
   108        |     |            S_IROTH | S_IXOTH | S_IXOTH);                    
   109        |     +--- #endif
              |   +-+---+ 
   110        |   |  }  | 
              |   +-----+ 
              |  +------------------------------------------------------+ 
   111        +--+ for(i = 0 ; i &lt; MainF-&gt;SrcFileNameList.Count ; i++){ | 
              |  +--+---------------------------------------------------+ 
   112        |     +--- fname = MainF-&gt;SrcFileNameList.Strings[i];
   113        |     +--- SrcFname = fname.substr(fname.rfind(&quot;/&quot;)+1);
   114        |     +--- fname = DirName + &quot;OAT/OAT_&quot;+SrcFname;
   115        |     +--- fpOut = fopen(fname.c_str(),&quot;wt&quot;);      // 出力ファイル
              |     |  +--------------------+ 
   116        |     +--+ if(fpOut == NULL){ | 
              |     |  +--+-----------------+ 
   117        |     |     +--- MainF-&gt;ErrMessage(-1,fname + &quot; ファイルが開けません&quot;);
              |     |   +-+---+ 
   118        |     |   |  }  | 
              |     |   +-----+ 
   119        |     +--- fpOutList.Add(fpOut);
              |   +-+---+ 
   120        |   |  }  | 
              |   +-----+ 
              |  +------------------------------------------------+ 
   121        +--+ if(MainF-&gt;SrcCodeType == MainF-&gt;sctFortran77){ | 
              |  +--+---------------------------------------------+ 
   122        |     +--- FileExtStr = &quot;.f&quot;;
              |   +-+---+ 
   123        |   |  }  | 
              |   +-+---+ 
              |   +-+-----------------------------------------------------+ 
   123        |   |  else if(MainF-&gt;SrcCodeType == MainF-&gt;sctFortran90){  | 
              |   +-+-----------------------------------------------------+ 
   124        |     +--- FileExtStr = &quot;.f90&quot;;
              |   +-+---+ 
   125        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
   125        |   |  else{  | 
              |   +-+-------+ 
   126        |     +--- FileExtStr = &quot;.c&quot;;
              |   +-+---+ 
   127        |   |  }  | 
              |   +-----+ 
   128        +--- fname = DirName + &quot;OAT/OAT_ControlRoutines&quot; + FileExtStr;
   129        +--- fpOutControl = fopen(fname.c_str(),&quot;wt&quot;);
              |  +----------------------------+ 
   130        +--+ if(fpOutControl == NULL){  | 
              |  +--+-------------------------+ 
   131        |     +--- MainF-&gt;ErrMessage(-1,fname + &quot; ファイルが開けません&quot;);
              |   +-+---+ 
   132        |   |  }  | 
              |   +-----+ 
   133        +--- fname = DirName + &quot;OAT/OAT_InstallRoutines&quot; + FileExtStr;
   134        +--- fpOutInstall = fopen(fname.c_str(),&quot;wt&quot;);
              |  +----------------------------+ 
   135        +--+ if(fpOutInstall == NULL){  | 
              |  +--+-------------------------+ 
   136        |     +--- MainF-&gt;ErrMessage(-1,fname + &quot; ファイルが開けません&quot;);
              |   +-+---+ 
   137        |   |  }  | 
              |   +-----+ 
   138        +--- fname = DirName + &quot;OAT/OAT_StaticRoutines&quot; + FileExtStr;
   139        +--- fpOutStatic = fopen(fname.c_str(),&quot;wt&quot;);
              |  +--------------------------+ 
   140        +--+ if(fpOutStatic == NULL){ | 
              |  +--+-----------------------+ 
   141        |     +--- MainF-&gt;ErrMessage(-1,fname + &quot; ファイルが開けません&quot;);
              |   +-+---+ 
   142        |   |  }  | 
              |   +-----+ 
   143        +--- fname = DirName + &quot;OAT/OAT_DynamicRoutines&quot; + FileExtStr;
   144        +--- fpOutDynamic = fopen(fname.c_str(),&quot;wt&quot;);
              |  +----------------------------+ 
   145        +--+ if(fpOutDynamic == NULL){  | 
              |  +--+-------------------------+ 
   146        |     +--- MainF-&gt;ErrMessage(-1,fname + &quot; ファイルが開けません&quot;);
              |   +-+---+ 
   147        |   |  }  | 
              |   +-----+ 
              |  +----------------------------------------+ 
   148        +--+ if(MainF-&gt;SrcCodeType == MainF-&gt;sctC){ | 
              |  +--+-------------------------------------+ 
   149        |     +--- fname = DirName + &quot;OAT/OAT_Routines.h&quot;;
   150        |     +--- fpOutHeader = fopen(fname.c_str(),&quot;wt&quot;);
              |     |  +--------------------------+ 
   151        |     +--+ if(fpOutHeader == NULL){ | 
              |     |  +--+-----------------------+ 
   152        |     |     +--- MainF-&gt;ErrMessage(-1,fname + &quot; ファイルが開けません&quot;);
              |     |   +-+---+ 
   153        |     |   |  }  | 
              |     |   +-----+ 
   154        |     +--- fprintf(fpOutHeader,&quot;//============================================================\n&quot;);
   155        |     +--- fprintf(fpOutHeader,&quot;//=== OAT_Routines Header\n&quot;);
   156        |     +--- fprintf(fpOutHeader,&quot;//============================================================\n&quot;);
              |   +-+---+ 
   157        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
   157        |   |  else{  | 
              |   +-+-------+ 
   158        |     +--- fpOutHeader = NULL;
              |   +-+---+ 
   159        |   |  }  | 
              |   +-----+ 
   160        +--- //
   161        |    //  Fortranの場合は、OAT_base.hの後に変数を追加した OAT.h を出力する。                         
   162        |    //                                                                                             
   163        |    /*******************************************************************************************/  
   164        |    //                                                                                             
   165        |    //Kogakuin Irie                                                                                
   166        |    //OAT_base.hではなく，OAT.hに変数を追加して，追加後のOAT.hを出力する．                         
   167        |    //また，この処理をFortran77でも行うようにする                                                  
   168        |    //既存のコードはコメントアウト                                                                 
   169        |    //                                                                                             
   170        +--- //  if(MainF-&gt;SrcCodeType == MainF-&gt;sctFortran90){
   171        |    //      fname = DirName + &quot;OAT_base.h&quot;;                            
   172        |    //      fpInOATHeader = fopen(fname.c_str(),&quot;rt&quot;);                 
   173        |    //      if(fpInOATHeader == NULL){                                 
   174        |    //          MainF-&gt;ErrMessage(-1,fname + &quot; ファイルが開けません&quot;); 
   175        |    //      }                                                          
   176        |    //      fname = DirName + &quot;OAT/OAT.h&quot;;                             
   177        |    //      fpOutOATHeader = fopen(fname.c_str(),&quot;wt&quot;);                
   178        |    //      if(fpOutOATHeader == NULL){                                
   179        |    //          MainF-&gt;ErrMessage(-1,fname + &quot; ファイルが開けません&quot;); 
   180        |    //      }                                                          
   181        |    //  }                                                              
              |  +----------------------------------------------------------------------------------------------+ 
   182        +--+ if(MainF-&gt;SrcCodeType == MainF-&gt;sctFortran90 || MainF-&gt;SrcCodeType == MainF-&gt;sctFortran77){  | 
              |  +--+-------------------------------------------------------------------------------------------+ 
   183        |     +--- fname = DirName + &quot;OAT.h&quot;;
   184        |     +--- fpInOATHeader = fopen(fname.c_str(),&quot;rt&quot;);
              |     |  +----------------------------+ 
   185        |     +--+ if(fpInOATHeader == NULL){ | 
              |     |  +--+-------------------------+ 
   186        |     |     +--- MainF-&gt;ErrMessage(-1,fname + &quot; ファイルが開けません&quot;);
              |     |   +-+---+ 
   187        |     |   |  }  | 
              |     |   +-----+ 
   188        |     +--- fname = DirName + &quot;OAT/OAT.h&quot;;
   189        |     +--- fpOutOATHeader = fopen(fname.c_str(),&quot;wt&quot;);
              |     |  +------------------------------+ 
   190        |     +--+ if(fpOutOATHeader == NULL){  | 
              |     |  +--+---------------------------+ 
   191        |     |     +--- MainF-&gt;ErrMessage(-1,fname + &quot; ファイルが開けません&quot;);
              |     |   +-+---+ 
   192        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   193        |   |  }  | 
              |   +-----+ 
   194        +--- //
   195        |    //ここまで                                                                                     
   196        |    //                                                                                             
   197        |    /*******************************************************************************************/  
              |   +-+-------+ 
   198        |   |  else{  | 
              |   +-+-------+ 
   199        |     +--- fpInOATHeader = NULL;
   200        |     +--- fpOutOATHeader = NULL;
              |   +-+---+ 
   201        |   |  }  | 
              |   +-----+ 
            +-+---+ 
   202      |  }  | 
            +-----+ 
</pre>


</body>
</html>
