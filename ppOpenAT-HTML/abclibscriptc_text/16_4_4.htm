
<html>
<head>
<title>AddUsePosList メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.4.4. AddUsePosList メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>AddUsePosList</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>pass5.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>2703</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TPass5</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>private</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>void AddUsePosList ( TList * InsertUsePosList )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>USE 文配置する位置を求めて返す。</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap>なし</td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap>InsertUsePosList 求めた配置トークン位置を返すリスト</td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap>モジュール内に!OAT$を含んでいる場合には、USE文を挿入する位置をInsertUsePosListに追加する。</td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_4_10.htm">TPass5::MakeFunctionCode_Fortran</a></td>
<td nowrap><a href="5_6.htm">pass5.cpp</a></td>
<td nowrap><a href="16_4_10.htm">1837</a></td>
</tr>
</table>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TList::Add</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>64</td>
</tr>
</table>

<p></p>

<p></p>
参照メンバ変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TPass5::TokenList</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>69</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_1_1.htm">TList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_1_1.htm">57</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_5_1.htm">TScript</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_12.htm">pass3.h</a></td>
<td nowrap><a href="16_5_1.htm">209</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_9_1.htm">TToken</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="16_9_1.htm">294</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap><a href="16_10_1.htm">TTuneRegion</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap><a href="16_10_1.htm">143</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +------------------------------------------------------+ 
  2703  +--+ void TPass5::AddUsePosList(TList *InsertUsePosList)  | 
  2704     | {                                                    | 
           +--+---------------------------------------------------+ 
  2705        +--- int i,j;
  2706        +--- TTuneRegion *TuneRegion;
  2707        +--- int UndefindeArgCount;
  2708        +--- int TokenPos;
  2709        +--- int ModuleNest;
  2710        +--- int ModuleIdx = -1;
  2711        +--- int NestLevel;
  2712        +--- TToken *Token;
  2713        +--- TToken *Token2;
  2714        +--- TScript *Script;
  2715        +--- bool ModuleDefF;
  2716        +--- int LastMoudleDefPos;
  2717        +--- int BrLevel;
  2718        |    
  2719        +--- //
  2720        |    // 未定義の変数があった場合は、containsで組み込む。                            
  2721        |    // リージョンがModule内にあるかを調べる。もしモジュール内にあれば、            
  2722        |    // そのモジュール内にのみ組み込み、それ以外は use module で参照する形とする。  
  2723        |    //                                                                             
  2724        +--- ModuleNest = -1;
  2725        +--- NestLevel = 0;
  2726        +--- ModuleDefF = false;
  2727        +--- LastMoudleDefPos = -1;
              |  +------------------------------------------+ 
  2728        +--+ for(i = 0 ; i &lt; TokenList-&gt;Count ;i++){  | 
              |  +--+---------------------------------------+ 
  2729        |     +--- Token = (TToken *)TokenList-&gt;Items[i];
              |     |  +------------------------------------+ 
  2730        |     +--+ if(Token-&gt;ModuleIdx &gt; ModuleIdx){  | 
              |     |  +--+---------------------------------+ 
  2731        |     |     +--- ModuleDefF = true;
  2732        |     |     +--- ModuleIdx = Token-&gt;ModuleIdx;
              |     |   +-+---+ 
  2733        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------+ 
  2734        |     +--+ switch(Token-&gt;TokId){  | 
              |     |  +--+---------------------+ 
              |     |     +-------------------------------------+ 
  2735        |     |     |  case tid_MODULE:        // MODULE  | 
              |     |     +-------------------------------------+ 
  2736        |     |     +--- ModuleNest = NestLevel;
  2737        |     |     +--- NestLevel++;
              |     |     |  +--------+ 
  2738        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-------------------------------------+ 
  2739        |     |     |  case tid_PROGRAM:       // PROGRAM | 
              |     |     +-------------------------------------+ 
              |     |     +---------------------------------------+ 
  2740        |     |     |  case tid_INTERFACE:     // INTERFACE | 
              |     |     +---------------------------------------+ 
              |     |     +-----------------------------------------+ 
  2741        |     |     |  case tid_SUBROUTINE:    // SUBROUTINE  | 
              |     |     +-----------------------------------------+ 
              |     |     +---------------------------------------+ 
  2742        |     |     |  case tid_FUNCTION:      // FUNCTION  | 
              |     |     +---------------------------------------+ 
              |     |     +-----------------+ 
  2743        |     |     |  case tid_TYPE: | 
              |     |     +-----------------+ 
  2744        |     |     +--- NestLevel++;
  2745        |     |     +--- //
  2746        |     |     |    //  モジュールの最初の定義行の次の位置を探す。 
  2747        |     |     |    //                                             
              |     |     |  +------------------+ 
  2748        |     |     +--+ if(ModuleDefF){  | 
              |     |     |  +--+---------------+ 
  2749        |     |     |     +--- ModuleDefF = false;
  2750        |     |     |     +--- /*
  2751        |     |     |     |                    for(j = i ; j &lt; TokenList-&gt;Count ;j++){      
  2752        |     |     |     |                        Token2 = (TToken *)TokenList-&gt;Items[j];  
  2753        |     |     |     |                        if(Token2-&gt;TokId == tid_IMPLICIT){       
  2754        |     |     |     |                            LastMoudleDefPos = j-1;              
  2755        |     |     |     |                            break;                               
  2756        |     |     |     |                        }                                        
  2757        |     |     |     |                    }                                            
  2758        |     |     |     |                    if(j &gt;= TokenList-&gt;Count){                   
  2759        |     |     |     |    */                                                           
              |     |     |     |  +------------+ 
  2760        |     |     |     +--+ if(true){  | 
              |     |     |     |  +--+---------+ 
  2761        |     |     |     |     +--- BrLevel = -1;
              |     |     |     |     |  +------------------------------------------+ 
  2762        |     |     |     |     +--+ for(j = i ; j &lt; TokenList-&gt;Count ;j++){  | 
              |     |     |     |     |  +--+---------------------------------------+ 
  2763        |     |     |     |     |     +--- Token2 = (TToken *)TokenList-&gt;Items[j];
              |     |     |     |     |     |  +----------------------------------+ 
  2764        |     |     |     |     |     +--+ if(Token2-&gt;TokId == tid_Kakko){  | 
              |     |     |     |     |     |  +--+-------------------------------+ 
              |     |     |     |     |     |     |  +------------------+ 
  2765        |     |     |     |     |     |     +--+ if(BrLevel &lt; 0){ | 
              |     |     |     |     |     |     |  +--+---------------+ 
  2766        |     |     |     |     |     |     |     +--- BrLevel = 0;
              |     |     |     |     |     |     |   +-+---+ 
  2767        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
  2768        |     |     |     |     |     |     +--- BrLevel++;
              |     |     |     |     |     |   +-+---+ 
  2769        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |  +----------------------------------+ 
  2770        |     |     |     |     |     +--+ if(Token2-&gt;TokId == tid_Kokka){  | 
              |     |     |     |     |     |  +--+-------------------------------+ 
  2771        |     |     |     |     |     |     +--- BrLevel--;
              |     |     |     |     |     |   +-+---+ 
  2772        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |  +------------------------------------------------------+ 
  2773        |     |     |     |     |     +--+ if((Token2-&gt;TokId == tid_LineEnd)&amp;&amp;(BrLevel == 0)){  | 
              |     |     |     |     |     |  +--+---------------------------------------------------+ 
  2774        |     |     |     |     |     |     +--- LastMoudleDefPos = j;
              |     |     |     |     |     |     |  +--------+ 
  2775        |     |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |     |  +--------+ 
              |     |     |     |     |     |   +-+---+ 
  2776        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |  +----------------------------------------------------+ 
  2777        |     |     |     |     |     +--+ if((Token2-&gt;TokId == tid_LineEnd)&amp;&amp;(BrLevel &lt; 0)){ | 
              |     |     |     |     |     |  +--+-------------------------------------------------+ 
  2778        |     |     |     |     |     |     +--- BrLevel = 0;
              |     |     |     |     |     |   +-+---+ 
  2779        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |   +-+---+ 
  2780        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
  2781        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
  2782        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------+ 
  2783        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-----------------+ 
  2784        |     |     |  case tid_END:  | 
              |     |     +-----------------+ 
  2785        |     |     +--- NestLevel--;
              |     |     |  +------------------------------+ 
  2786        |     |     +--+ if(ModuleNest == NestLevel){ | 
              |     |     |  +--+---------------------------+ 
  2787        |     |     |     +--- ModuleNest = -1;
              |     |     |   +-+---+ 
  2788        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +------------------------------------+ 
  2789        |     |     +--+ for(; i &lt; TokenList-&gt;Count ;i++){  | 
              |     |     |  +--+---------------------------------+ 
  2790        |     |     |     +--- Token2 = (TToken *)TokenList-&gt;Items[i];
              |     |     |     |  +------------------------------------+ 
  2791        |     |     |     +--+ if(Token2-&gt;TokId == tid_LineEnd){  | 
              |     |     |     |  +--+---------------------------------+ 
              |     |     |     |     |  +----------------------------------------------------------------+ 
  2792        |     |     |     |     +--+ break; // LineEndまでスキップ END TYPE , END FUNCTION 等の対応 | 
              |     |     |     |     |  +----------------------------------------------------------------+ 
              |     |     |     |   +-+---+ 
  2793        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
  2794        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------+ 
  2795        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +---------------------------------------+ 
  2796        |     |     |  case tid_CONTAINS:      // CONTAINS  | 
              |     |     +---------------------------------------+ 
              |     |     |  +--------+ 
  2797        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-----------+ 
  2798        |     |     |  default: | 
              |     |     +-----------+ 
              |     |     |  +--------+ 
  2799        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
  2800        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +--------------------------------------------------+ 
  2801        |     +--+ if(Token-&gt;Script != NULL){  // スクリプトあり。  | 
              |     |  +--+-----------------------------------------------+ 
  2802        |     |     +--- Script = (TScript *)Token-&gt;Script;
              |     |     |  +------------------------------+ 
  2803        |     |     +--+ if(LastMoudleDefPos != -1){  | 
              |     |     |  +--+---------------------------+ 
  2804        |     |     |     +--- // USE文挿入位置を追加する。
  2805        |     |     |     +--- InsertUsePosList-&gt;Add((void *)(long)LastMoudleDefPos);
  2806        |     |     |     +--- LastMoudleDefPos = -1;
              |     |     |   +-+---+ 
  2807        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  2808        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  2809        |   |  }  | 
              |   +-----+ 
            +-+---+ 
  2810      |  }  | 
            +-----+ 
</pre>


</body>
</html>
