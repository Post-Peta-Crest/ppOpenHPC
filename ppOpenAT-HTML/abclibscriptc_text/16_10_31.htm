
<html>
<head>
<title>OutputAutoExecCode_C メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.10.31. OutputAutoExecCode_C メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>OutputAutoExecCode_C</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>TuneRegion.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>5082</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TTuneRegion</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>public</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>void OutputAutoExecCode_C ( FILE * fp , FILE * fpOutHeader )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>時間計測を行うための ATexec サブルーチンのコードの生成を行う。</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap></td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap>fp  出力先ファイルポインタ</td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap></td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_4_7.htm">TPass5::MakeControlCode_C</a></td>
<td nowrap><a href="5_6.htm">pass5.cpp</a></td>
<td nowrap><a href="16_4_7.htm">440</a></td>
</tr>
</table>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TStringList::Add</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>83</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_5_4.htm">TScript::GetATExecArgStr</a></td>
<td nowrap><a href="5_4.htm">pass3.cpp</a></td>
<td nowrap><a href="16_5_4.htm">663</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_11_3.htm">TValData::GetDefStr_C</a></td>
<td nowrap><a href="5_3.htm">pass2.cpp</a></td>
<td nowrap><a href="16_11_3.htm">2618</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap><a href="16_10_20.htm">TTuneRegion::GetPrePostSubregionStr</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_20.htm">12413</a></td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>TList::IndexOf</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>68</td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap><a href="16_10_24.htm">TTuneRegion::IsATExecArg</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_24.htm">12909</a></td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>LowerCase</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>109</td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>Trim</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>105</td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>c_str</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>10</td>
<td nowrap>find</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>11</td>
<td nowrap>fprintf</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>12</td>
<td nowrap>length</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>13</td>
<td nowrap>printf</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>14</td>
<td nowrap>strlen</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>15</td>
<td nowrap>substr</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
</table>

<p></p>
参照外部変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>MainF</td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap>53</td>
</tr>
</table>

<p></p>
参照メンバ変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TTuneRegion::AccordingStr</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>201</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>TTuneRegion::ArgValList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>207</td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap>TTuneRegion::BaseValList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>216</td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>TTuneRegion::CaseCount</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>209</td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>TTuneRegion::FittingDegree</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>253</td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap>TTuneRegion::FittingDspline</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>248</td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>TTuneRegion::FittingType</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>251</td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>TTuneRegion::FuncName</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>193</td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>TTuneRegion::Name</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>192</td>
</tr>
<tr>
<td nowrap>10</td>
<td nowrap>TTuneRegion::SampledList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>254</td>
</tr>
<tr>
<td nowrap>11</td>
<td nowrap>TTuneRegion::SubRegionList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>211</td>
</tr>
<tr>
<td nowrap>12</td>
<td nowrap>TTuneRegion::TokenList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>187</td>
</tr>
<tr>
<td nowrap>13</td>
<td nowrap>TTuneRegion::TuneGroup</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>195</td>
</tr>
<tr>
<td nowrap>14</td>
<td nowrap>TTuneRegion::TuneGroupName</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>196</td>
</tr>
<tr>
<td nowrap>15</td>
<td nowrap>TTuneRegion::UseAccordingF</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>199</td>
</tr>
<tr>
<td nowrap>16</td>
<td nowrap>TTuneRegion::ValDataList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>188</td>
</tr>
<tr>
<td nowrap>17</td>
<td nowrap>TTuneRegion::variedFromValue</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>235</td>
</tr>
<tr>
<td nowrap>18</td>
<td nowrap>TTuneRegion::variedStepValue</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>237</td>
</tr>
<tr>
<td nowrap>19</td>
<td nowrap>TTuneRegion::variedToValue</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>236</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_5_1.htm">TScript</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_12.htm">pass3.h</a></td>
<td nowrap><a href="16_5_1.htm">209</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_7_1.htm">TStringList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_7_1.htm">74</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_8_1.htm">TSubRegion</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap><a href="16_8_1.htm">375</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap><a href="16_9_1.htm">TToken</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="16_9_1.htm">294</a></td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap><a href="16_11_1.htm">TValData</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_11.htm">pass2.h</a></td>
<td nowrap><a href="16_11_1.htm">106</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +--------------------------------------------------------------------+ 
  5082  +--+ void TTuneRegion::OutputAutoExecCode_C(FILE *fp,FILE *fpOutHeader) | 
  5083     | {                                                                  | 
           +--+-----------------------------------------------------------------+ 
  5084        +--- int i,j,k;
  5085        +--- string s;
  5086        +--- TValData *ValData;
  5087        +--- TToken *Token;
  5088        +--- int CaseArrayCount;
  5089        +--- int BaseValIdx;
  5090        +--- string ValName;
  5091        +--- string BaseValName;
  5092        +--- string iBsetSw1Str;
  5093        +--- TStringList *DefValNameList;
  5094        +--- string ArgStr;
  5095        |    
  5096        +--- bool VisualF = MainF-&gt;VisualF;
  5097        |    
  5098        +--- DefValNameList = new TStringList;
  5099        +--- BaseValName = BaseValList-&gt;Strings[0];
  5100        +--- CaseArrayCount = CaseCount;
              |  +------------------------+ 
  5101        +--+ if(FittingType != 0){  | 
              |  +--+---------------------+ 
  5102        |     +--- CaseArrayCount = SampledList-&gt;Count;
              |   +-+---+ 
  5103        |   |  }  | 
              |   +-----+ 
  5104        +--- fprintf(fp,&quot;//==============================================================\n&quot;);
  5105        +--- fprintf(fp,&quot;//==== %s Optimization Routines\n&quot;,TuneGroupName.c_str());
  5106        +--- fprintf(fp,&quot;//==============================================================\n&quot;);
              |  +------------------------------+ 
  5107        +--+ if(TuneGroup != tgDynamic){  | 
              |  +--+---------------------------+ 
              |     |  +----------------------------------------+ 
  5108        |     +--+ if(MainF-&gt;Call_ATExec_Script == NULL){ | 
              |     |  +--+-------------------------------------+ 
  5109        |     |     +--- TScript *Script = new TScript(MainF-&gt;TokenList,0,NULL,ValDataList);
  5110        |     |     +--- ArgStr = Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);
  5111        |     |     +--- fprintf(fp,&quot;int OAT_ATexec%s%s(char *OAT_Routines%s)\n&quot;,TuneGroupName.c_str(),
  5112        |     |     |        Name.c_str(),ArgStr.c_str());                                              
  5113        |     |     +--- fprintf(fpOutHeader,&quot;int OAT_ATexec%s%s(char *OAT_Routines%s);\n&quot;,TuneGroupName.c_str(),
  5114        |     |     |        Name.c_str(),ArgStr.c_str());                                                        
  5115        |     |     +--- delete Script;
  5116        |     |     +--- //          fprintf(fp,&quot;OAT_ATexec%s%s(char *OAT_Routines)\n&quot;,TuneGroupName.c_str(),Name.c_str());
              |     |   +-+---+ 
  5117        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
  5117        |     |   |  else{  | 
              |     |   +-+-------+ 
  5118        |     |     +--- ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);
  5119        |     |     +--- fprintf(fp,&quot;int OAT_ATexec%s%s(char *OAT_Routines%s)\n&quot;,TuneGroupName.c_str(),
  5120        |     |     |        Name.c_str(),ArgStr.c_str());                                              
  5121        |     |     +--- fprintf(fpOutHeader,&quot;int OAT_ATexec%s%s(char *OAT_Routines%s);\n&quot;,TuneGroupName.c_str(),
  5122        |     |     |        Name.c_str(),ArgStr.c_str());                                                        
              |     |   +-+---+ 
  5123        |     |   |  }  | 
              |     |   +-----+ 
  5124        |     +--- iBsetSw1Str = &quot;iBestSw1&quot;;
              |   +-+---+ 
  5125        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5125        |   |  else{  | 
              |   +-+-------+ 
              |     |  +----------------------------------------+ 
  5126        |     +--+ if(MainF-&gt;Call_ATExec_Script == NULL){ | 
              |     |  +--+-------------------------------------+ 
  5127        |     |     +--- TScript *Script = new TScript(MainF-&gt;TokenList,0,NULL,ValDataList);
  5128        |     |     +--- ArgStr = Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);
  5129        |     |     +--- /*
  5130        |     |     |                fprintf(fp,&quot;int OAT_ATexec%s%s(char *OAT_Routines,int %s,int *iBestSw1)\n&quot;,            
  5131        |     |     |                    TuneGroupName.c_str(),Name.c_str(),BaseValName.c_str());                           
  5132        |     |     |                fprintf(fpOutHeader,&quot;int OAT_ATexec%s%s(char *OAT_Routines,int %s,int *iBestSw1);\n&quot;,  
  5133        |     |     |                    TuneGroupName.c_str(),Name.c_str(),BaseValName.c_str());                           
  5134        |     |     |    */                                                                                                 
  5135        |     |     +--- fprintf(fp,&quot;int OAT_ATexec%s%s(char *OAT_Routines,int *iBestSw1%s)\n&quot;,
  5136        |     |     |        TuneGroupName.c_str(),Name.c_str(),ArgStr.c_str());                
  5137        |     |     +--- fprintf(fpOutHeader,&quot;int OAT_ATexec%s%s(char *OAT_Routines,int *iBestSw1%s);\n&quot;,
  5138        |     |     |        TuneGroupName.c_str(),Name.c_str(),ArgStr.c_str());                          
  5139        |     |     +--- delete Script;
              |     |   +-+---+ 
  5140        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
  5140        |     |   |  else{  | 
              |     |   +-+-------+ 
  5141        |     |     +--- ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);
  5142        |     |     +--- /*
  5143        |     |     |                fprintf(fp,&quot;int OAT_ATexec%s%s(char *OAT_Routines,int %s,int *iBestSw1%s)\n&quot;,            
  5144        |     |     |                    TuneGroupName.c_str(),Name.c_str(),BaseValName.c_str(),ArgStr.c_str());              
  5145        |     |     |                fprintf(fpOutHeader,&quot;int OAT_ATexec%s%s(char *OAT_Routines,int %s,int *iBestSw1%s);\n&quot;,  
  5146        |     |     |                    TuneGroupName.c_str(),Name.c_str(),BaseValName.c_str(),ArgStr.c_str());              
  5147        |     |     |    */                                                                                                   
  5148        |     |     +--- fprintf(fp,&quot;int OAT_ATexec%s%s(char *OAT_Routines,int *iBestSw1%s)\n&quot;,
  5149        |     |     |        TuneGroupName.c_str(),Name.c_str(),ArgStr.c_str());                
  5150        |     |     +--- fprintf(fpOutHeader,&quot;int OAT_ATexec%s%s(char *OAT_Routines,int *iBestSw1%s);\n&quot;,
  5151        |     |     |        TuneGroupName.c_str(),Name.c_str(),ArgStr.c_str());                          
  5152        |     |     |    
              |     |   +-+---+ 
  5153        |     |   |  }  | 
              |     |   +-----+ 
  5154        |     +--- iBsetSw1Str = &quot;*iBestSw1&quot;;
              |   +-+---+ 
  5155        |   |  }  | 
              |   +-----+ 
  5156        |    
  5157        +--- fprintf(fp,&quot;{\n&quot;);
  5158        |    
  5159        +--- //
  5160        |    //  使用される変数の定義を行う。call OAT_ATexe()で明示された引数は 
  5161        |    //  対象外となる。                                                 
  5162        |    //                                                                 
  5163        +--- s = &quot;&quot;;
              |  +--------------------------------------------+ 
  5164        +--+ for(i = 0 ; i &lt; ArgValList-&gt;Count ; i++){  | 
              |  +--+-----------------------------------------+ 
  5165        |     +--- /*
  5166        |     |            if(MainF-&gt;Call_ATExec_Script != NULL){                                 
  5167        |     |                ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(false,&quot;&quot;,&quot;&quot;);  
  5168        |     |                if(ArgStr != &quot;&quot;){                                                  
  5169        |     |                    break;  // ATExecでの引数指定がある場合は定義済として扱う。    
  5170        |     |                }                                                                  
  5171        |     |            }                                                                      
  5172        |     |    */                                                                             
              |     |  +------------------------------------+ 
  5173        |     +--+ if(ArgValList-&gt;Strings[i] == &quot;&quot;){  | 
              |     |  +--+---------------------------------+ 
              |     |     |  +------------+ 
  5174        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
  5175        |     |   |  }  | 
              |     |   +-----+ 
  5176        |     +--- ValData = (TValData *)ArgValList-&gt;Objects[i];
  5177        |     +--- ValName = ValData-&gt;Str;
              |     |  +------------------------------------------------------------------------+ 
  5178        |     +--+ for(BaseValIdx = 0 ; BaseValIdx &lt; BaseValList-&gt;Count ; BaseValIdx++){  | 
              |     |  +--+---------------------------------------------------------------------+ 
              |     |     |  +--------------------------------------------------+ 
  5179        |     |     +--+ if(BaseValList-&gt;Strings[BaseValIdx] == ValName){ | 
              |     |     |  +--+-----------------------------------------------+ 
              |     |     |     |  +--------+ 
  5180        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
  5181        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  5182        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------------------------------------+ 
  5183        |     +--+ if((BaseValIdx &lt; BaseValList-&gt;Count)&amp;&amp;(BaseValIdx != 0)){  | 
              |     |  +--+---------------------------------------------------------+ 
              |     |     |  +------------+ 
  5184        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
  5185        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------+ 
  5186        |     +--+ if(TuneGroup == tgDynamic){  | 
              |     |  +--+---------------------------+ 
              |     |     |  +--------------------------------------+ 
  5187        |     |     +--+ if(BaseValIdx &lt; BaseValList-&gt;Count){ | 
              |     |     |  +--+-----------------------------------+ 
              |     |     |     |  +------------+ 
  5188        |     |     |     +--+ continue;  | 
              |     |     |     |  +------------+ 
              |     |     |   +-+---+ 
  5189        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  5190        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------+ 
  5191        |     +--+ if(IsATExecArg(ValData)){  | 
              |     |  +--+-------------------------+ 
              |     |     |  +------------------------------+ 
  5192        |     |     +--+ continue; // ATExec() の引数 | 
              |     |     |  +------------------------------+ 
              |     |   +-+---+ 
  5193        |     |   |  }  | 
              |     |   +-----+ 
  5194        |     +--- s = &quot;\t&quot;+ValData-&gt;GetDefStr_C()+ValData-&gt;Str;
  5195        |     +--- //      s += &quot; &quot; + ValData-&gt;Str;
  5196        |     +--- DefValNameList-&gt;Add(ValData-&gt;Str);
              |     |  +--------------------------------------------------------------------+ 
  5197        |     +--+ for(j = ValData-&gt;ArrayDefPosS ; j &lt; ValData-&gt;ArrayDefPosE ; j++){  | 
              |     |  +--+-----------------------------------------------------------------+ 
  5198        |     |     +--- Token = (TToken *)TokenList-&gt;Items[j];
  5199        |     |     +--- // Change for N or n 2007/1/19
  5200        |     |     +--- ValName = Token-&gt;OrgStr;
              |     |     |  +------------------------------------------------------+ 
  5201        |     |     +--+ if((Token-&gt;TokId == -1)||(Token-&gt;TokId == tid_Val)){ | 
              |     |     |  +--+---------------------------------------------------+ 
              |     |     |     |  +------------------------------------------------------------------------+ 
  5202        |     |     |     +--+ for(BaseValIdx = 0 ; BaseValIdx &lt; BaseValList-&gt;Count ; BaseValIdx++){  | 
              |     |     |     |  +--+---------------------------------------------------------------------+ 
              |     |     |     |     |  +--------------------------------------------------+ 
  5203        |     |     |     |     +--+ if(BaseValList-&gt;Strings[BaseValIdx] == ValName){ | 
              |     |     |     |     |  +--+-----------------------------------------------+ 
              |     |     |     |     |     |  +--------+ 
  5204        |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |  +--------+ 
              |     |     |     |     |   +-+---+ 
  5205        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
  5206        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
  5207        |     |     |     +--- /* 引数渡しになｔったので、基本パラメータの名前変更は、不要のはず。
  5208        |     |     |     |                    if(BaseValIdx &lt; BaseValList-&gt;Count){                                         
  5209        |     |     |     |                        ValName = BaseValList-&gt;Strings[0]+BaseValList-&gt;Strings[0]; // Exp. N-&gt;NN 
  5210        |     |     |     |                    }                                                                            
  5211        |     |     |     |    */                                                                                           
              |     |     |   +-+---+ 
  5212        |     |     |   |  }  | 
              |     |     |   +-----+ 
  5213        |     |     +--- s += ValName;
              |     |   +-+---+ 
  5214        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +--------------+ 
  5215        |     +--+ if(s != &quot;&quot;){ | 
              |     |  +--+-----------+ 
  5216        |     |     +--- fprintf(fp,&quot;%s;\n&quot;,s.c_str());  // １行ごとに出力
              |     |   +-+---+ 
  5217        |     |   |  }  | 
              |     |   +-----+ 
  5218        |     +--- //      fprintf(fp,&quot;%s;\n&quot;,s.c_str());
              |   +-+---+ 
  5219        |   |  }  | 
              |   +-----+ 
              |  +------------------------+ 
  5220        +--+ if(FittingType != 0){  | 
              |  +--+---------------------+ 
  5221        |     +--- fprintf(fp,&quot;//     !!!!!! fitting用\n&quot;);
  5222        |     +--- fprintf(fp,&quot;//     === for estimation using Least Square Method\n&quot;);
  5223        |     +--- fprintf(fp,&quot;//        ===  for sumipling data\n&quot;);
  5224        |     +--- fprintf(fp,&quot;\tdouble xDim[OATLSM_MAX_N][OATLSM_MAX_NPARM];\n&quot;);
  5225        |     +--- fprintf(fp,&quot;\tdouble yEst[OATLSM_MAX_N][OATLSM_MAX_NPARM];\n&quot;);
  5226        |     +--- fprintf(fp,&quot;\tdouble x[OATLSM_MAX_N];\n&quot;);
  5227        |     +--- fprintf(fp,&quot;\tdouble y[OATLSM_MAX_N];\n&quot;);
  5228        |     +--- fprintf(fp,&quot;//        === for target coefficients\n&quot;);
  5229        |     +--- fprintf(fp,&quot;\tdouble a_lsm[OATLSM_MAX_M+1];\n&quot;);
  5230        |     +--- fprintf(fp,&quot;\tdouble aa_lsm[OATLSM_MAX_M+1][OATLSM_MAX_NPARM];\n&quot;);
  5231        |     +--- fprintf(fp,&quot;\tint nparm,n_lsm,nsamp,m_lsm,isamp_indx;\n&quot;);
  5232        |     +--- fprintf(fp,&quot;\tint isw,iii,idummy;\n&quot;);
  5233        |     +--- fprintf(fp,&quot;\tFILE *fp10;\n&quot;);
  5234        |     |    
  5235        |     +--- fprintf(fp,&quot;//     !!!!!! fitting用終り\n&quot;);
              |   +-+---+ 
  5236        |   |  }  | 
              |   +-----+ 
  5237        +--- fprintf(fp,&quot;\tint iusw1;\n&quot;);
  5238        +--- fprintf(fp,&quot;\tint F1[%d];\n&quot;,CaseArrayCount);
  5239        +--- fprintf(fp,&quot;\tFILE *fp11;\n&quot;);
  5240        +--- fprintf(fp,&quot;\tFILE *fp12;\n&quot;);
  5241        +--- fprintf(fp,&quot;\tFILE *fp13;\n&quot;);
  5242        +--- fprintf(fp,&quot;\tint iloop_n,iloop_%s;\n&quot;,LowerCase(TuneGroupName).c_str());
  5243        +--- /*
  5244        |        //                                                                       
  5245        |        //  BaseValNameの定義を追加                                              
  5246        |        //  引数として渡す形なので不要。                                         
  5247        |        //                                                                       
  5248        |        if(TuneGroup != tgDynamic){                                              
  5249        |            for(i = 0 ; i &lt; BaseValList-&gt;Count ; i++){                           
  5250        |                ValName = BaseValList-&gt;Strings[i];                               
  5251        |                ValName = LowerCase(ValName);   // 小文字に変換                  
  5252        |                if(DefValNameList-&gt;IndexOf(ValName) != -1){ // すでに定義済み    
  5253        |                    continue;                                                    
  5254        |                }                                                                
  5255        |                DefValNameList-&gt;Add(ValName);                                    
  5256        |                for(k = 0 ; k &lt; ValDataList-&gt;Count ; k++){                       
  5257        |                    ValData = (TValData *)ValDataList-&gt;Items[k];                 
  5258        |                    if(ValData == NULL){                                         
  5259        |                        continue;                                                
  5260        |                    }                                                            
  5261        |                    if(ValName == ValData-&gt;Str){    // 変数で使用ありの場合のみ  
  5262        |                        fprintf(fp,&quot;\tint %s;\n&quot;,ValName.c_str());               
  5263        |                        break;                                                   
  5264        |                    }                                                            
  5265        |                }                                                                
  5266        |            }                                                                    
  5267        |        }                                                                        
  5268        |    */                                                                           
  5269        +--- fprintf(fp,&quot;\n&quot;);
              |  +------------------------------+ 
  5270        +--+ if(TuneGroup != tgDynamic){  | 
              |  +--+---------------------------+ 
  5271        |     +--- fprintf(fp,&quot;\tint iBestSw1;\n&quot;);
              |   +-+---+ 
  5272        |   |  }  | 
              |   +-----+ 
  5273        +--- fprintf(fp,&quot;\n&quot;);
  5274        +--- fprintf(fp,&quot;\tdouble t1, t2, t_all, bt;\n&quot;);
  5275        +--- fprintf(fp,&quot;\tdouble dBestTime1;\n&quot;);
  5276        +--- fprintf(fp,&quot;\n&quot;);
              |  +----------------------------------------------------------------------------------+ 
  5277        +--+ if(MainF-&gt;EECntlF){     // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |  +--+-------------------------------------------------------------------------------+ 
  5278        |     +--- // この定義がないと do While等での型チェックで問題発生していた
  5279        |     +--- fprintf(fp,&quot;\tint OAT_Eecntl_NextIndex:\n&quot;);
  5280        |     +--- fprintf(fp,&quot;\tint OAT_Eecntl_Continue;\n&quot;);
              |   +-+---+ 
  5281        |   |  }  | 
              |   +-----+ 
  5282        |    
              |  +--------------------------------+ 
  5283        +--+ if(VisualF){ // Visualize = ON | 
              |  +--+-----------------------------+ 
  5284        |     +--- // 格納用の ExecState() と読込み用の cbufを確保する。
  5285        |     +--- fprintf(fp,&quot;\tint inum,iloop_vi,LoopCount;\n&quot;);
  5286        |     +--- fprintf(fp,&quot;\tint ExecState[%d];\n&quot;,MainF-&gt;TuneRegionList-&gt;Count);
  5287        |     +--- fprintf(fp,&quot;\tchar cbuf[100];\n&quot;);
  5288        |     +--- fprintf(fp,&quot;\tdouble t_all_sum;\n&quot;);
              |   +-+---+ 
  5289        |   |  }  | 
              |   +-----+ 
  5290        +--- #if 0
  5291        +--- //
  5292        |    // FTN95で値が入っていない場合にエラーになったので値のセットを追加 2009/03/10          
  5293        |    // 本来は PrePro指定等で行う方が正解と思われるが省略時でも動作可能とするために         
  5294        |    // 追加した。パラメータ指定の変数は除く                                                
  5295        |    //                                                                                     
  5296        |    //  Cの場合は不要なのでCurt、#include &lt;xxx.h&gt; 等で定義されている場合が多い。2011/09/08 
  5297        |    //                                                                                     
  5298        +--- fprintf(fp,&quot;\n&quot;);
              |  +--------------------------------------------+ 
  5299        +--+ for(i = 0 ; i &lt; ArgValList-&gt;Count ; i++){  | 
              |  +--+-----------------------------------------+ 
              |     |  +------------------------------------+ 
  5300        |     +--+ if(ArgValList-&gt;Strings[i] == &quot;&quot;){  | 
              |     |  +--+---------------------------------+ 
              |     |     |  +------------+ 
  5301        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
  5302        |     |   |  }  | 
              |     |   +-----+ 
  5303        |     +--- ValData = (TValData *)ArgValList-&gt;Objects[i];
  5304        |     +--- ValName = ValData-&gt;Str;
  5305        |     +--- //
  5306        |     |    // パラメータ文として追加済みと同名の変数は対象外とする。（名前で比較）  
  5307        |     |    // N-&gt;NN の場合の Nは置き換えを行っているため対象外となる。              
  5308        |     |    //                                                                       
              |     |  +----------------------------------------------------------------------------+ 
  5309        |     +--+ for(ParamValIdx = 0 ; ParamValIdx &lt; ParamValList-&gt;Count ; ParamValIdx++){  | 
              |     |  +--+-------------------------------------------------------------------------+ 
              |     |     |  +--------------------------------------------------------------------+ 
  5310        |     |     +--+ if(CompareText(ParamValList-&gt;Strings[ParamValIdx],ValName) == 0){  | 
              |     |     |  +--+-----------------------------------------------------------------+ 
              |     |     |     |  +--------+ 
  5311        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
  5312        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  5313        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------------------+ 
  5314        |     +--+ if(ParamValIdx &lt; ParamValList-&gt;Count){ | 
              |     |  +--+-------------------------------------+ 
              |     |     |  +------------+ 
  5315        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
  5316        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------------------------------------------------+ 
  5317        |     +--+ for(BaseValIdx = 0 ; BaseValIdx &lt; BaseValList-&gt;Count ; BaseValIdx++){  | 
              |     |  +--+---------------------------------------------------------------------+ 
              |     |     |  +------------------------------------------------------------------+ 
  5318        |     |     +--+ if(CompareText(BaseValList-&gt;Strings[BaseValIdx],ValName) == 0){  | 
              |     |     |  +--+---------------------------------------------------------------+ 
              |     |     |     |  +--------+ 
  5319        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
  5320        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  5321        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +--------------------------------------+ 
  5322        |     +--+ if(BaseValIdx &lt; BaseValList-&gt;Count){ | 
              |     |  +--+-----------------------------------+ 
              |     |     |  +------------+ 
  5323        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
  5324        |     |   |  }  | 
              |     |   +-----+ 
  5325        |     +--- //      fprintf(fp,&quot;\t%s = 1;\n&quot;,ValName);
              |     |  +--------------------------------+ 
  5326        |     +--+ if(ValData-&gt;ArrayLevel == 0){  | 
              |     |  +--+-----------------------------+ 
  5327        |     |     +--- fprintf(fp,&quot;\t%s = 0;\n&quot;,ValName.c_str());
              |     |   +-+---+ 
  5328        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
  5328        |     |   |  else{  | 
              |     |   +-+-------+ 
  5329        |     |     +--- fprintf(fp,&quot;\tmemset(%s,sizeof(%s),0);\n&quot;,ValName.c_str(),ValName.c_str());
              |     |   +-+---+ 
  5330        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  5331        |   |  }  | 
              |   +-----+ 
  5332        +--- #endif
  5333        +--- fprintf(fp,&quot;\n&quot;);
  5334        +--- fprintf(fp,&quot;//---- file create\n&quot;);
  5335        +--- fprintf(fp,&quot;//-----------------------------------------\n&quot;);
  5336        +--- fprintf(fp,&quot;\tif(myid == 0){\n&quot;);
  5337        +--- fprintf(fp,&quot;\t\tfp11 = fopen(\&quot;OAT_%s%sParam.dat\&quot;,\&quot;wt\&quot;);\n&quot;,TuneGroupName.c_str(),Name.c_str());
  5338        +--- fprintf(fp,&quot;\t\tfprintf(fp11,\&quot;(%s\\n\&quot;);\n&quot;,Name.c_str());
              |  +------------------------------+ 
  5339        +--+ if(TuneGroup != tgDynamic){  | 
              |  +--+---------------------------+ 
  5340        |     +--- fprintf(fp,&quot;\t\tfprintf(fp11,\&quot;  (OAT_NUMPROCS %%d)\\n\&quot;,OAT_NUMPROCS);\n&quot;);
  5341        |     +--- fprintf(fp,&quot;\t\tfprintf(fp11,\&quot;  (OAT_SAMPDIST %%d)\\n\&quot;,OAT_SAMPDIST);\n&quot;);
              |   +-+---+ 
  5342        |   |  }  | 
              |   +-----+ 
              |  +--------------------------------+ 
  5343        +--+ if(VisualF){ // Visualize = ON | 
              |  +--+-----------------------------+ 
  5344        |     +--- // 格納用の ExecState() の現在の値を読み込む。
  5345        |     +--- fprintf(fp,&quot;\n&quot;);
  5346        |     |    
              |     |  +------------------------------+ 
  5347        |     +--+ if(TuneGroup != tgDynamic){  | 
              |     |  +--+---------------------------+ 
  5348        |     |     +--- fprintf(fp,&quot;\t\tLoopCount = OAT_ENDTUNESIZE-OAT_STARTTUNESIZE;\n&quot;);
  5349        |     |     +--- fprintf(fp,&quot;\t\tLoopCount = LoopCount+OAT_SAMPDIST;\n&quot;);
  5350        |     |     +--- fprintf(fp,&quot;\t\tLoopCount = LoopCount/OAT_SAMPDIST;\n&quot;);
              |     |   +-+---+ 
  5351        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
  5351        |     |   |  else{  | 
              |     |   +-+-------+ 
  5352        |     |     +--- fprintf(fp,&quot;\t\tLoopCount = 1;\n&quot;);
              |     |   +-+---+ 
  5353        |     |   |  }  | 
              |     |   +-----+ 
  5354        |     +--- fprintf(fp,&quot;\n&quot;);
  5355        |     +--- fprintf(fp,&quot;\t\tfp12 = fopen(\&quot;OATATLog.dat\&quot;,\&quot;rt\&quot;);\n&quot;);
  5356        |     +--- fprintf(fp,&quot;\t\tif(fp12 != NULL){\n&quot;);
  5357        |     +--- fprintf(fp,&quot;\t\t\tfor(iloop_vi = 0 ; iloop_vi &lt; %d ; iloop_vi++){\n&quot;,MainF-&gt;TuneRegionList-&gt;Count);
  5358        |     +--- fprintf(fp,&quot;\t\t\t\tfgets(cbuf,sizeof(cbuf),fp12);\n&quot;);
  5359        |     +--- fprintf(fp,&quot;\t\t\t\tinum = atoi(cbuf);\n&quot;);
  5360        |     +--- fprintf(fp,&quot;\t\t\t\tExecState[iloop_vi] = inum;\n&quot;);
  5361        |     +--- fprintf(fp,&quot;\t\t\t}\n&quot;);
  5362        |     +--- fprintf(fp,&quot;\t\t\tfclose(fp12);\n&quot;);
  5363        |     +--- fprintf(fp,&quot;\t\t}else{\n&quot;);
  5364        |     +--- fprintf(fp,&quot;\t\t\tfor(iloop_vi = 0 ; iloop_vi &lt; %d ; iloop_vi++){\n&quot;,MainF-&gt;TuneRegionList-&gt;Count);
  5365        |     +--- fprintf(fp,&quot;\t\t\t\tExecState[iloop_vi] = 0;\n&quot;);
  5366        |     +--- fprintf(fp,&quot;\t\t\t}\n&quot;);
  5367        |     +--- fprintf(fp,&quot;\t\t}\n&quot;);
  5368        |     +--- fprintf(fp,&quot;\n&quot;);
  5369        |     |    
  5370        |     +--- // 結果Logの書き出し用ファイルをOpen
  5371        |     +--- fprintf(fp,&quot;\t\tfp13 = fopen(\&quot;OATATLog_%s.dat\&quot;,\&quot;wt\&quot;);\n&quot;,Name.c_str());
  5372        |     +--- fprintf(fp,&quot;\t\tfprintf(fp13,\&quot;%%d NUMPROCS\\n\&quot;,OAT_NUMPROCS);\n&quot;);
              |     |  +------------------------------+ 
  5373        |     +--+ if(TuneGroup != tgDynamic){  | 
              |     |  +--+---------------------------+ 
  5374        |     |     +--- fprintf(fp,&quot;\t\tfprintf(fp13,\&quot;%%d OAT_STARTTUNESIZE\\n\&quot;,OAT_STARTTUNESIZE);\n&quot;);
  5375        |     |     +--- fprintf(fp,&quot;\t\tfprintf(fp13,\&quot;%%d OAT_ENDTUNESIZE\\n\&quot;,OAT_ENDTUNESIZE);\n&quot;);
  5376        |     |     +--- fprintf(fp,&quot;\t\tfprintf(fp13,\&quot;%%d OAT_SAMPDIST\\n\&quot;,OAT_SAMPDIST);\n&quot;);
              |     |   +-+---+ 
  5377        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
  5377        |     |   |  else{  | 
              |     |   +-+-------+ 
  5378        |     |     +--- fprintf(fp,&quot;\t\tfprintf(fp13,\&quot;%%d OAT_STARTTUNESIZE\\n\&quot;,N);\n&quot;);
  5379        |     |     +--- fprintf(fp,&quot;\t\tfprintf(fp13,\&quot;%%d OAT_ENDTUNESIZE\\n\&quot;,N);\n&quot;);
  5380        |     |     +--- fprintf(fp,&quot;\t\tfprintf(fp13,\&quot;%%d OAT_SAMPDIST\\n\&quot;,100);\n&quot;);
              |     |   +-+---+ 
  5381        |     |   |  }  | 
              |     |   +-----+ 
  5382        |     +--- fprintf(fp,&quot;\t\tfprintf(fp13,\&quot;%%d EndOfHeader\\n\&quot;,-1);\n&quot;);
  5383        |     +--- fprintf(fp,&quot;\n&quot;);
              |   +-+---+ 
  5384        |   |  }  | 
              |   +-----+ 
  5385        +--- fprintf(fp,&quot;\t}\n&quot;);
  5386        +--- fprintf(fp,&quot;//----------------------------------------\n&quot;);
  5387        +--- fprintf(fp,&quot;\n&quot;);
  5388        +--- fprintf(fp,&quot;//---- Start tune\n&quot;);
  5389        +--- fprintf(fp,&quot;//-----------------------------------------\n&quot;);
              |  +------------------------+ 
  5390        +--+ if(FittingType != 0){  | 
              |  +--+---------------------+ 
              |     |  +--------------------------------------------+ 
  5391        |     +--+ for(i = 0 ; i &lt; SampledList-&gt;Count ; i++){ | 
              |     |  +--+-----------------------------------------+ 
  5392        |     |     +--- //          fprintf(fp,&quot;      F1[%d]=%d\n&quot;,i+1,(int)SampledList-&gt;Items[i]);
  5393        |     |     +--- fprintf(fp,&quot;\t\tF1[%d]=%d;\n&quot;,i,(int)(long)SampledList-&gt;Items[i]);
              |     |   +-+---+ 
  5394        |     |   |  }  | 
              |     |   +-----+ 
  5395        |     +--- fprintf(fp,&quot;\n&quot;);
  5396        |     +--- fprintf(fp,&quot;//    !!!!!! fitting用変数\n&quot;);
  5397        |     +--- fprintf(fp,&quot;//    !!! variedから推定する最大パラメタ組合せ数\n&quot;);
  5398        |     +--- fprintf(fp,&quot;      nparm = %d;\n&quot;,CaseCount);
  5399        |     +--- fprintf(fp,&quot;\n&quot;);
  5400        |     +--- fprintf(fp,&quot;//    !!! パラメタの変化数 / sampled 指定子から算出\n&quot;);
  5401        |     +--- fprintf(fp,&quot;      n_lsm = %d;\n&quot;,SampledList-&gt;Count);
  5402        |     +--- fprintf(fp,&quot;\n&quot;);
  5403        |     +--- fprintf(fp,&quot;//    !!! 行列サイズに関するサンプル点の個数\n&quot;);
  5404        |     +--- fprintf(fp,&quot;      nsamp = 0;\n&quot;);
  5405        |     +--- fprintf(fp,&quot;      for(iloop_n=OAT_STARTTUNESIZE;iloop_n&lt;=OAT_ENDTUNESIZE;iloop_n+=OAT_SAMPDIST){\n&quot;);
  5406        |     +--- fprintf(fp,&quot;         nsamp = nsamp + 1;\n&quot;);
  5407        |     +--- fprintf(fp,&quot;      }&quot;);
  5408        |     +--- fprintf(fp,&quot;\n&quot;);
  5409        |     +--- fprintf(fp,&quot;\n&quot;);
  5410        |     +--- fprintf(fp,&quot;\n&quot;);
  5411        |     +--- fprintf(fp,&quot;//    !!! fitting least squares で指定した次元数\n&quot;);
  5412        |     +--- fprintf(fp,&quot;      m_lsm = %d;\n&quot;,FittingDegree);
  5413        |     +--- fprintf(fp,&quot;\n&quot;);
  5414        |     +--- fprintf(fp,&quot;//    !!! サンプリング点インデックス初期化\n&quot;);
  5415        |     +--- fprintf(fp,&quot;      isamp_indx = 0;\n&quot;);
  5416        |     +--- fprintf(fp,&quot;\n&quot;);
  5417        |     +--- fprintf(fp,&quot;//    print *, \&quot;nparm = \&quot;, nparm\n&quot;);
  5418        |     +--- fprintf(fp,&quot;//    print *, \&quot;nsamp = \&quot;, nsamp\n&quot;);
  5419        |     +--- fprintf(fp,&quot;//    print *, \&quot;m_lsm = \&quot;, m_lsm\n&quot;);
  5420        |     +--- fprintf(fp,&quot;\n&quot;);
              |   +-+---+ 
  5421        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5421        |   |  else{  | 
              |   +-+-------+ 
              |     |  +------------------------------------+ 
  5422        |     +--+ for(i = 1 ; i &lt;= CaseCount ; i++){ | 
              |     |  +--+---------------------------------+ 
  5423        |     |     +--- //          fprintf(fp,&quot;\tF1[%d]=%d;\n&quot;,i,i);
  5424        |     |     +--- fprintf(fp,&quot;\tF1[%d] = %d;\n&quot;,i-1,i);
              |     |   +-+---+ 
  5425        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  5426        |   |  }  | 
              |   +-----+ 
  5427        +--- fprintf(fp,&quot;\n&quot;);
  5428        +--- //
  5429        |    //  キャッシュミスヒット対応のために１回動作させてからの実行を追加 2011/08/02  
  5430        |    //                                                                             
  5431        +--- fprintf(fp,&quot;\tfor(iloop_%s=0;iloop_%s&lt;%d;iloop_%s++){\n&quot;,
  5432        |        LowerCase(TuneGroupName).c_str(),LowerCase(TuneGroupName).c_str(), 
  5433        |        CaseArrayCount,LowerCase(TuneGroupName).c_str());                  
  5434        +--- fprintf(fp,&quot;\n&quot;);
  5435        +--- fprintf(fp,&quot;\t\tiusw1 = F1[iloop_%s];\n&quot;,LowerCase(TuneGroupName).c_str());
  5436        +--- fprintf(fp,&quot;\n&quot;);
  5437        +--- s = &quot;\t\t&quot;+FuncName + &quot;(&quot;;
              |  +--------------------------------------------+ 
  5438        +--+ for(i = 0 ; i &lt; ArgValList-&gt;Count ; i++){  | 
              |  +--+-----------------------------------------+ 
              |     |  +------------------------------------+ 
  5439        |     +--+ if(ArgValList-&gt;Strings[i] == &quot;&quot;){  | 
              |     |  +--+---------------------------------+ 
              |     |     |  +------------+ 
  5440        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
  5441        |     |   |  }  | 
              |     |   +-----+ 
  5442        |     +--- ValData = (TValData *)ArgValList-&gt;Objects[i];
  5443        |     +--- ValName = ValData-&gt;Str;
              |     |  +----------------------------------------------------------------------+ 
  5444        |     +--+ if((BaseValList-&gt;Count &gt; 0)&amp;&amp;(BaseValList-&gt;Strings[0] == ValName)){  | 
              |     |  +--+-------------------------------------------------------------------+ 
  5445        |     |     +--- s += &quot;OAT_STARTTUNESIZE,&quot;;
              |     |   +-+---+ 
  5446        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
  5446        |     |   |  else{  | 
              |     |   +-+-------+ 
  5447        |     |     +--- #if 0
  5448        |     |     +--- string s2 = ValData-&gt;GetDefStr_C();
              |     |     |  +------------------------------------------+ 
  5449        |     |     +--+ for(int j = 0 ; j &lt; s2.length() ; j++){  | 
              |     |     |  +--+---------------------------------------+ 
              |     |     |     |  +------------------+ 
  5450        |     |     |     +--+ if(s2[j] &gt; ' '){ | 
              |     |     |     |  +--+---------------+ 
  5451        |     |     |     |     +--- s2.erase(j,s2.length());
              |     |     |     |     |  +--------+ 
  5452        |     |     |     |     +--+ break; | 
              |     |     |     |     |  +--------+ 
              |     |     |     |   +-+---+ 
  5453        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
  5454        |     |     |   |  }  | 
              |     |     |   +-----+ 
  5455        |     |     +--- s += s2+ValData-&gt;Str + &quot;,&quot;;
  5456        |     |     +--- #else
  5457        |     |     +--- s += ValData-&gt;Str + &quot;,&quot;;
  5458        |     |     +--- #endif
              |     |   +-+---+ 
  5459        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  5460        |   |  }  | 
              |   +-----+ 
  5461        +--- s += &quot;iusw1);&quot;;
  5462        +--- fprintf(fp,&quot;%s\n&quot;,s.c_str());
  5463        +--- fprintf(fp,&quot;\t}\n&quot;);
  5464        +--- fprintf(fp,&quot;\n&quot;);
  5465        |    
              |  +--------------------------------+ 
  5466        +--+ if(VisualF){ // Visualize = ON | 
              |  +--+-----------------------------+ 
  5467        |     +--- fprintf(fp,&quot;\tt_all_sum = 0;\n&quot;); // １秒以上のチェック
              |   +-+---+ 
  5468        |   |  }  | 
              |   +-----+ 
              |  +------------------------------+ 
  5469        +--+ if(TuneGroup != tgDynamic){  | 
              |  +--+---------------------------+ 
  5470        |     +--- fprintf(fp,&quot;\tfor(iloop_n=OAT_STARTTUNESIZE;iloop_n&lt;=OAT_ENDTUNESIZE;iloop_n+=OAT_SAMPDIST){\n&quot;);
              |   +-+---+ 
  5471        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5471        |   |  else{  | 
              |   +-+-------+ 
  5472        |     +--- fprintf(fp,&quot;\tiloop_n=0;\n&quot;);
              |   +-+---+ 
  5473        |   |  }  | 
              |   +-----+ 
  5474        +--- fprintf(fp,&quot;\n&quot;);
              |  +--------------------------------------------------------------------------------------+ 
  5475        +--+ if(!MainF-&gt;EECntlF){        // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |  +--+-----------------------------------------------------------------------------------+ 
  5476        |     +--- fprintf(fp,&quot;\t\tfor(iloop_%s=0;iloop_%s&lt;%d;iloop_%s++){\n&quot;,
  5477        |     |        LowerCase(TuneGroupName).c_str(),LowerCase(TuneGroupName).c_str(), 
  5478        |     |        CaseArrayCount,LowerCase(TuneGroupName).c_str());                  
  5479        |     +--- fprintf(fp,&quot;\n&quot;);
  5480        |     +--- fprintf(fp,&quot;\t\t\tiusw1 = F1[iloop_%s];\n&quot;,LowerCase(TuneGroupName).c_str());
  5481        |     +--- fprintf(fp,&quot;\n&quot;);
              |   +-+---+ 
  5482        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5482        |   |  else{  | 
              |   +-+-------+ 
  5483        |     +--- fprintf(fp,&quot;\t\tOAT_Eecntl_Init(F1,%d);\n&quot;,CaseArrayCount);
  5484        |     +--- fprintf(fp,&quot;\t\t%s = 0;\n&quot;,iBsetSw1Str.c_str());
  5485        |     +--- fprintf(fp,&quot;\t\twhile (1){\n&quot;);
  5486        |     +--- fprintf(fp,&quot;\t\t\tiusw1 = OAT_Eecntl_NextIndex();\n&quot;);
  5487        |     +--- fprintf(fp,&quot;\t\t\tif (iusw1 &lt; 1 ){ break; }\n&quot;);
  5488        |     +--- fprintf(fp,&quot;\n&quot;);
              |   +-+---+ 
  5489        |   |  }  | 
              |   +-----+ 
  5490        |    
              |  +------------------------------+ 
  5491        +--+ if(TuneGroup != tgDynamic){  | 
              |  +--+---------------------------+ 
              |     |  +--------------------------------------------+ 
  5492        |     +--+ for(i = 0 ; i &lt; BaseValList-&gt;Count ; i++){ | 
              |     |  +--+-----------------------------------------+ 
  5493        |     |     +--- ValName = BaseValList-&gt;Strings[i];
  5494        |     |     +--- //          ValName = LowerCase(ValName);   // 小文字に変換
              |     |     |  +--------------------------------------------+ 
  5495        |     |     +--+ for(k = 0 ; k &lt; ValDataList-&gt;Count ; k++){ | 
              |     |     |  +--+-----------------------------------------+ 
  5496        |     |     |     +--- ValData = (TValData *)ValDataList-&gt;Items[k];
              |     |     |     |  +----------------------+ 
  5497        |     |     |     +--+ if(ValData == NULL){ | 
              |     |     |     |  +--+-------------------+ 
              |     |     |     |     |  +------------+ 
  5498        |     |     |     |     +--+ continue;  | 
              |     |     |     |     |  +------------+ 
              |     |     |     |   +-+---+ 
  5499        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |     |  +--------------------------------------------------------------+ 
  5500        |     |     |     +--+ if(ValName == ValData-&gt;Str){    // 変数で使用ありの場合のみ  | 
              |     |     |     |  +--+-----------------------------------------------------------+ 
  5501        |     |     |     |     +--- fprintf(fp,&quot;\t\t\t%s = iloop_n;\n&quot;,ValName.c_str());
              |     |     |     |     |  +--------+ 
  5502        |     |     |     |     +--+ break; | 
              |     |     |     |     |  +--------+ 
              |     |     |     |   +-+---+ 
  5503        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
  5504        |     |     |   |  }  | 
              |     |     |   +-----+ 
  5505        |     |     +--- //          fprintf(fp,&quot;\t\t\t%s = iloop_n;\n&quot;,ValName.c_str());
              |     |   +-+---+ 
  5506        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  5507        |   |  }  | 
              |   +-----+ 
  5508        +--- fprintf(fp,&quot;\n&quot;);
  5509        |    
  5510        +--- //d-spline用追加部分---------------
  5511        +--- printf(&quot;tune %d \n&quot;,FittingDspline);
  5512        +--- /*******************************************************************************************************/
  5513        |    //                                                                                                         
  5514        |    //Kogakuin Irie                                                                                            
  5515        |    //実行時d-Splineとその他のd-Splineの判断方法を変更，および2次元用追加部分                                  
  5516        |    //region start 文からチューニングタイミングを取得                                                          
  5517        |    //                                                                                                         
  5518        |    //既存コードはコメントアウト                                                                               
  5519        |    //                                                                                                         
  5520        +--- //  if(FittingDspline == 1){
  5521        |    //      fprintf(fp,&quot;\t\t\tiBestSw1 = dspgiv(%d&quot;,CaseArrayCount);                             
  5522        |    //                                                                                           
  5523        |    //                                                                                           
  5524        |    //                                                                                           
  5525        |    //              if(MainF-&gt;Call_ATExec_Script == NULL){                                       
  5526        |    //                  TScript *Script = new TScript(MainF-&gt;TokenList,0,NULL,ValDataList);      
  5527        |    //                  string ArgStr = Script-&gt;GetATExecArgStr(false,&quot;&quot;,&quot;&quot;);                    
  5528        |    //                  fprintf(fp,&quot;%s);\n&quot;,ArgStr.c_str());                                     
  5529        |    //                  delete Script;                                                           
  5530        |    //              }else{                                                                       
  5531        |    //                  string ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(false,&quot;&quot;,&quot;&quot;); 
  5532        |    //                  fprintf(fp,&quot;%s);\n&quot;,ArgStr.c_str());                                     
  5533        |    //              }                                                                            
  5534        |    //                                                                                           
  5535        |    //      fprintf(fp,&quot;\t\t\tbreak;\n&quot;);                                                        
  5536        |    //                                                                                           
  5537        |    //  }                                                                                        
  5538        |                                                                                                 
  5539        |    //d-spline用追加部分　ここまで---------------                                                
  5540        |                                                                                                 
              |  +------------------------------+ 
  5541        +--+ if(TuneGroup != tgDynamic){  | 
              |  +--+---------------------------+ 
              |     |  +--------------------------+ 
  5542        |     +--+ if(FittingDspline == 1){ | 
              |     |  +--+-----------------------+ 
  5543        |     |     +--- fprintf(fp,&quot;\t\t\tiBestSw1 = dspgiv(%d&quot;,CaseArrayCount);
  5544        |     |     |    
              |     |     |  +----------------------------------------+ 
  5545        |     |     +--+ if(MainF-&gt;Call_ATExec_Script == NULL){ | 
              |     |     |  +--+-------------------------------------+ 
  5546        |     |     |     +--- TScript *Script = new TScript(MainF-&gt;TokenList,0,NULL,ValDataList);
  5547        |     |     |     +--- string ArgStr = Script-&gt;GetATExecArgStr(false,&quot;&quot;,&quot;&quot;);
  5548        |     |     |     +--- fprintf(fp,&quot;%s);\n&quot;,ArgStr.c_str());
  5549        |     |     |     +--- delete Script;
              |     |     |   +-+---+ 
  5550        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------+ 
  5550        |     |     |   |  else{  | 
              |     |     |   +-+-------+ 
  5551        |     |     |     +--- string ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(false,&quot;&quot;,&quot;&quot;);
  5552        |     |     |     +--- fprintf(fp,&quot;%s);\n&quot;,ArgStr.c_str());
              |     |     |   +-+---+ 
  5553        |     |     |   |  }  | 
              |     |     |   +-----+ 
  5554        |     |     |    
  5555        |     |     +--- fprintf(fp,&quot;\t\t\tbreak;\n&quot;);
              |     |   +-+---+ 
  5556        |     |   |  }  | 
              |     |   +-----+ 
  5557        |     |    
              |     |  +--------------------------+ 
  5558        |     +--+ if(FittingDspline == 2){ | 
              |     |  +--+-----------------------+ 
  5559        |     |     |    
  5560        |     |     +--- int CaseArrayCount2[2];
  5561        |     |     +--- CaseArrayCount2[0] = (int)( (variedToValue[0] - variedFromValue[0]) / variedStepValue[0] + 1 );
  5562        |     |     +--- CaseArrayCount2[1] = (int)( (variedToValue[1] - variedFromValue[1]) / variedStepValue[1] + 1 );
  5563        |     |     |    
  5564        |     |     +--- fprintf(fp,&quot;\t\t\tiBestSw1 = dsp2giv%s%s(%d,%d,%d&quot;,TuneGroupName.c_str(),
  5565        |     |     |            Name.c_str(),CaseArrayCount,CaseArrayCount2[0],CaseArrayCount2[1]);  
  5566        |     |     |    
              |     |     |  +----------------------------------------+ 
  5567        |     |     +--+ if(MainF-&gt;Call_ATExec_Script == NULL){ | 
              |     |     |  +--+-------------------------------------+ 
  5568        |     |     |     +--- TScript *Script = new TScript(MainF-&gt;TokenList,0,NULL,ValDataList);
  5569        |     |     |     +--- string ArgStr = Script-&gt;GetATExecArgStr(false,&quot;&quot;,&quot;&quot;);
  5570        |     |     |     +--- fprintf(fp,&quot;%s);\n&quot;,ArgStr.c_str());
  5571        |     |     |     +--- delete Script;
              |     |     |   +-+---+ 
  5572        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------+ 
  5572        |     |     |   |  else{  | 
              |     |     |   +-+-------+ 
  5573        |     |     |     +--- string ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(false,&quot;&quot;,&quot;&quot;);
  5574        |     |     |     +--- fprintf(fp,&quot;%s);\n&quot;,ArgStr.c_str());
              |     |     |   +-+---+ 
  5575        |     |     |   |  }  | 
              |     |     |   +-----+ 
  5576        |     |     |    
  5577        |     |     +--- fprintf(fp,&quot;\t\t\tbreak;\n&quot;);
              |     |   +-+---+ 
  5578        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  5579        |   |  }  | 
              |   +-----+ 
  5580        +--- //
  5581        |    //ここまで                                                                                                 
  5582        |    //                                                                                                         
  5583        |    /*******************************************************************************************************/  
  5584        |                                                                                                               
  5585        +--- s = GetPrePostSubregionStr(0,1);
              |  +--------------+ 
  5586        +--+ if(s != &quot;&quot;){ | 
              |  +--+-----------+ 
  5587        |     +--- fprintf(fp,&quot;%s&quot;,s.c_str());
  5588        |     +--- fprintf(fp,&quot;\n&quot;);
              |   +-+---+ 
  5589        |   |  }  | 
              |   +-----+ 
              |  +------------------+ 
  5590        +--+ if(MainF-&gt;MPIF){ | 
              |  +--+---------------+ 
  5591        |     +--- fprintf(fp,&quot;\t\t\tMPI_BARRIER(MPI_COMM_WORLD, ierr)\n&quot;);
              |   +-+---+ 
  5592        |   |  }  | 
              |   +-----+ 
              |  +----------------------------------+ 
  5593        +--+ if(MainF-&gt;my_timer_start != &quot;&quot;){ | 
              |  +--+-------------------------------+ 
  5594        |     +--- fprintf(fp,&quot;\t\t\t %s();\n&quot;,MainF-&gt;my_timer_start.c_str());
              |   +-+---+ 
  5595        |   |  }  | 
              |   +-----+ 
  5596        +--- //  fprintf(fp,&quot;          t1 = MPI_WTIME()\n&quot;);
  5597        +--- fprintf(fp,&quot;\t\t\tt1 = %s();\n&quot;,MainF-&gt;TimeFunc.c_str());
  5598        +--- fprintf(fp,&quot;\n&quot;);
  5599        |    
              |  +----------------------------------------------------------------------------------+ 
  5600        +--+ if(MainF-&gt;EECntlF){     // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |  +--+-------------------------------------------------------------------------------+ 
  5601        |     +--- fprintf(fp,&quot;\t\t\tiloop_inner = 0;\n&quot;);
  5602        |     +--- fprintf(fp,&quot;\t\t\twhile(OAT_Eecntl_Continue()){\n&quot;);
  5603        |     +--- s = &quot;\t\t\t\t&quot;+FuncName + &quot;(&quot;;
              |   +-+---+ 
  5604        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5604        |   |  else{  | 
              |   +-+-------+ 
  5605        |     +--- s = &quot;\t\t\t&quot;+FuncName + &quot;(&quot;;
              |   +-+---+ 
  5606        |   |  }  | 
              |   +-----+ 
              |  +--------------------------------------------+ 
  5607        +--+ for(i = 0 ; i &lt; ArgValList-&gt;Count ; i++){  | 
              |  +--+-----------------------------------------+ 
              |     |  +------------------------------------+ 
  5608        |     +--+ if(ArgValList-&gt;Strings[i] == &quot;&quot;){  | 
              |     |  +--+---------------------------------+ 
              |     |     |  +------------+ 
  5609        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
  5610        |     |   |  }  | 
              |     |   +-----+ 
  5611        |     +--- ValData = (TValData *)ArgValList-&gt;Objects[i];
  5612        |     +--- #if 0
  5613        |     +--- string s2 = ValData-&gt;GetDefStr_C();
              |     |  +------------------------------------------+ 
  5614        |     +--+ for(int j = 0 ; j &lt; s2.length() ; j++){  | 
              |     |  +--+---------------------------------------+ 
              |     |     |  +------------------+ 
  5615        |     |     +--+ if(s2[j] &gt; ' '){ | 
              |     |     |  +--+---------------+ 
  5616        |     |     |     +--- s2.erase(j,s2.length());
              |     |     |     |  +--------+ 
  5617        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
  5618        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  5619        |     |   |  }  | 
              |     |   +-----+ 
  5620        |     +--- s += s2 + ValData-&gt;Str + &quot;,&quot;;
  5621        |     +--- #else
  5622        |     +--- s += ValData-&gt;Str + &quot;,&quot;;
  5623        |     +--- #endif
              |   +-+---+ 
  5624        |   |  }  | 
              |   +-----+ 
  5625        +--- // Mod 2007/1/19
  5626        +--- //  fprintf(fp,&quot;%siusw1)\n&quot;,s.c_str());
  5627        +--- s += &quot;iusw1);&quot;;
  5628        +--- fprintf(fp,&quot;%s\n&quot;,s.c_str());
              |  +----------------------------------------------------------------------------------+ 
  5629        +--+ if(MainF-&gt;EECntlF){     // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |  +--+-------------------------------------------------------------------------------+ 
  5630        |     +--- fprintf(fp,&quot;\t\t\t\tiloop_inner = iloop_inner + 1;\n&quot;);
  5631        |     +--- fprintf(fp,&quot;\t\t\t}\n&quot;);
              |   +-+---+ 
  5632        |   |  }  | 
              |   +-----+ 
  5633        |    
  5634        +--- fprintf(fp,&quot;\n&quot;);
              |  +------------------+ 
  5635        +--+ if(MainF-&gt;MPIF){ | 
              |  +--+---------------+ 
  5636        |     +--- fprintf(fp,&quot;\t\t\tMPI_BARRIER(MPI_COMM_WORLD,ierr);\n&quot;);
              |   +-+---+ 
  5637        |   |  }  | 
              |   +-----+ 
              |  +----------------------------------+ 
  5638        +--+ if(MainF-&gt;my_timer_stop != &quot;&quot;){  | 
              |  +--+-------------------------------+ 
  5639        |     +--- fprintf(fp,&quot;\t\t\t%s();\n&quot;,MainF-&gt;my_timer_stop.c_str());
              |   +-+---+ 
  5640        |   |  }  | 
              |   +-----+ 
  5641        +--- //  fprintf(fp,&quot;          t2 = MPI_WTIME()\n&quot;);
  5642        +--- fprintf(fp,&quot;\t\t\tt2 = %s();\n&quot;,MainF-&gt;TimeFunc.c_str());
  5643        |    
  5644        +--- fprintf(fp,&quot;\t\t\tt_all = t2 - t1;\n&quot;);
              |  +------------------+ 
  5645        +--+ if(MainF-&gt;MPIF){ | 
              |  +--+---------------+ 
  5646        |     +--- fprintf(fp,&quot;\t\t\tMPI_ALLREDUCE(t_all, bt, 1, MPI_DOUBLE_PRECISION,MPI_MAX, MPI_COMM_WORLD, ierr)\n&quot;);
              |   +-+---+ 
  5647        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5647        |   |  else{  | 
              |   +-+-------+ 
  5648        |     +--- fprintf(fp,&quot;\t\t\tbt = t_all;\n&quot;);
              |   +-+---+ 
  5649        |   |  }  | 
              |   +-----+ 
              |  +--------------------------------------------------------------------------------------+ 
  5650        +--+ if(!MainF-&gt;EECntlF){        // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |  +--+-----------------------------------------------------------------------------------+ 
  5651        |     +--- fprintf(fp,&quot;\t\t\tt_all = bt;\n&quot;);
              |   +-+---+ 
  5652        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5652        |   |  else{  | 
              |   +-+-------+ 
  5653        |     +--- fprintf(fp,&quot;\t\t\tt_all = bt / iloop_inner;\n&quot;);
  5654        |     +--- fprintf(fp,&quot;\t\t\tOAT_Eecntl_Repperf(iusw1, t_all);\n&quot;);
              |   +-+---+ 
  5655        |   |  }  | 
              |   +-----+ 
  5656        +--- fprintf(fp,&quot;\n&quot;);
  5657        |    
  5658        +--- s = GetPrePostSubregionStr(1,1);
              |  +--------------+ 
  5659        +--+ if(s != &quot;&quot;){ | 
              |  +--+-----------+ 
  5660        |     +--- fprintf(fp,&quot;%s&quot;,s.c_str());
  5661        |     +--- fprintf(fp,&quot;\n&quot;);
              |   +-+---+ 
  5662        |   |  }  | 
              |   +-----+ 
  5663        |    
              |  +--------------------------------+ 
  5664        +--+ if(VisualF){ // Visualize = ON | 
              |  +--+-----------------------------+ 
  5665        |     +--- // 0から100(%)までの進行状態の値をセットする。
  5666        |     +--- fprintf(fp,&quot;\t\t\tif(myid == 0){\n&quot;);
  5667        |     +--- fprintf(fp,&quot;\t\t\t\tt_all_sum = t_all_sum + t_all;\n&quot;); // １秒以上のチェック
  5668        |     +--- fprintf(fp,&quot;\t\t\t\tif(t_all_sum &gt;= 1.0){\n&quot;); // １秒以上のチェック
  5669        |     +--- fprintf(fp,&quot;\t\t\t\t\tt_all_sum = 0;\n&quot;); // １秒以上のチェック
  5670        |     +--- fprintf(fp,&quot;\t\t\t\t\tinum = (iloop_n-OAT_STARTTUNESIZE)/OAT_SAMPDIST;\n&quot;);
  5671        |     +--- //      fprintf(fp,&quot;\t\t\t\t\tExecState[%d] = (100*inum+&quot;,MainF-&gt;TuneRegionList-&gt;IndexOf(this)+1);
  5672        |     +--- fprintf(fp,&quot;\t\t\t\t\tExecState[%d] = (100*inum+&quot;,MainF-&gt;TuneRegionList-&gt;IndexOf(this));
  5673        |     +--- fprintf(fp,&quot;100*(iloop_%s-1)/%d)/LoopCount;\n&quot;, LowerCase(TuneGroupName).c_str(),CaseCount);
  5674        |     |    
  5675        |     +--- // 格納用の ExecState() の現在の値を書き込む。
  5676        |     +--- fprintf(fp,&quot;\t\t\t\t\tfp12 = fopen(\&quot;OATATLog.dat\&quot;,\&quot;wt\&quot;);\n&quot;);
  5677        |     +--- fprintf(fp,&quot;\t\t\t\t\tfor(iloop_vi = 0 ; iloop_vi &lt; %d ; iloop_vi++){\n&quot;,MainF-&gt;TuneRegionList-&gt;Count);
  5678        |     +--- fprintf(fp,&quot;\t\t\t\t\t\tfprintf(fp12,\&quot;%%d\&quot;,ExecState[iloop_vi]);\n&quot;);
  5679        |     +--- fprintf(fp,&quot;\t\t\t\t\t}\n&quot;);
  5680        |     +--- fprintf(fp,&quot;\t\t\t\t\tfclose(fp12);\n&quot;);
  5681        |     |    
  5682        |     +--- fprintf(fp,&quot;\t\t\t\t}\n&quot;); // １秒以上のチェック
  5683        |     +--- fprintf(fp,&quot;\t\t\t}\n&quot;);
              |   +-+---+ 
  5684        |   |  }  | 
              |   +-----+ 
  5685        |    
  5686        +--- //
  5687        |    // According 指定がある場合は、計測時間を置き換える。              
  5688        |    //  条件指定の場合（estimatedなし）には、条件が一致すれば time = 0 
  5689        |    //  条件が一致しない場合は、かかった時間（0より大きい値)           
  5690        |    //  Accordingと varidの２重の場合には、 範囲で選択となる。         
  5691        |    //  時間変数があると便利？ 例えば、 OAT_TIME ？？？                
  5692        |    //                                                                 
              |  +--------------------+ 
  5693        +--+ if(UseAccordingF){ | 
              |  +--+-----------------+ 
  5694        |     +--- string aStr;
  5695        |     +--- TSubRegion *SubRegion;
  5696        |     +--- int cp1,cp2;
  5697        |     +--- int CaseIdx = 1;
  5698        |     |    
              |     |  +--------------------------------+ 
  5699        |     +--+ if(SubRegionList-&gt;Count != 0){ | 
              |     |  +--+-----------------------------+ 
  5700        |     |     +--- fprintf(fp,&quot;\t\t\tswitch(iusw1){\n&quot;);
              |     |     |  +----------------------------------------------+ 
  5701        |     |     +--+ for(i = 0 ; i &lt; SubRegionList-&gt;Count ; i++){ | 
              |     |     |  +--+-------------------------------------------+ 
  5702        |     |     |     +--- SubRegion = (TSubRegion *)SubRegionList-&gt;Items[i];
  5703        |     |     |     +--- aStr = SubRegion-&gt;AccordingStr;
              |     |     |     |  +------------------+ 
  5704        |     |     |     +--+ if(aStr == &quot;&quot;){  | 
              |     |     |     |  +--+---------------+ 
              |     |     |     |     |  +------------+ 
  5705        |     |     |     |     +--+ continue;  | 
              |     |     |     |     |  +------------+ 
              |     |     |     |   +-+---+ 
  5706        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |     |  +--------------------------------+ 
  5707        |     |     |     +--+ if(SubRegion-&gt;CaseCount &lt;= 1){ | 
              |     |     |     |  +--+-----------------------------+ 
  5708        |     |     |     |     +--- fprintf(fp,&quot;\t\t\tcase %d:\n&quot;,CaseIdx++);
              |     |     |     |   +-+---+ 
  5709        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+-------+ 
  5709        |     |     |     |   |  else{  | 
              |     |     |     |   +-+-------+ 
              |     |     |     |     |  +------------------------------------------------------------+ 
  5710        |     |     |     |     +--+ for(j = CaseIdx ; j &lt; CaseIdx+SubRegion-&gt;CaseCount; j++){  | 
              |     |     |     |     |  +--+---------------------------------------------------------+ 
  5711        |     |     |     |     |     +--- fprintf(fp,&quot;\t\t\tcase %d:\n&quot;,j);
              |     |     |     |     |   +-+---+ 
  5712        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
  5713        |     |     |     |     +--- CaseIdx += SubRegion-&gt;CaseCount;
              |     |     |     |   +-+---+ 
  5714        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
  5715        |     |     |     +--- cp1 = aStr.find(&quot;according&quot;) + strlen(&quot;according&quot;);
  5716        |     |     |     +--- cp2 = aStr.find(&quot;estimated&quot;);
              |     |     |     |  +----------------+ 
  5717        |     |     |     +--+ if(cp2 != 0){  | 
              |     |     |     |  +--+-------------+ 
  5718        |     |     |     |     +--- cp1 = cp2 + strlen(&quot;estimated&quot;);
  5719        |     |     |     |     +--- aStr = Trim(aStr.substr(cp1+1,aStr.length()));
  5720        |     |     |     |     +--- fprintf(fp,&quot;\t\t\t\tt_all = %s;\n&quot;,aStr.c_str());
              |     |     |     |   +-+---+ 
  5721        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+-----------------+ 
  5721        |     |     |     |   |  else{ // 条件式  | 
              |     |     |     |   +-+-----------------+ 
  5722        |     |     |     |     +--- aStr = Trim(aStr.substr(cp1+1,aStr.length()));
  5723        |     |     |     |     +--- fprintf(fp,&quot;\t\t\t\tif(%s){\n&quot;,aStr.c_str());
  5724        |     |     |     |     +--- fprintf(fp,&quot;\t\t\t\t\tt_all = 0;\n&quot;);
  5725        |     |     |     |     +--- fprintf(fp,&quot;\t\t\t\t}\n&quot;);
              |     |     |     |   +-+---+ 
  5726        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
  5727        |     |     |     +--- fprintf(fp,&quot;\t\t\t\tbreak;\n&quot;);
              |     |     |   +-+---+ 
  5728        |     |     |   |  }  | 
              |     |     |   +-----+ 
  5729        |     |     +--- fprintf(fp,&quot;\t\t\t}\n&quot;);
              |     |   +-+---+ 
  5730        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
  5730        |     |   |  else{  | 
              |     |   +-+-------+ 
  5731        |     |     +--- aStr = AccordingStr;
  5732        |     |     +--- cp1 = aStr.find(&quot;according&quot;) + strlen(&quot;according&quot;);
  5733        |     |     +--- cp2 = aStr.find(&quot;estimated&quot;);
              |     |     |  +----------------+ 
  5734        |     |     +--+ if(cp2 != 0){  | 
              |     |     |  +--+-------------+ 
  5735        |     |     |     +--- cp1 = cp2 + strlen(&quot;estimated&quot;);
  5736        |     |     |     +--- aStr = Trim(aStr.substr(cp1+1,aStr.length()));
  5737        |     |     |     +--- fprintf(fp,&quot;\t\t\t\tt_all = %s;\n&quot;,aStr.c_str());
              |     |     |   +-+---+ 
  5738        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-----------------+ 
  5738        |     |     |   |  else{ // 条件式  | 
              |     |     |   +-+-----------------+ 
  5739        |     |     |     +--- aStr = Trim(aStr.substr(cp1+1,aStr.length()));
  5740        |     |     |     +--- fprintf(fp,&quot;\t\t\t\tif(%s){\n&quot;,aStr.c_str());
  5741        |     |     |     +--- fprintf(fp,&quot;\t\t\t\t\tt_all = 0;\n&quot;);
  5742        |     |     |     +--- fprintf(fp,&quot;\t\t\t\t}\n&quot;);
              |     |     |   +-+---+ 
  5743        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  5744        |     |   |  }  | 
              |     |   +-----+ 
  5745        |     +--- fprintf(fp,&quot;\n&quot;);
              |   +-+---+ 
  5746        |   |  }  | 
              |   +-----+ 
  5747        |    
              |  +--------------------------------+ 
  5748        +--+ if(VisualF){ // Visualize = ON | 
              |  +--+-----------------------------+ 
  5749        |     +--- //
  5750        |     |    // ビジュアル化のための結果出力                
  5751        |     |    // Sampledでとびとびの場合は、空白行を入れる。 
  5752        |     |    //                                             
  5753        |     +--- fprintf(fp,&quot;\t\t\tif(myid == 0){\n&quot;);
  5754        |     +--- fprintf(fp,&quot;\t\t\t\tif(iloop_%s == 0){\n&quot;,LowerCase(TuneGroupName).c_str());
  5755        |     +--- fprintf(fp,&quot;\t\t\t\t\tfor(iloop_vi = 0; iloop_vi &lt; F1[iloop_%s]-1;iloop_vi++){\n&quot;,LowerCase(TuneGroupName).c_str());
  5756        |     +--- fprintf(fp,&quot;\t\t\t\t\t\tfprintf(fp13,\&quot;\\n\&quot;);\n&quot;);
  5757        |     +--- fprintf(fp,&quot;\t\t\t\t\t}\n&quot;);
  5758        |     +--- fprintf(fp,&quot;\t\t\t\t}\n&quot;);
  5759        |     +--- fprintf(fp,&quot;\t\t\t\tfprintf(fp13,\&quot;%%f\\n\&quot;,t_all);\n&quot;);
  5760        |     +--- fprintf(fp,&quot;\t\t\t\tif(iloop_%s &lt; %d-1){\n&quot;,LowerCase(TuneGroupName).c_str(),CaseArrayCount);
  5761        |     +--- fprintf(fp,&quot;\t\t\t\t\tfor(iloop_vi = F1[iloop_%s]+1;iloop_vi &lt; F1[iloop_%s+1];iloop_vi++){\n&quot;,
  5762        |     |                        LowerCase(TuneGroupName).c_str(),LowerCase(TuneGroupName).c_str());        
  5763        |     +--- fprintf(fp,&quot;\t\t\t\t\t\tfprintf(fp13,\&quot;\\n\&quot;);\n&quot;);
  5764        |     +--- fprintf(fp,&quot;\t\t\t\t\t}\n&quot;);
  5765        |     +--- fprintf(fp,&quot;\t\t\t\t}else{\n&quot;);
  5766        |     +--- fprintf(fp,&quot;\t\t\t\t\tfor(iloop_vi = F1[iloop_%s];iloop_vi &lt; %d;iloop_vi++){\n&quot;,
  5767        |     |                            LowerCase(TuneGroupName).c_str(), CaseCount);            
  5768        |     +--- fprintf(fp,&quot;\t\t\t\t\t\tfprintf(fp13,\&quot;\\n\&quot;);\n&quot;);
  5769        |     +--- fprintf(fp,&quot;\t\t\t\t\t}\n&quot;);
  5770        |     +--- fprintf(fp,&quot;\t\t\t\t}\n&quot;);
  5771        |     +--- fprintf(fp,&quot;\t\t\t}\n&quot;);
              |   +-+---+ 
  5772        |   |  }  | 
              |   +-----+ 
              |  +--------------------+ 
  5773        +--+ if(MainF-&gt;DebugF){ | 
              |  +--+-----------------+ 
  5774        |     +--- fprintf(fp,&quot;\t\t\tif(OAT_DEBUG &gt;= 1){\n&quot;);
  5775        |     +--- fprintf(fp,&quot;\t\t\t\tif(myid == 0){\n&quot;);
  5776        |     +--- fprintf(fp,&quot;\t\t\t\t\tprintf(\&quot;N=%%d iusw1=%%d %%f\\n\&quot;,iloop_n, iusw1, t_all);\n&quot;);
  5777        |     +--- fprintf(fp,&quot;\t\t\t\t}\n&quot;);
  5778        |     +--- fprintf(fp,&quot;\t\t\t}\n&quot;);
              |   +-+---+ 
  5779        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5779        |   |  else{  | 
              |   +-+-------+ 
  5780        |     +--- fprintf(fp,&quot;//\t\t\tif(OAT_DEBUG &gt;= 1){\n&quot;);
  5781        |     +--- fprintf(fp,&quot;//\t\t\t\tif(myid == 0){\n&quot;);
  5782        |     +--- fprintf(fp,&quot;//\t\t\t\t\tprintf(\&quot;N=%%d iusw1=%%d %%f\\n\&quot;,iloop_n, iusw1, t_all);\n&quot;);
  5783        |     +--- fprintf(fp,&quot;//\t\t\t\t}\n&quot;);
  5784        |     +--- fprintf(fp,&quot;//\t\t\t}\n&quot;);
              |   +-+---+ 
  5785        |   |  }  | 
              |   +-----+ 
  5786        +--- fprintf(fp,&quot;\n&quot;);
              |  +--------------------------------------------------------------------------------------+ 
  5787        +--+ if(!MainF-&gt;EECntlF){        // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |  +--+-----------------------------------------------------------------------------------+ 
  5788        |     +--- fprintf(fp,&quot;\t\t\tif (iloop_%s == 0){\n&quot;,LowerCase(TuneGroupName).c_str());
              |   +-+---+ 
  5789        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5789        |   |  else{  | 
              |   +-+-------+ 
  5790        |     +--- fprintf(fp,&quot;\t\t\tif (%s == 0){\n&quot;,iBsetSw1Str.c_str());
              |   +-+---+ 
  5791        |   |  }  | 
              |   +-----+ 
  5792        +--- fprintf(fp,&quot;\t\t\t\tdBestTime1 = t_all;\n&quot;);
              |  +--------------------------------------------------------------------------------------+ 
  5793        +--+ if(!MainF-&gt;EECntlF){        // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |  +--+-----------------------------------------------------------------------------------+ 
  5794        |     +--- fprintf(fp,&quot;\t\t\t\t%s = F1[0];\n&quot;,iBsetSw1Str.c_str());
              |   +-+---+ 
  5795        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5795        |   |  else{  | 
              |   +-+-------+ 
  5796        |     +--- fprintf(fp,&quot;\t\t\t\t%s = iusw1;\n&quot;,iBsetSw1Str.c_str());
              |   +-+---+ 
  5797        |   |  }  | 
              |   +-----+ 
  5798        +--- fprintf(fp,&quot;\t\t\t}else{\n&quot;);
  5799        +--- fprintf(fp,&quot;\t\t\t\tif(t_all &lt; dBestTime1){\n&quot;);
  5800        +--- fprintf(fp,&quot;\t\t\t\t\tdBestTime1 = t_all;\n&quot;);
              |  +--------------------------------------------------------------------------------------+ 
  5801        +--+ if(!MainF-&gt;EECntlF){        // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |  +--+-----------------------------------------------------------------------------------+ 
  5802        |     +--- fprintf(fp,&quot;\t\t\t\t\t%s = F1[iloop_%s];\n&quot;,iBsetSw1Str.c_str(),LowerCase(TuneGroupName).c_str());
              |   +-+---+ 
  5803        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  5803        |   |  else{  | 
              |   +-+-------+ 
  5804        |     +--- fprintf(fp,&quot;\t\t\t\t\t%s = iusw1;\n&quot;,iBsetSw1Str.c_str());
  5805        |     |    
              |   +-+---+ 
  5806        |   |  }  | 
              |   +-----+ 
  5807        +--- fprintf(fp,&quot;\t\t\t\t}\n&quot;);
  5808        +--- fprintf(fp,&quot;\t\t\t}\n&quot;);
  5809        +--- fprintf(fp,&quot;\n&quot;);
              |  +------------------------+ 
  5810        +--+ if(FittingType != 0){  | 
              |  +--+---------------------+ 
  5811        |     |    
  5812        |     +--- fprintf(fp,&quot;//        !!!!!! fitting用変数設定\n&quot;);
  5813        |     +--- fprintf(fp,&quot;          x[iloop_install] = F1[iloop_install];\n&quot;);
  5814        |     +--- fprintf(fp,&quot;          y[iloop_install] = t_all;\n&quot;);
  5815        |     +--- fprintf(fp,&quot;\n&quot;);
  5816        |     +--- fprintf(fp,&quot;//        print *, iloop_install-1,x(iloop_install-1),y(iloop_install-1)\n&quot;);
  5817        |     +--- fprintf(fp,&quot;\n&quot;);
              |   +-+---+ 
  5818        |   |  }  | 
              |   +-----+ 
  5819        +--- fprintf(fp,&quot;\t\t}\n&quot;);
              |  +----------------------------------------------------------------------------------+ 
  5820        +--+ if(MainF-&gt;EECntlF){     // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |  +--+-------------------------------------------------------------------------------+ 
  5821        |     +--- fprintf(fp,&quot;\t\t\t\tOAT_Eecntl_Fin();\n&quot;);
              |   +-+---+ 
  5822        |   |  }  | 
              |   +-----+ 
  5823        +--- fprintf(fp,&quot;\n&quot;);
  5824        |    
              |  +--------------------+ 
  5825        +--+ if(MainF-&gt;DebugF){ | 
              |  +--+-----------------+ 
  5826        |     +--- fprintf(fp,&quot;\t\tif(OAT_DEBUG &gt;= 1){\n&quot;);
  5827        |     +--- fprintf(fp,&quot;\t\t\tif(myid == 0){\n&quot;);
  5828        |     +--- fprintf(fp,&quot;\t\t\t\tprintf(\&quot;N=%%d BestSw=%%d\\n\&quot;,iloop_n,%s);\n&quot;,iBsetSw1Str.c_str());
  5829        |     +--- fprintf(fp,&quot;\t\t\t}\n&quot;);
  5830        |     +--- fprintf(fp,&quot;\t\t}\n&quot;);
              |   +-+---+ 
  5831        |   |  }  | 
              |   +-----+ 
              |  +------------------------+ 
  5832        +--+ if(FittingType != 0){  | 
              |  +--+---------------------+ 
  5833        |     +--- fprintf(fp,&quot;//      ------ fitting処理\n&quot;);
  5834        |     +--- fprintf(fp,&quot;\n&quot;);
  5835        |     +--- fprintf(fp,&quot;//     !!!! 以下のF1(%d) と %d は、sampledの個数と、variedの個数から判断\n&quot;
  5836        |     |                    ,CaseArrayCount-1,CaseCount);                                            
  5837        |     +--- fprintf(fp,&quot;//          -&gt; sampledの点がvariedの全領域を調べているか判断し、\n&quot;);
  5838        |     +--- fprintf(fp,&quot;//             全数判断していれば、最適値を選択\n&quot;);
  5839        |     +--- fprintf(fp,&quot;        if (F1[%d] == %d){&quot;,CaseArrayCount-1,CaseCount);
  5840        |     +--- fprintf(fp,&quot;//         !!! sampled 指定子なし\n&quot;);
  5841        |     +--- fprintf(fp,&quot;//         === if all parameters are mesured or communication optimization\n&quot;);
  5842        |     +--- fprintf(fp,&quot;//                then this selects the mesured parameter.\n&quot;);
  5843        |     +--- fprintf(fp,&quot;           if (myid == 0){\n&quot;);
  5844        |     +--- fprintf(fp,&quot;              printf(\&quot;All parameters are mesured. \\n\&quot;);\n&quot;);
  5845        |     +--- fprintf(fp,&quot;              printf(\&quot;So, I will select the measured pararameter.\\n\&quot;);\n&quot;);
  5846        |     +--- fprintf(fp,&quot;           }\n&quot;);
  5847        |     +--- fprintf(fp,&quot;\n&quot;);
  5848        |     +--- fprintf(fp,&quot;//         !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n&quot;);
  5849        |     +--- fprintf(fp,&quot;//         ! 変更点                         !\n&quot;);
  5850        |     +--- fprintf(fp,&quot;//         !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n&quot;);
  5851        |     +--- fprintf(fp,&quot;//         === using LSM\n&quot;);
  5852        |     +--- fprintf(fp,&quot;//         === Parameter Estimated routine for fixing dimansion\n&quot;);
  5853        |     +--- fprintf(fp,&quot;//                 and add estimated costs for all range of the parameter\n&quot;);
  5854        |     +--- fprintf(fp,&quot;           OATLSM_Est_ParamFxDim(x, y, n_lsm, m_lsm,\n&quot;);
  5855        |     +--- fprintf(fp,&quot;                a_lsm,  iloop_n, nparm, isamp_indx,\n&quot;);
  5856        |     +--- fprintf(fp,&quot;                xDim, yEst, &amp;idummy);\n&quot;);
  5857        |     +--- fprintf(fp,&quot;          isamp_indx = isamp_indx + 1;\n&quot;);
  5858        |     +--- fprintf(fp,&quot;          if (myid == 0){\n&quot;);
  5859        |     +--- fprintf(fp,&quot;             printf(\&quot;Best Parameter: %%d\\n\&quot;, %s);\n&quot;,iBsetSw1Str.c_str());
  5860        |     +--- fprintf(fp,&quot;          }\n&quot;);
  5861        |     +--- fprintf(fp,&quot;//         !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n&quot;);
  5862        |     +--- fprintf(fp,&quot;//         ! 変更点の終り                   !\n&quot;);
  5863        |     +--- fprintf(fp,&quot;//         !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n&quot;);
  5864        |     +--- fprintf(fp,&quot;\n&quot;);
  5865        |     +--- fprintf(fp,&quot;        }else{\n&quot;);
  5866        |     +--- fprintf(fp,&quot;\n&quot;);
  5867        |     +--- fprintf(fp,&quot;//         !!! sampled 指定子あり\n&quot;);
  5868        |     +--- fprintf(fp,&quot;//         === using LSM\n&quot;);
  5869        |     +--- fprintf(fp,&quot;//         === Parameter Estimated routine for fixing dimansion\n&quot;);
  5870        |     +--- fprintf(fp,&quot;//                 and add estimated costs for all range of the parameter\n&quot;);
  5871        |     +--- fprintf(fp,&quot;          OATLSM_Est_ParamFxDim(x, y, n_lsm, m_lsm,\n&quot;);
  5872        |     +--- fprintf(fp,&quot;                a_lsm,  iloop_n, nparm, isamp_indx,\n&quot;);
              |     |  +----------------------------+ 
  5873        |     +--+ if(iBsetSw1Str[0] == '*'){ | 
              |     |  +--+-------------------------+ 
  5874        |     |     +--- fprintf(fp,&quot;                xDim, yEst, %s);\n&quot;,iBsetSw1Str.c_str());
              |     |   +-+---+ 
  5875        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
  5875        |     |   |  else{  | 
              |     |   +-+-------+ 
  5876        |     |     +--- fprintf(fp,&quot;                xDim, yEst, &amp;%s);\n&quot;,iBsetSw1Str.c_str());
              |     |   +-+---+ 
  5877        |     |   |  }  | 
              |     |   +-----+ 
  5878        |     +--- fprintf(fp,&quot;          isamp_indx = isamp_indx + 1;\n&quot;);
  5879        |     +--- fprintf(fp,&quot;          if (myid == 0){\n&quot;);
  5880        |     +--- fprintf(fp,&quot;             printf(\&quot;Estimated Best Parameter: %%d\\n\&quot;, %s);\n&quot;,iBsetSw1Str.c_str());
  5881        |     +--- fprintf(fp,&quot;          }\n&quot;);
  5882        |     +--- fprintf(fp,&quot;        }\n&quot;);
  5883        |     +--- fprintf(fp,&quot;//       -----------------------------------------\n&quot;);
  5884        |     +--- fprintf(fp,&quot;\n&quot;);
              |   +-+---+ 
  5885        |   |  }  | 
              |   +-----+ 
  5886        |    
  5887        +--- fprintf(fp,&quot;//--- file write\n&quot;);
  5888        +--- fprintf(fp,&quot;\t\tif(myid == 0){\n&quot;);
  5889        +--- fprintf(fp,&quot;\t\t\tfprintf(fp11,\&quot;  (OAT_PROBSIZE %%d\\n\&quot;, iloop_n);\n&quot;);
  5890        +--- fprintf(fp,&quot;\t\t\tfprintf(fp11,\&quot;     (%s_I %%d)\\n\&quot;,%s);\n&quot;,Name.c_str(),iBsetSw1Str.c_str());
  5891        +--- fprintf(fp,&quot;\t\t\tfprintf(fp11,\&quot;  )\\n\&quot;);\n&quot;);
  5892        +--- fprintf(fp,&quot;\t\t}\n&quot;);
  5893        +--- fprintf(fp,&quot;//-----------------------------------------\n&quot;);
              |  +------------------------------+ 
  5894        +--+ if(TuneGroup != tgDynamic){  | 
              |  +--+---------------------------+ 
  5895        |     +--- fprintf(fp,&quot;\t}\n&quot;);
              |   +-+---+ 
  5896        |   |  }  | 
              |   +-----+ 
  5897        +--- fprintf(fp,&quot;\n&quot;);
  5898        +--- fprintf(fp,&quot;//--- file close\n&quot;);
  5899        +--- fprintf(fp,&quot;\tif (myid == 0){\n&quot;);
  5900        +--- fprintf(fp,&quot;\t\tfprintf(fp11,\&quot;)\\n\&quot;);\n&quot;);
  5901        +--- fprintf(fp,&quot;\t\tfclose(fp11);\n&quot;);
  5902        |    
              |  +--------------------------------+ 
  5903        +--+ if(VisualF){ // Visualize = ON | 
              |  +--+-----------------------------+ 
  5904        |     +--- // 0から100(%)までの進行状態の値をセットする。
  5905        |     +--- fprintf(fp,&quot;\t\tExecState[%d] = 100;\n&quot;,
  5906        |     |            MainF-&gt;TuneRegionList-&gt;IndexOf(this)); 
  5907        |     +--- // 格納用の ExecState() の現在の値を書き込む。
  5908        |     +--- fprintf(fp,&quot;\t\tfp12 = fopen(\&quot;OATATLog.dat\&quot;,\&quot;wt\&quot;);\n&quot;);
  5909        |     +--- fprintf(fp,&quot;\t\tfor(iloop_vi = 0 ; iloop_vi &lt; %d ; iloop_vi++){\n&quot;,MainF-&gt;TuneRegionList-&gt;Count);
  5910        |     +--- //      fprintf(fp,&quot;\t\t\tfprintf(fp12,\&quot;%d\\n\&quot;,ExecState[iloop_vi]);\n&quot;);
  5911        |     +--- s = &quot;\t\t\tfprintf(fp12,\&quot;%d\\n\&quot;,ExecState[iloop_vi]);\n&quot;;
  5912        |     +--- fprintf(fp,&quot;%s&quot;,s.c_str());
  5913        |     +--- fprintf(fp,&quot;\t\t}\n&quot;);
  5914        |     +--- fprintf(fp,&quot;\t\tfclose(fp12);\n&quot;);
  5915        |     +--- //
  5916        |     |    // 結果をClose 
  5917        |     |    //             
  5918        |     +--- fprintf(fp,&quot;\t\tfclose(fp13);\n&quot;);
              |   +-+---+ 
  5919        |   |  }  | 
              |   +-----+ 
  5920        |    
  5921        +--- fprintf(fp,&quot;\t}\n&quot;);
  5922        +--- fprintf(fp,&quot;//---------------------------------------------\n&quot;);
  5923        +--- fprintf(fp,&quot;\n&quot;);
  5924        |    
              |  +------------------------+ 
  5925        +--+ if(FittingType != 0){  | 
              |  +--+---------------------+ 
  5926        |     |    
  5927        |     +--- fprintf(fp,&quot;//     !!!!!!!! fitting処理\n&quot;);
  5928        |     +--- fprintf(fp,&quot;//     === for LSM to estimate variable dimension\n&quot;);
  5929        |     +--- fprintf(fp,&quot;//       === Input xDim, yEst\n&quot;);
  5930        |     +--- fprintf(fp,&quot;//\n&quot;);
  5931        |     +--- fprintf(fp,&quot;//      if (oat_myid. eq. 0) then\n&quot;);
  5932        |     +--- fprintf(fp,&quot;//        print *, \&quot;nsamp=\&quot;,nsamp, \&quot;/ nparm=\&quot;,nparm\n&quot;);
  5933        |     +--- fprintf(fp,&quot;//        do i=0, nsamp-1\n&quot;);
  5934        |     +--- fprintf(fp,&quot;//          write(6, 1919) (xDim(i,isw),isw=0, nparm-1)\n&quot;);
  5935        |     +--- fprintf(fp,&quot;//        enddo\n&quot;);
  5936        |     +--- fprintf(fp,&quot;//        print *, &quot;&quot;\n&quot;);
  5937        |     +--- fprintf(fp,&quot;//        do i=0, nsamp-1\n&quot;);
  5938        |     +--- fprintf(fp,&quot;//          write(6, 1919) (yEst(i,isw),isw=0, nparm-1)\n&quot;);
  5939        |     +--- fprintf(fp,&quot;//        enddo\n&quot;);
  5940        |     +--- fprintf(fp,&quot;// 1919   format(' ', 20F10.5)\n&quot;);
  5941        |     +--- fprintf(fp,&quot;//      endif\n&quot;);
  5942        |     +--- fprintf(fp,&quot;\n&quot;);
  5943        |     +--- fprintf(fp,&quot;\n&quot;);
  5944        |     +--- fprintf(fp,&quot;//       === 全組合せ数がデータの総数となる。\n&quot;);
  5945        |     +--- fprintf(fp,&quot;        n_lsm = nparm;\n&quot;);
  5946        |     +--- fprintf(fp,&quot;\n&quot;);
  5947        |     +--- fprintf(fp,&quot;        OATLSM_lsm_DimEst(xDim, yEst,\n&quot;);
  5948        |     +--- fprintf(fp,&quot;                    n_lsm, m_lsm, aa_lsm, nparm, nsamp);\n&quot;);
  5949        |     +--- fprintf(fp,&quot;\n&quot;);
  5950        |     +--- fprintf(fp,&quot;\n&quot;);
  5951        |     +--- fprintf(fp,&quot;      for(isw=0;isw &lt; nparm;isw++){\n&quot;);
  5952        |     +--- fprintf(fp,&quot;        for(iii=0 ; iii &lt; nsamp ; iii++){\n&quot;);
  5953        |     +--- fprintf(fp,&quot;           xDim[iii][isw]=0.0;\n&quot;);
  5954        |     +--- fprintf(fp,&quot;        }\n&quot;);
  5955        |     +--- fprintf(fp,&quot;      }\n&quot;);
  5956        |     +--- fprintf(fp,&quot;\n&quot;);
  5957        |     +--- fprintf(fp,&quot;      for(isw=0;isw &lt; nparm;isw++){\n&quot;);
  5958        |     +--- fprintf(fp,&quot;        for(iii=0 ; iii &lt; nsamp ; iii++){\n&quot;);
  5959        |     +--- fprintf(fp,&quot;           yEst[iii][isw]=0.0;\n&quot;);
  5960        |     +--- fprintf(fp,&quot;        }\n&quot;);
  5961        |     +--- fprintf(fp,&quot;      }\n&quot;);
  5962        |     +--- fprintf(fp,&quot;\n&quot;);
  5963        |     +--- fprintf(fp,&quot;//     === Output is aa_lsm.\n&quot;);
  5964        |     +--- fprintf(fp,&quot;//       ===  Output\n&quot;);
  5965        |     +--- fprintf(fp,&quot;      if (myid == 0){\n&quot;);
  5966        |     +--- fprintf(fp,&quot;         fp10 = fopen(\&quot;%s_%c_LSM.dat\&quot;,\&quot;wt\&quot;);\n&quot;,Name.c_str(),*TuneGroupName.c_str());
  5967        |     +--- fprintf(fp,&quot;      }\n&quot;);
  5968        |     +--- fprintf(fp,&quot;      for(isw=1 ; isw &lt;= nparm ; isw++){\n&quot;);
  5969        |     +--- fprintf(fp,&quot;        fprintf(fp10,\&quot;%%20.10f \&quot;,(double)isw);\n&quot;);
  5970        |     +--- fprintf(fp,&quot;        for(iii=0 ; iii &lt;= m_lsm ; iii++){\n&quot;);
  5971        |     +--- fprintf(fp,&quot;          fprintf(fp10,\&quot;%%20.10f \&quot;,aa_lsm[iii][isw-1]);\n&quot;);
  5972        |     +--- fprintf(fp,&quot;        }\n&quot;);
  5973        |     +--- fprintf(fp,&quot;      }\n&quot;);
  5974        |     +--- fprintf(fp,&quot;      fclose(fp10);\n&quot;);
  5975        |     +--- fprintf(fp,&quot;\n&quot;);
  5976        |     +--- fprintf(fp,&quot;      if (myid == 0){\n&quot;);
  5977        |     +--- fprintf(fp,&quot;        printf(\&quot;Output Parameters ==============================\&quot;);\n&quot;);
  5978        |     +--- fprintf(fp,&quot;        for(isw=1;isw&lt;=nparm;isw++){\n&quot;);
  5979        |     +--- fprintf(fp,&quot;          printf(\&quot;Parameter No.: %%d\\n\&quot;, isw);\n&quot;);
  5980        |     +--- fprintf(fp,&quot;          printf(\&quot;Sample Points: %%d / Formula Order: %%d\\n\&quot;, n_lsm, m_lsm);\n&quot;);
  5981        |     +--- fprintf(fp,&quot;          printf(\&quot;Calculated Coefficients: \&quot;);\n&quot;);
  5982        |     +--- fprintf(fp,&quot;          for(iii=0 ; iii &lt;= m_lsm ; iii++){\n&quot;);
  5983        |     +--- fprintf(fp,&quot;            printf(\&quot;%%f * x^%%d\\n\&quot;,aa_lsm[iii][isw-1], m_lsm-iii);\n&quot;);
  5984        |     +--- fprintf(fp,&quot;          }\n&quot;);
  5985        |     +--- fprintf(fp,&quot;        }\n&quot;);
  5986        |     +--- fprintf(fp,&quot;//       === End of Output\n&quot;);
  5987        |     +--- fprintf(fp,&quot;      }\n&quot;);
  5988        |     +--- fprintf(fp,&quot;//     !!!!!!!! fitting処理の終り\n&quot;);
  5989        |     +--- fprintf(fp,&quot;//     !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n&quot;);
  5990        |     +--- fprintf(fp,&quot;\n&quot;);
  5991        |     |    
              |   +-+---+ 
  5992        |   |  }  | 
              |   +-----+ 
  5993        |    
  5994        +--- fprintf(fp,&quot;\treturn 0;\n&quot;);
  5995        +--- fprintf(fp,&quot;}\n&quot;);
  5996        |    
  5997        +--- fprintf(fp,&quot;//==== End of %s Optimization Routines\n&quot;,TuneGroupName.c_str());
  5998        +--- fprintf(fp,&quot;//==============================================================\n&quot;);
  5999        +--- fprintf(fp,&quot;\n&quot;);
  6000        +--- fprintf(fp,&quot;\n&quot;);
  6001        +--- //d-spline用追加部分---------------------------------------------------------------------
  6002        |                                                                                               
              |  +--------------------------+ 
  6003        +--+ if(FittingDspline == 1){ | 
              |  +--+-----------------------+ 
  6004        |     +--- /**************************************************/
  6005        |     |    //                                                   
  6006        |     |    //Kogakuin Irie                                      
  6007        |     |    //実行時d-Splineとその他のd-Splineの判断方法を変更   
  6008        |     |    //region start 文からチューニングタイミングを取得    
  6009        |     |    //対応する } は，現在は6468行目                      
  6010        |     |    //                                                   
              |     |  +------------------------------+ 
  6011        |     +--+ if(TuneGroup == tgInstall){  | 
              |     |  +--+---------------------------+ 
  6012        |     |     +--- //
  6013        |     |     |    //ここまで                                           
  6014        |     |     |    //                                                   
  6015        |     |     |    /**************************************************/ 
  6016        |     |     +--- fprintf(fp,&quot;#include &lt;stdio.h&gt;\n&quot;);
  6017        |     |     +--- fprintf(fp,&quot;#include &lt;stdlib.h&gt;\n&quot;);
  6018        |     |     +--- fprintf(fp,&quot;\n#define DEBUG 2\n\n&quot;);
  6019        |     |     +--- fprintf(fp,&quot;int dspgiv(int npN&quot;);
  6020        |     |     +--- //ここから流用　変数名出力のため------
  6021        |     |     |                                           
              |     |     |  +------------------------------+ 
  6022        |     |     +--+ if(TuneGroup != tgDynamic){  | 
              |     |     |  +--+---------------------------+ 
              |     |     |     |  +----------------------------------------+ 
  6023        |     |     |     +--+ if(MainF-&gt;Call_ATExec_Script == NULL){ | 
              |     |     |     |  +--+-------------------------------------+ 
  6024        |     |     |     |     +--- TScript *Script = new TScript(MainF-&gt;TokenList,0,NULL,ValDataList);
  6025        |     |     |     |     +--- ArgStr = Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);
  6026        |     |     |     |     +--- fprintf(fp,&quot;%s&quot;,ArgStr.c_str());
  6027        |     |     |     |     +--- delete Script;
  6028        |     |     |     |     +--- //          fprintf(fp,&quot;OAT_ATexec%s%s(char *OAT_Routines)\n&quot;,TuneGroupName.c_str(),Name.c_str());
              |     |     |     |   +-+---+ 
  6029        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+-------+ 
  6029        |     |     |     |   |  else{  | 
              |     |     |     |   +-+-------+ 
  6030        |     |     |     |     +--- ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);
  6031        |     |     |     |     +--- fprintf(fp,&quot;%s&quot;,ArgStr.c_str());
              |     |     |     |   +-+---+ 
  6032        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
  6033        |     |     |     +--- iBsetSw1Str = &quot;iBestSw1&quot;;
              |     |     |   +-+---------+ 
  6034        |     |     |   |  }//else{ | 
              |     |     |   +-----------+ 
  6035        |     |     +--- //      if(MainF-&gt;Call_ATExec_Script == NULL){
  6036        |     |     |    //          TScript *Script = new TScript(MainF-&gt;TokenList,0,NULL,ValDataList);  
  6037        |     |     |    //          ArgStr = Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);                        
  6038        |     |     |    //          fprintf(fp,&quot;%s&quot;,ArgStr.c_str());                                     
  6039        |     |     |    //          delete Script;                                                       
  6040        |     |     |    //      }else{                                                                   
  6041        |     |     |    //          ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);     
  6042        |     |     |    //          fprintf(fp,&quot;%s&quot;,ArgStr.c_str());                                     
  6043        |     |     |    //                                                                               
  6044        |     |     |    //      }                                                                        
  6045        |     |     |    //      iBsetSw1Str = &quot;*iBestSw1&quot;;                                               
  6046        |     |     |    //  }                                                                            
  6047        |     |     |                                                                                     
  6048        |     |     |                                                                                     
  6049        |     |     +--- //ここまで流用　変数名出力用------
  6050        |     |     +--- fprintf(fp,&quot;)\n{\n&quot;);
  6051        |     |     |    
  6052        |     |     +--- //変数宣言部分
  6053        |     |     +--- fprintf(fp,&quot;\tint nn=npN*3;\n&quot;);
  6054        |     |     +--- fprintf(fp,&quot;\tdouble DE[nn+1][nn+1];\n&quot;);
  6055        |     |     +--- fprintf(fp,&quot;\tdouble R[nn+1][nn+1];\n&quot;);
  6056        |     |     +--- fprintf(fp,&quot;\tdouble G[nn+1][nn+1];\n&quot;);
  6057        |     |     +--- fprintf(fp,&quot;\tdouble r,c,s;\n&quot;);
  6058        |     |     +--- /*********************************/
  6059        |     |     |    //                                   
  6060        |     |     |    //Kogakuin Irie                      
  6061        |     |     |    //d-Splineのバグ修正のための変更     
  6062        |     |     |    //既存コードはコメントアウト         
  6063        |     |     |    //                                   
  6064        |     |     +--- //  fprintf(fp,&quot;\tint p,q;\n&quot;);
  6065        |     |     +--- fprintf(fp,&quot;\tint p,q,q2;\n&quot;);
  6066        |     |     +--- //
  6067        |     |     |    //ここまで                           
  6068        |     |     |    //                                   
  6069        |     |     |    /*********************************/  
  6070        |     |     +--- fprintf(fp,&quot;\tdouble data;\n&quot;);
  6071        |     |     +--- fprintf(fp,&quot;\tint count=1;\n&quot;);
  6072        |     |     +--- fprintf(fp,&quot;\tdouble x[n];\n&quot;);
  6073        |     |     +--- fprintf(fp,&quot;\tdouble temp;\n&quot;);
  6074        |     |     +--- fprintf(fp,&quot;\tint temp2,bestP=0,nextP,prebestP;\n&quot;);
  6075        |     |     +--- fprintf(fp,&quot;\tdouble select2[npN][2];\n&quot;);
  6076        |     |     +--- fprintf(fp,&quot;\tint h[npN],kk=0;\n&quot;);
  6077        |     |     +--- fprintf(fp,&quot;\tdouble alfa=0.1;\n&quot;);
  6078        |     |     +--- fprintf(fp,&quot;\tdouble t1,t2;\n&quot;);
  6079        |     |     +--- fprintf(fp,&quot;\tint F2[4];\n&quot;);
  6080        |     |     +--- fprintf(fp,&quot;\tint i,j,k,i4;\n\n&quot;);
  6081        |     |     |    
  6082        |     |     +--- //エクセル書き込み用部分
  6083        |     |     +--- fprintf(fp,&quot;\tFILE *fpA;\n&quot;);
  6084        |     |     +--- fprintf(fp,&quot;\tchar *fname = \&quot;d-SplineData.csv\&quot;;\n&quot;);
  6085        |     |     +--- fprintf(fp,&quot;\tfpA = fopen(fname,\&quot;w\&quot;);\n\n&quot;);
  6086        |     |     |    
  6087        |     |     +--- //DE初期化部分
  6088        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;nn+1;i++){\n\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\tDE[i][j]=0;\n\t\t\tR[i][j]=0;\n\t\t}\n\t}\n\n&quot;);
  6089        |     |     |    
  6090        |     |     +--- //DE1,-2,1セット部分
  6091        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;nn-2;i++){\n\t\tDE[i][i]=1*alfa;\n\t\tDE[i][i+1]=-2*alfa;\n\t\tDE[i][i+2]=1*alfa;\n\t}\n\n&quot;);
  6092        |     |     |    
  6093        |     |     +--- //h初期化部分
  6094        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;=npN;i++){\n\t\th[i]=npN+1;\n\t}\n\n&quot;);
  6095        |     |     |    
  6096        |     |     +--- //初期4点決定部分
  6097        |     |     +--- fprintf(fp,&quot;\tF2[0]=1;\n\tF2[1]=(2+npN)/3;\n\tF2[2]=(1+2*npN)/3;\n\tF2[3]=npN;\n\n \tp=nn;\n\n&quot;);
  6098        |     |     |    
  6099        |     |     +--- //初期4点の計算用部分------------------------------------------------------
  6100        |     |     +--- fprintf(fp,&quot;\tfor(i4=0;i4&lt;4;i4++){\n\t\tq=F2[i4];\n\n&quot;);
  6101        |     |     +--- fprintf(fp,&quot;\t\tt1 = OAT_Wtime();\n&quot;);
  6102        |     |     +--- //計算する関数に飛ぶ部分    基本的に既存部分の流用
              |     |     |  +----------------------------------------------------------------------------------+ 
  6103        |     |     +--+ if(MainF-&gt;EECntlF){     // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |     |     |  +--+-------------------------------------------------------------------------------+ 
  6104        |     |     |     +--- fprintf(fp,&quot;\t\t\tiloop_inner = 0;\n&quot;);
  6105        |     |     |     +--- fprintf(fp,&quot;\t\t\twhile(OAT_Eecntl_Continue()){\n&quot;);
  6106        |     |     |     +--- s = &quot;\t\t\t&quot;+FuncName + &quot;(&quot;;
              |     |     |   +-+---+ 
  6107        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------+ 
  6107        |     |     |   |  else{  | 
              |     |     |   +-+-------+ 
  6108        |     |     |     +--- s = &quot;\t\t&quot;+FuncName + &quot;(&quot;;
              |     |     |   +-+---+ 
  6109        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------------------------------------------+ 
  6110        |     |     +--+ for(i = 0 ; i &lt; ArgValList-&gt;Count ; i++){  | 
              |     |     |  +--+-----------------------------------------+ 
              |     |     |     |  +------------------------------------+ 
  6111        |     |     |     +--+ if(ArgValList-&gt;Strings[i] == &quot;&quot;){  | 
              |     |     |     |  +--+---------------------------------+ 
              |     |     |     |     |  +------------+ 
  6112        |     |     |     |     +--+ continue;  | 
              |     |     |     |     |  +------------+ 
              |     |     |     |   +-+---+ 
  6113        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
  6114        |     |     |     +--- ValData = (TValData *)ArgValList-&gt;Objects[i];
  6115        |     |     |     +--- s += ValData-&gt;Str + &quot;, &quot;;
              |     |     |   +-+---+ 
  6116        |     |     |   |  }  | 
              |     |     |   +-----+ 
  6117        |     |     +--- s += &quot;q);&quot;;
  6118        |     |     +--- fprintf(fp,&quot;%s\n&quot;,s.c_str());
  6119        |     |     |    
  6120        |     |     |     
  6121        |     |     +--- fprintf(fp,&quot;\n\t\tt2 = OAT_Wtime();\n\t\tdata = t2 - t1;\n\n&quot;);
  6122        |     |     +--- fprintf(fp,&quot;\t\tprintf(\&quot;\\n---para is %%d time is %%lf--- \\n\&quot;,q,data);\n\n&quot;);
  6123        |     |     +--- /**********************************************************************************************/
  6124        |     |     |    //                                                                                               
  6125        |     |     |    //Kogakuin Irie                                                                                  
  6126        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6127        |     |     |    //既存コードはコメントアウト                                                                     
  6128        |     |     |    //                                                                                               
  6129        |     |     +--- //  fprintf(fp,&quot;\t\tq--;\n\t\th[kk]=q;\n\n\t\tDE[p][q]=1;\n\t\tDE[p][nn]=data;\n\n&quot;);
  6130        |     |     +--- fprintf(fp,&quot;\t\tq--;\n\t\tq2=q*3;\n\t\th[kk]=q;\n\n\t\tDE[p][q2]=1;\n\t\tDE[p][nn]=data;\n\n&quot;);
  6131        |     |     +--- //
  6132        |     |     |    //ここまで                                                                                       
  6133        |     |     |    //                                                                                               
  6134        |     |     |    /**********************************************************************************************/ 
  6135        |     |     |                                                                                                     
  6136        |     |     |    /**********************************************************************************************/ 
  6137        |     |     |    //                                                                                               
  6138        |     |     |    //Kogakuin Irie                                                                                  
  6139        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6140        |     |     |    //既存コードはコメントアウト                                                                     
  6141        |     |     |    //                                                                                               
  6142        |     |     |    //------初期4点ギブンス変換for文部分ここから------                                               
  6143        |     |     +--- //  fprintf(fp,&quot;\t\tfor(q=q;q&lt;nn;q++){\n\n&quot;);
  6144        |     |     |    //                                             
  6145        |     |     +--- //G初期化部分(不要なため削除）
  6146        |     |     +--- /*
  6147        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tG[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\n&quot;);  
  6148        |     |     |    */                                                                                                                         
  6149        |     |     +--- //G初期化
  6150        |     |     +--- //  fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tG[i][i]=0;\n\t\t\t}\n\n&quot;);
  6151        |     |     |    //  fprintf(fp,&quot;\t\t\tG[nn][nn]=1;\n&quot;);                                        
  6152        |     |     |    //                                                                             
  6153        |     |     +--- //G用計算部分
  6154        |     |     +--- //  fprintf(fp,&quot;\t\t\tr=sqrt( (DE[q][q])*(DE[q][q]) + (DE[p][q])*(DE[p][q]) );\n\n\t\t\tif(r==0)\n\t\t\t\tbreak;\n\n\t\t\tc=DE[q][q]/r;\n\t\t\ts=DE[p][q]/r;\n\n\t\t\tG[p][p]=c;\n\t\t\tG[q][q]=c;\n\n\t\t\tG[q][p]=s;\n\t\t\tG[p][q]=-1*s;\n\n&quot;);
  6155        |     |     |    //                                                                                                                                                                                                                                                 
  6156        |     |     |    //                                                                                                                                                                                                                                                 
  6157        |     |     +--- //R=G*DEギブンス変換部分
  6158        |     |     +--- //  fprintf(fp,&quot;\t\t\tR[q][q]+=G[q][q]*DE[q][q];\n\t\t\tR[q][q]+=G[q][nn]*DE[nn][q];\n\t\t\tif( (q+1)!=nn &amp;&amp; (q+1)&lt;=nn ){\n\t\t\tR[q][q+1]+=G[q][q]*DE[q][q+1];\n\t\t\tR[q][q+1]+=G[q][nn]*DE[nn][q+1];\n\t\t\t}\n\n\t\t\tif( (q+2)!=nn &amp;&amp; (q+2)&lt;=nn ){\n\t\t\tR[q][q+2]+=G[q][q]*DE[q][q+2];\n\t\t\tR[q][q+2]+=G[q][nn]*DE[nn][q+2];\n\t\t\t}\n\n\t\t\tR[q][nn]+=G[q][q]*DE[q][nn];\n\t\t\tR[q][nn]+=G[q][nn]*DE[nn][nn];\n\n\t\t\tR[nn][q]+=G[nn][q]*DE[q][q];\n\t\t\tR[nn][q]+=G[nn][nn]*DE[nn][q];\n\n\t\t\t&quot;);
  6159        |     |     |    //  fprintf(fp,&quot;if( (q+1)!=nn &amp;&amp; (q+1)&lt;=nn ){\n\t\t\tR[nn][q+1]+=G[nn][q]*DE[q][q+1];\n\t\t\tR[nn][q+1]+=G[nn][nn]*DE[nn][q+1];\n\t\t\t}\n\n\t\t\tif( (q+2)!=nn &amp;&amp; (q+2)&lt;=nn ){\n\t\t\tR[nn][q+2]+=G[nn][q]*DE[q][q+2];\n\t\t\tR[nn][q+2]+=G[nn][nn]*DE[nn][q+2];\n\t\t\t}\n\n\t\t\tR[nn][nn]+=G[nn][q]*DE[q][nn];\n\t\t\tR[nn][nn]+=G[nn][nn]*DE[nn][nn];\n\n\t\t\t&quot;);                                                                                                                                              
  6160        |     |     |    //  fprintf(fp,&quot;DE[q][q]=R[q][q];\n\t\t\tDE[q][q+1]=R[q][q+1];\n\t\t\tDE[q][q+2]=R[q][q+2];\n\t\t\tDE[q][nn]=R[q][nn];\n\n\t\t\tDE[nn][q]=R[nn][q];\n\t\t\tDE[nn][q+1]=R[nn][q+1];\n\t\t\tDE[nn][q+2]=R[nn][q+2];\n\t\t\tDE[nn][nn]=R[nn][nn];\n\n\t\t\tR[q][q]=0;\n\t\t\tR[q][q+1]=0;\n\t\t\tR[q][q+2]=0;\n\t\t\tR[q][nn]=0;\n\n\t\t\tR[nn][q]=0;\n\t\t\tR[nn][q+1]=0;\n\t\t\tR[nn][q+2]=0;\n\t\t\tR[nn][nn]=0;\n&quot;);                                                                                                
  6161        |     |     |
  6162        |     |     +--- //R=G*DEギブンス変換部分(不要なため削除）
  6163        |     |     +--- /*
  6164        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tfor(k=0;k&lt;nn+1;k++){\n\t\t\t\t\t\tR[i][j]+=G[i][k]*DE[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n&quot;); 
  6165        |     |     |    */                                                                                                                                                                                       
  6166        |     |     +--- //DEに次の計算のために計算結果Rを代入する部分（不要なため削除）
  6167        |     |     +--- /*
  6168        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tDE[i][j]=R[i][j];\n\t\t\t\t\tR[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n&quot;); 
  6169        |     |     |    */                                                                                                                                                   
  6170        |     |     |    //  fprintf(fp,&quot;\t\t}\n\t\tkk++;\n\n\n\t}\n&quot;);                                                                                                       
  6171        |     |     |    //                                                                                                                                                   
  6172        |     |     +--- fprintf(fp,&quot;\t\tfor(q2=q2;q2&lt;nn;q2++){\n\n&quot;);
  6173        |     |     |    
  6174        |     |     +--- //G初期化部分(不要なため削除）
  6175        |     |     +--- /*
  6176        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tG[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\n&quot;);  
  6177        |     |     |    */                                                                                                                         
  6178        |     |     +--- //G初期化
  6179        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tG[i][i]=0;\n\t\t\t}\n\n&quot;);
  6180        |     |     +--- fprintf(fp,&quot;\t\t\tG[nn][nn]=1;\n&quot;);
  6181        |     |     |    
  6182        |     |     +--- //G用計算部分
  6183        |     |     +--- fprintf(fp,&quot;\t\t\tr=sqrt( (DE[q2][q2])*(DE[q2][q2]) + (DE[p][q2])*(DE[p][q2]) );\n\n\t\t\tif(r==0)\n\t\t\t\tbreak;\n\n\t\t\tc=DE[q2][q2]/r;\n\t\t\ts=DE[p][q2]/r;\n\n\t\t\tG[p][p]=c;\n\t\t\tG[q2][q2]=c;\n\n\t\t\tG[q2][p]=s;\n\t\t\tG[p][q2]=-1*s;\n\n&quot;);
  6184        |     |     |    
  6185        |     |     |     
  6186        |     |     +--- //R=G*DEギブンス変換部分
  6187        |     |     +--- fprintf(fp,&quot;\t\t\tR[q2][q2]+=G[q2][q2]*DE[q2][q2];\n\t\t\tR[q2][q2]+=G[q2][nn]*DE[nn][q2];\n\t\t\tif( (q2+1)!=nn &amp;&amp; (q2+1)&lt;=nn ){\n\t\t\tR[q2][q2+1]+=G[q2][q2]*DE[q2][q2+1];\n\t\t\tR[q2][q2+1]+=G[q2][nn]*DE[nn][q2+1];\n\t\t\t}\n\n\t\t\tif( (q2+2)!=nn &amp;&amp; (q2+2)&lt;=nn ){\n\t\t\tR[q2][q2+2]+=G[q2][q2]*DE[q2][q2+2];\n\t\t\tR[q2][q2+2]+=G[q2][nn]*DE[nn][q2+2];\n\t\t\t}\n\n\t\t\tR[q2][nn]+=G[q2][q2]*DE[q2][nn];\n\t\t\tR[q2][nn]+=G[q2][nn]*DE[nn][nn];\n\n\t\t\tR[nn][q2]+=G[nn][q2]*DE[q2][q2];\n\t\t\tR[nn][q2]+=G[nn][nn]*DE[nn][q2];\n\n\t\t\t&quot;);
  6188        |     |     +--- fprintf(fp,&quot;if( (q2+1)!=nn &amp;&amp; (q2+1)&lt;=nn ){\n\t\t\tR[nn][q2+1]+=G[nn][q2]*DE[q2][q2+1];\n\t\t\tR[nn][q2+1]+=G[nn][nn]*DE[nn][q2+1];\n\t\t\t}\n\n\t\t\tif( (q2+2)!=nn &amp;&amp; (q2+2)&lt;=nn ){\n\t\t\tR[nn][q2+2]+=G[nn][q2]*DE[q2][q2+2];\n\t\t\tR[nn][q2+2]+=G[nn][nn]*DE[nn][q2+2];\n\t\t\t}\n\n\t\t\tR[nn][nn]+=G[nn][q2]*DE[q2][nn];\n\t\t\tR[nn][nn]+=G[nn][nn]*DE[nn][nn];\n\n\t\t\t&quot;);
  6189        |     |     +--- fprintf(fp,&quot;DE[q2][q2]=R[q2][q2];\n\t\t\tDE[q2][q2+1]=R[q2][q2+1];\n\t\t\tDE[q2][q2+2]=R[q2][q2+2];\n\t\t\tDE[q2][nn]=R[q2][nn];\n\n\t\t\tDE[nn][q2]=R[nn][q2];\n\t\t\tDE[nn][q2+1]=R[nn][q2+1];\n\t\t\tDE[nn][q2+2]=R[nn][q2+2];\n\t\t\tDE[nn][nn]=R[nn][nn];\n\n\t\t\tR[q2][q2]=0;\n\t\t\tR[q2][q2+1]=0;\n\t\t\tR[q2][q2+2]=0;\n\t\t\tR[q2][nn]=0;\n\n\t\t\tR[nn][q2]=0;\n\t\t\tR[nn][q2+1]=0;\n\t\t\tR[nn][q2+2]=0;\n\t\t\tR[nn][nn]=0;\n&quot;);
  6190        |     |     |    
  6191        |     |     +--- //R=G*DEギブンス変換部分(不要なため削除）
  6192        |     |     +--- /*
  6193        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tfor(k=0;k&lt;nn+1;k++){\n\t\t\t\t\t\tR[i][j]+=G[i][k]*DE[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n&quot;); 
  6194        |     |     |    */                                                                                                                                                                                       
  6195        |     |     +--- //DEに次の計算のために計算結果Rを代入する部分（不要なため削除）
  6196        |     |     +--- /*
  6197        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tDE[i][j]=R[i][j];\n\t\t\t\t\tR[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n&quot;); 
  6198        |     |     |    */                                                                                                                                                   
  6199        |     |     +--- fprintf(fp,&quot;\t\t}\n\n\t\tkk++;\n\t}\n\n&quot;);
  6200        |     |     +--- //------初期4点ギブンス変換for文部分ここまで------
  6201        |     |     |    //                                                                                               
  6202        |     |     |    //ここまで                                                                                       
  6203        |     |     |    //                                                                                               
  6204        |     |     |    /**********************************************************************************************/ 
  6205        |     |     |                                                                                                     
  6206        |     |     |                                                                                                     
  6207        |     |     |    //------初期4点計算後、ベストパラメタと次のパラメタ決定ここから------                            
  6208        |     |     |                                                                                                     
  6209        |     |     |    //推定値代入初期化部分                                                                           
  6210        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;nn;i++){\n\t\tx[i]=DE[i][nn];\n\t}\n\n&quot;);
  6211        |     |     |    
  6212        |     |     +--- //後退代入で推定値計算部分
  6213        |     |     +--- fprintf(fp,&quot;\tfor(i=nn-1; i&gt;=0;i--){\n\t\tfor(j=i+1;j&lt;nn;j++){\n\t\t\tx[i]-=DE[i][j]*x[j];\n\t\t}\n\t\tx[i] /= DE[i][i];\n\t}\n\n&quot;);
  6214        |     |     |    
  6215        |     |     +--- /**********************************************************************************************/
  6216        |     |     |    //                                                                                               
  6217        |     |     |    //Kogakuin Irie                                                                                  
  6218        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6219        |     |     |    //既存コードはコメントアウト                                                                     
  6220        |     |     |    //                                                                                               
  6221        |     |     |    //デバッグ用、推定値表示部分                                                                     
  6222        |     |     +--- //  fprintf(fp,&quot;\tif(DEBUG&gt;0){\n\t\tprintf(\&quot;estimation\\n\&quot;);\n\t\tfor(i=0;i&lt;npN;i++){\n\t\t\tprintf(\&quot;[%%d],%%lf\\n\&quot;,i+1,x[i]);\n\t\t}\n\t\tprintf(\&quot;\\n\&quot;);\n\t}\n\n&quot;);
  6223        |     |     +--- fprintf(fp,&quot;\t\tif(DEBUG&gt;0){\n\t\t\tprintf(\&quot;\\nestimation\\n\&quot;);\n\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tprintf(\&quot;[%%d],%%lf\\n\&quot;,i+1,x[i*3]);\n\t\t\t\t}printf(\&quot;\\n\&quot;);\n\t\t}\n\n&quot;);
  6224        |     |     +--- //
  6225        |     |     |    //ここまで                                                                                       
  6226        |     |     |    //                                                                                               
  6227        |     |     |    /**********************************************************************************************/ 
  6228        |     |     |                                                                                                     
  6229        |     |     |    /**********************************************************************************************/ 
  6230        |     |     |    //                                                                                               
  6231        |     |     |    //Kogakuin Irie                                                                                  
  6232        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6233        |     |     |    //既存コードはコメントアウト                                                                     
  6234        |     |     |    //                                                                                               
  6235        |     |     |    //推定値が最小となる番号をベストパラメタに設定する部分                                           
  6236        |     |     +--- //  fprintf(fp,&quot;\ttemp=x[0];\n\tfor(i=0;i&lt;npN;i++){\n\t\tif(x[i]&lt;temp){\n\t\t\ttemp=x[i];\n\t\t\tbestP=i;\n\t\t}\n\t}\n\n&quot;);
  6237        |     |     |    //  fprintf(fp,&quot;\tprintf(\&quot;\\nbest para = %%d time = %%lf\\n\&quot;,bestP+1,x[bestP]);\n\n&quot;);                                     
  6238        |     |     +--- fprintf(fp,&quot;\ttemp=x[0];\n\tbestP=0;\n\n\tfor(i=0;i&lt;npN;i++){\n\t\tif(x[i*3]&lt;temp){\n\t\t\ttemp=x[i*3];\n\t\t\tbestP=i;\n\t\t}\n\t}\n\n&quot;);
  6239        |     |     +--- fprintf(fp,&quot;\tprintf(\&quot;\\nbest para = %%d time = %%lf\\n\&quot;,bestP+1,x[bestP*3]);\n\n&quot;);
  6240        |     |     +--- //
  6241        |     |     |    //ここまで                                                                                       
  6242        |     |     |    //                                                                                               
  6243        |     |     |    /**********************************************************************************************/ 
  6244        |     |     |                                                                                                     
  6245        |     |     |    //選択基準2用配列初期化部分                                                                      
  6246        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;npN;i++){\n\t\tselect2[i][1]=i;\n\t\tselect2[i][0]=0;\n\t}\n\n&quot;);
  6247        |     |     |    
  6248        |     |     +--- /**********************************************************************************************/
  6249        |     |     |    //                                                                                               
  6250        |     |     |    //Kogakuin Irie                                                                                  
  6251        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6252        |     |     |    //既存コードはコメントアウト                                                                     
  6253        |     |     |    //                                                                                               
  6254        |     |     |    //変化率計算部分                                                                                 
  6255        |     |     +--- fprintf(fp,&quot;\tfor(i=1;i&lt;npN-1;i++){\n\t\tselect2[i][0]=fabs( x[i-1] - 2*x[i] + x[i+1] );\n\t}\n\n&quot;);
  6256        |     |     +--- fprintf(fp,&quot;\tfor(i=1;i&lt;npN-1;i++){\n\t\tselect2[i][0]=fabs( x[i-3] - 2*x[i] + x[i+3] );\n\t}\n\n&quot;);
  6257        |     |     +--- //
  6258        |     |     |    //ここまで                                                                                       
  6259        |     |     |    //                                                                                               
  6260        |     |     |    /**********************************************************************************************/ 
  6261        |     |     |                                                                                                     
  6262        |     |     |    //select2ソート部分                                                                              
  6263        |     |     +--- fprintf(fp,&quot;\tfor(i=0 ; i&lt;npN-1 ; i++){\n\t\tfor(j=npN-1 ; j&gt;i ; j--){\n\t\t\tif(select2[j-1][0] &lt; select2[j][0]){\n\t\t\t\ttemp=select2[j][0];\n\t\t\t\ttemp2=select2[j][1];\n\t\t\t\tselect2[j][0]=select2[j-1][0];\n\t\t\t\tselect2[j][1]=select2[j-1][1];\n\t\t\t\tselect2[j-1][0]=temp;\n\t\t\t\tselect2[j-1][1]=temp2;\n\t\t\t}\n\t\t}\n\t}\n\n&quot;);
  6264        |     |     |    
  6265        |     |     +--- //推定したベストPがすでに標本点にあるなら選択基準2、ないなら選択基準1　選択する部分
  6266        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;npN;i++){\n&quot;);
  6267        |     |     +--- fprintf(fp,&quot;\t\tif(bestP==h[i]){\n\t\t\tfor(j=0;j&lt;npN;j++){\n\t\t\t\tfor(k=0;k&lt;npN;k++){\n\t\t\t\t\tif(select2[j][1]==h[k]){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(k+1==npN){\n\t\t\t\t\t\tnextP=select2[j][1];\n\t\t\t\t\t\tgoto OUT1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n&quot;);
  6268        |     |     +--- fprintf(fp,&quot;\t\telse{\n\t\t\tnextP=bestP;\n\t\t}\n\t}\n\tOUT1:\n&quot;);
  6269        |     |     +--- fprintf(fp,&quot;\tprintf(\&quot;nextP=%%d bestP=%%d \\n\\n\&quot;,nextP+1,bestP+1);\n\n&quot;);
  6270        |     |     |    
  6271        |     |     +--- //prebestPに4点計算終了時のベストパラメタを代入する部分
  6272        |     |     +--- fprintf(fp,&quot;\tprebestP=bestP;\n\n\n&quot;);
  6273        |     |     |    
  6274        |     |     +--- //推定値をエクセルに書き込みする部分
  6275        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;nn;i++){\n\t\tfprintf(fpA,\&quot;%%lf\\n\&quot;,x[i]);\n\t}\n\tfprintf(fpA,\&quot;end\\n\\n\&quot;);\n\n&quot;);
  6276        |     |     |    
  6277        |     |     +--- fprintf(fp,&quot;\tprintf(\&quot;\\n----------end 4 point---------- \\n\&quot;);\n\n&quot;);
  6278        |     |     |    
  6279        |     |     +--- //--------4点後のdo while文ここから--------
  6280        |     |     +--- fprintf(fp,&quot;\tdo{\n\n&quot;);
  6281        |     |     +--- /**********************************************************************************************/
  6282        |     |     |    //                                                                                               
  6283        |     |     |    //Kogakuin Irie                                                                                  
  6284        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6285        |     |     |    //既存コードはコメントアウト                                                                     
  6286        |     |     |    //                                                                                               
  6287        |     |     +--- //  fprintf(fp,&quot;\t\tq=nextP;\n&quot;);
  6288        |     |     |    //  fprintf(fp,&quot;\t\tt1 = OAT_Wtime();\n&quot;); 
  6289        |     |     +--- fprintf(fp,&quot;\t\tq=nextP;\n\t\tq2=q*3;\n\n&quot;);
  6290        |     |     +--- fprintf(fp,&quot;\t\tt1 = omp_get_wtime();\n&quot;);
  6291        |     |     +--- //
  6292        |     |     |    //ここまで                                                                                       
  6293        |     |     |    //                                                                                               
  6294        |     |     |    /**********************************************************************************************/ 
  6295        |     |     |    //計算する関数に飛ぶ部分    基本的に既存部分の流用                                               
              |     |     |  +----------------------------------------------------------------------------------+ 
  6296        |     |     +--+ if(MainF-&gt;EECntlF){     // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |     |     |  +--+-------------------------------------------------------------------------------+ 
  6297        |     |     |     +--- fprintf(fp,&quot;\t\t\tiloop_inner = 0;\n&quot;);
  6298        |     |     |     +--- fprintf(fp,&quot;\t\t\twhile(OAT_Eecntl_Continue()){\n&quot;);
  6299        |     |     |     +--- s = &quot;\t\t\t&quot;+FuncName + &quot;(&quot;;
              |     |     |   +-+---+ 
  6300        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------+ 
  6300        |     |     |   |  else{  | 
              |     |     |   +-+-------+ 
  6301        |     |     |     +--- s = &quot;\t\t&quot;+FuncName + &quot;(&quot;;
              |     |     |   +-+---+ 
  6302        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------------------------------------------+ 
  6303        |     |     +--+ for(i = 0 ; i &lt; ArgValList-&gt;Count ; i++){  | 
              |     |     |  +--+-----------------------------------------+ 
              |     |     |     |  +------------------------------------+ 
  6304        |     |     |     +--+ if(ArgValList-&gt;Strings[i] == &quot;&quot;){  | 
              |     |     |     |  +--+---------------------------------+ 
              |     |     |     |     |  +------------+ 
  6305        |     |     |     |     +--+ continue;  | 
              |     |     |     |     |  +------------+ 
              |     |     |     |   +-+---+ 
  6306        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
  6307        |     |     |     +--- ValData = (TValData *)ArgValList-&gt;Objects[i];
  6308        |     |     |     +--- s += ValData-&gt;Str + &quot;, &quot;;
              |     |     |   +-+---+ 
  6309        |     |     |   |  }  | 
              |     |     |   +-----+ 
  6310        |     |     +--- s += &quot;q+1);&quot;;
  6311        |     |     +--- fprintf(fp,&quot;%s\n&quot;,s.c_str());
  6312        |     |     |    
  6313        |     |     +--- /**********************************************************************************************/
  6314        |     |     |    //                                                                                               
  6315        |     |     |    //Kogakuin Irie                                                                                  
  6316        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6317        |     |     |    //既存コードはコメントアウト                                                                     
  6318        |     |     |    //                                                                                               
  6319        |     |     +--- //  fprintf(fp,&quot;\t\tt2 = OAT_Wtime();\n&quot;);
  6320        |     |     +--- fprintf(fp,&quot;\t\tt2 = omp_get_wtime();\n\n&quot;);
  6321        |     |     +--- //
  6322        |     |     |    //ここまで                                                                                       
  6323        |     |     |    //                                                                                               
  6324        |     |     |    /**********************************************************************************************/ 
  6325        |     |     +--- fprintf(fp,&quot;\t\tdata = t2 - t1;\n\n&quot;);
  6326        |     |     +--- fprintf(fp,&quot;\t\tprintf(\&quot;\\n---para is %%d time is %%lf--- \\n\&quot;,q+1,data);\n\n&quot;);
  6327        |     |     +--- /**********************************************************************************************/
  6328        |     |     |    //                                                                                               
  6329        |     |     |    //Kogakuin Irie                                                                                  
  6330        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6331        |     |     |    //既存コードはコメントアウト                                                                     
  6332        |     |     |    //                                                                                               
  6333        |     |     +--- //  fprintf(fp,&quot;\t\th[kk]=q;\n\t\tDE[p][q]=1;\n\t\tDE[p][nn]=data;\n\n&quot;);
  6334        |     |     +--- fprintf(fp,&quot;\t\th[kk]=q;\n\t\tDE[p][q2]=1;\n\t\tDE[p][nn]=data;\n\n&quot;);
  6335        |     |     +--- //
  6336        |     |     |    //ここまで                                                                                       
  6337        |     |     |    //                                                                                               
  6338        |     |     |    /**********************************************************************************************/ 
  6339        |     |     |                                                                                                     
  6340        |     |     |    /**********************************************************************************************/ 
  6341        |     |     |    //                                                                                               
  6342        |     |     |    //Kogakuin Irie                                                                                  
  6343        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6344        |     |     |    //既存コードはコメントアウト                                                                     
  6345        |     |     |    //                                                                                               
  6346        |     |     |    //--------ギブンス変換for文ここから--------                                                      
  6347        |     |     +--- //  fprintf(fp,&quot;\t\tfor(q=q;q&lt;nn;q++){\n\n&quot;);
  6348        |     |     |    //                                             
  6349        |     |     +--- //G初期化部分(不要なため削除）
  6350        |     |     +--- /*
  6351        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tG[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\n&quot;);  
  6352        |     |     |    */                                                                                                                         
  6353        |     |     +--- //G初期化
  6354        |     |     +--- //  fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tG[i][i]=0;\n\t\t\t}\n\n&quot;);
  6355        |     |     |    //  fprintf(fp,&quot;\t\t\tG[nn][nn]=1;\n&quot;);                                        
  6356        |     |     |    //                                                                             
  6357        |     |     +--- //G用計算部分
  6358        |     |     +--- //  fprintf(fp,&quot;\t\t\tr=sqrt( (DE[q][q])*(DE[q][q]) + (DE[p][q])*(DE[p][q]) );\n\n\t\t\tif(r==0)\n\t\t\t\tbreak;\n\n\t\t\tc=DE[q][q]/r;\n\t\t\ts=DE[p][q]/r;\n\n\t\t\tG[p][p]=c;\n\t\t\tG[q][q]=c;\n\n\t\t\tG[q][p]=s;\n\t\t\tG[p][q]=-1*s;\n\n&quot;);
  6359        |     |     |    //                                                                                                                                                                                                                                                 
  6360        |     |     +--- //R=G*DEギブンス変換部分
  6361        |     |     +--- //  fprintf(fp,&quot;\t\t\tR[q][q]+=G[q][q]*DE[q][q];\n\t\t\tR[q][q]+=G[q][nn]*DE[nn][q];\n\t\t\tif( (q+1)!=nn &amp;&amp; (q+1)&lt;=nn ){\n\t\t\tR[q][q+1]+=G[q][q]*DE[q][q+1];\n\t\t\tR[q][q+1]+=G[q][nn]*DE[nn][q+1];\n\t\t\t}\n\n\t\t\tif( (q+2)!=nn &amp;&amp; (q+2)&lt;=nn ){\n\t\t\tR[q][q+2]+=G[q][q]*DE[q][q+2];\n\t\t\tR[q][q+2]+=G[q][nn]*DE[nn][q+2];\n\t\t\t}\n\n\t\t\tR[q][nn]+=G[q][q]*DE[q][nn];\n\t\t\tR[q][nn]+=G[q][nn]*DE[nn][nn];\n\n\t\t\tR[nn][q]+=G[nn][q]*DE[q][q];\n\t\t\tR[nn][q]+=G[nn][nn]*DE[nn][q];\n\n\t\t\t&quot;);
  6362        |     |     |    //  fprintf(fp,&quot;if( (q+1)!=nn &amp;&amp; (q+1)&lt;=nn ){\n\t\t\tR[nn][q+1]+=G[nn][q]*DE[q][q+1];\n\t\t\tR[nn][q+1]+=G[nn][nn]*DE[nn][q+1];\n\t\t\t}\n\n\t\t\tif( (q+2)!=nn &amp;&amp; (q+2)&lt;=nn ){\n\t\t\tR[nn][q+2]+=G[nn][q]*DE[q][q+2];\n\t\t\tR[nn][q+2]+=G[nn][nn]*DE[nn][q+2];\n\t\t\t}\n\n\t\t\tR[nn][nn]+=G[nn][q]*DE[q][nn];\n\t\t\tR[nn][nn]+=G[nn][nn]*DE[nn][nn];\n\n\t\t\t&quot;);                                                                                                                                              
  6363        |     |     |    //  fprintf(fp,&quot;DE[q][q]=R[q][q];\n\t\t\tDE[q][q+1]=R[q][q+1];\n\t\t\tDE[q][q+2]=R[q][q+2];\n\t\t\tDE[q][nn]=R[q][nn];\n\n\t\t\tDE[nn][q]=R[nn][q];\n\t\t\tDE[nn][q+1]=R[nn][q+1];\n\t\t\tDE[nn][q+2]=R[nn][q+2];\n\t\t\tDE[nn][nn]=R[nn][nn];\n\n\t\t\tR[q][q]=0;\n\t\t\tR[q][q+1]=0;\n\t\t\tR[q][q+2]=0;\n\t\t\tR[q][nn]=0;\n\n\t\t\tR[nn][q]=0;\n\t\t\tR[nn][q+1]=0;\n\t\t\tR[nn][q+2]=0;\n\t\t\tR[nn][nn]=0;\n&quot;);                                                                                                
  6364        |     |     |    //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
  6365        |     |     |
  6366        |     |     |        //R=G*DEギブンス変換部分(不要なため削除）                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
  6367        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tfor(k=0;k&lt;nn+1;k++){\n\t\t\t\t\t\tR[i][j]+=G[i][k]*DE[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n&quot;);                                                                                                                                                                                                                                                                                                                             
  6368        |     |     |
  6369        |     |     |        //DEに次の計算のために計算結果Rを代入する部分(不要なため削除）                                                                                                                                                                                                                                                                                                                                                                                                                                                   
  6370        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tDE[i][j]=R[i][j];\n\t\t\t\t\tR[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n&quot;);                                                                                                                                                                                                                                                                                                                                                                 
  6371        |     |     |
  6372        |     |     |
  6373        |     |     |    //  fprintf(fp,&quot;\n\t\t}\n\n\n&quot;);                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
  6374        |     |     |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
  6375        |     |     +--- fprintf(fp,&quot;\t\tfor(q2=q2;q2&lt;nn;q2++){\n\n&quot;);
  6376        |     |     |    
  6377        |     |     +--- //G初期化部分(不要なため削除）
  6378        |     |     +--- /*
  6379        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tG[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\n&quot;);  
  6380        |     |     |    */                                                                                                                         
  6381        |     |     +--- //G初期化
  6382        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tG[i][i]=0;\n\t\t\t}\n\n&quot;);
  6383        |     |     +--- fprintf(fp,&quot;\t\t\tG[nn][nn]=1;\n&quot;);
  6384        |     |     |    
  6385        |     |     +--- //G用計算部分
  6386        |     |     +--- fprintf(fp,&quot;\t\t\tr=sqrt( (DE[q2][q2])*(DE[q2][q2]) + (DE[p][q2])*(DE[p][q2]) );\n\n\t\t\tif(r==0)\n\t\t\t\tbreak;\n\n\t\t\tc=DE[q2][q2]/r;\n\t\t\ts=DE[p][q2]/r;\n\n\t\t\tG[p][p]=c;\n\t\t\tG[q2][q2]=c;\n\n\t\t\tG[q2][p]=s;\n\t\t\tG[p][q2]=-1*s;\n\n&quot;);
  6387        |     |     |    
  6388        |     |     +--- //R=G*DEギブンス変換部分
  6389        |     |     +--- fprintf(fp,&quot;\t\t\tR[q2][q2]+=G[q2][q2]*DE[q2][q2];\n\t\t\tR[q2][q2]+=G[q2][nn]*DE[nn][q2];\n\t\t\tif( (q2+1)!=nn &amp;&amp; (q2+1)&lt;=nn ){\n\t\t\tR[q2][q2+1]+=G[q2][q2]*DE[q2][q2+1];\n\t\t\tR[q2][q2+1]+=G[q2][nn]*DE[nn][q2+1];\n\t\t\t}\n\n\t\t\tif( (q2+2)!=nn &amp;&amp; (q2+2)&lt;=nn ){\n\t\t\tR[q2][q2+2]+=G[q2][q2]*DE[q2][q2+2];\n\t\t\tR[q2][q2+2]+=G[q2][nn]*DE[nn][q2+2];\n\t\t\t}\n\n\t\t\tR[q2][nn]+=G[q2][q2]*DE[q2][nn];\n\t\t\tR[q2][nn]+=G[q2][nn]*DE[nn][nn];\n\n\t\t\tR[nn][q2]+=G[nn][q2]*DE[q2][q2];\n\t\t\tR[nn][q2]+=G[nn][nn]*DE[nn][q2];\n\n\t\t\t&quot;);
  6390        |     |     +--- fprintf(fp,&quot;if( (q2+1)!=nn &amp;&amp; (q2+1)&lt;=nn ){\n\t\t\tR[nn][q2+1]+=G[nn][q2]*DE[q2][q2+1];\n\t\t\tR[nn][q2+1]+=G[nn][nn]*DE[nn][q2+1];\n\t\t\t}\n\n\t\t\tif( (q2+2)!=nn &amp;&amp; (q2+2)&lt;=nn ){\n\t\t\tR[nn][q2+2]+=G[nn][q2]*DE[q2][q2+2];\n\t\t\tR[nn][q2+2]+=G[nn][nn]*DE[nn][q2+2];\n\t\t\t}\n\n\t\t\tR[nn][nn]+=G[nn][q2]*DE[q2][nn];\n\t\t\tR[nn][nn]+=G[nn][nn]*DE[nn][nn];\n\n\t\t\t&quot;);
  6391        |     |     +--- fprintf(fp,&quot;DE[q2][q2]=R[q2][q2];\n\t\t\tDE[q2][q2+1]=R[q2][q2+1];\n\t\t\tDE[q2][q2+2]=R[q2][q2+2];\n\t\t\tDE[q2][nn]=R[q2][nn];\n\n\t\t\tDE[nn][q2]=R[nn][q2];\n\t\t\tDE[nn][q2+1]=R[nn][q2+1];\n\t\t\tDE[nn][q2+2]=R[nn][q2+2];\n\t\t\tDE[nn][nn]=R[nn][nn];\n\n\t\t\tR[q2][q2]=0;\n\t\t\tR[q2][q2+1]=0;\n\t\t\tR[q2][q2+2]=0;\n\t\t\tR[q2][nn]=0;\n\n\t\t\tR[nn][q2]=0;\n\t\t\tR[nn][q2+1]=0;\n\t\t\tR[nn][q2+2]=0;\n\t\t\tR[nn][nn]=0;\n&quot;);
  6392        |     |     |    
  6393        |     |     +--- /*
  6394        |     |     |        //R=G*DEギブンス変換部分(不要なため削除）                                                                                                                                            
  6395        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tfor(k=0;k&lt;nn+1;k++){\n\t\t\t\t\t\tR[i][j]+=G[i][k]*DE[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n&quot;); 
  6396        |     |     |                                                                                                                                                                                             
  6397        |     |     |        //DEに次の計算のために計算結果Rを代入する部分(不要なため削除）                                                                                                                       
  6398        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tDE[i][j]=R[i][j];\n\t\t\t\t\tR[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n&quot;);                                     
  6399        |     |     |    */                                                                                                                                                                                       
  6400        |     |     |                                                                                                                                                                                             
  6401        |     |     +--- fprintf(fp,&quot;\t\t}\n\n\n&quot;);
  6402        |     |     +--- //--------ギブンス変換for文ここまで--------
  6403        |     |     |    //                                                                                               
  6404        |     |     |    //ここまで                                                                                       
  6405        |     |     |    //                                                                                               
  6406        |     |     |    /**********************************************************************************************/ 
  6407        |     |     |                                                                                                     
  6408        |     |     |                                                                                                     
  6409        |     |     |    //ギブンス変換後、推定値計算、次の標本点決定部分                                                 
  6410        |     |     |    //推定値代入初期化部分                                                                           
  6411        |     |     +--- fprintf(fp,&quot;\t\tfor(i=0;i&lt;nn;i++){\n\t\t\tx[i]=DE[i][nn];\n\t\t}\n\n&quot;);
  6412        |     |     |    
  6413        |     |     +--- //後退代入で推定値計算部分
  6414        |     |     +--- fprintf(fp,&quot;\t\tfor(i=nn-1; i&gt;=0;i--){\n\t\t\tfor(j=i+1;j&lt;nn;j++){\n\t\t\t\tx[i]-=DE[i][j]*x[j];\n\t\t\t}\n\t\t\tx[i] /= DE[i][i];\n\t\t}\n\n&quot;);
  6415        |     |     |    
  6416        |     |     +--- /**********************************************************************************************/
  6417        |     |     |    //                                                                                               
  6418        |     |     |    //Kogakuin Irie                                                                                  
  6419        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6420        |     |     |    //既存コードはコメントアウト                                                                     
  6421        |     |     |    //                                                                                               
  6422        |     |     |    //デバッグ用、推定値表示部分                                                                     
  6423        |     |     +--- //  fprintf(fp,&quot;\t\tif(DEBUG&gt;0){\n\t\t\tprintf(\&quot;estimation\\n\&quot;);\n\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tprintf(\&quot;[%%d],%%lf\\n\&quot;,i+1,x[i]);\n\t\t\t\t}printf(\&quot;\\n\&quot;);\n\t\t}\n\n&quot;);
  6424        |     |     +--- fprintf(fp,&quot;\t\tif(DEBUG&gt;0){\n\t\t\tprintf(\&quot;\\nestimation\\n\&quot;);\n\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tprintf(\&quot;[%%d],%%lf\\n\&quot;,i+1,x[i*3]);\n\t\t\t}\n\t\t\tprintf(\&quot;\\n\&quot;);\n\t\t}\n\n&quot;);
  6425        |     |     +--- //
  6426        |     |     |    //ここまで                                                                                       
  6427        |     |     |    //                                                                                               
  6428        |     |     |    /**********************************************************************************************/ 
  6429        |     |     |                                                                                                     
  6430        |     |     |    /**********************************************************************************************/ 
  6431        |     |     |    //                                                                                               
  6432        |     |     |    //Kogakuin Irie                                                                                  
  6433        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6434        |     |     |    //既存コードはコメントアウト                                                                     
  6435        |     |     |    //                                                                                               
  6436        |     |     |    //推定値が最小となる番号をベストパラメタに設定する部分                                           
  6437        |     |     +--- //  fprintf(fp,&quot;\ttemp=x[0];\n\tfor(i=0;i&lt;npN;i++){\n\t\tif(x[i]&lt;temp){\n\t\t\ttemp=x[i];\n\t\t\tbestP=i;\n\t\t}\n\t}\n\n&quot;);
  6438        |     |     |    //  fprintf(fp,&quot;\tprintf(\&quot;\\nbest para = %%d time = %%lf\\n\&quot;,bestP+1,x[bestP]);\n\n&quot;);                                     
  6439        |     |     +--- fprintf(fp,&quot;\t\ttemp=x[0];\n\t\tbestP=0;\n\n\t\tfor(i=0;i&lt;npN;i++){\n\t\t\tif(x[i*3]&lt;temp){\n\t\t\t\ttemp=x[i*3];\n\t\t\t\tbestP=i;\n\t\t\t}\n\t\t}\n\n&quot;);
  6440        |     |     +--- fprintf(fp,&quot;\t\tprintf(\&quot;\\nbest para = %%d time = %%lf\\n\&quot;,bestP+1,x[bestP*3]);\n\n&quot;);
  6441        |     |     +--- //
  6442        |     |     |    //ここまで                                                                                       
  6443        |     |     |    //                                                                                               
  6444        |     |     |    /**********************************************************************************************/ 
  6445        |     |     |                                                                                                     
  6446        |     |     |    //選択基準2用配列初期化部分                                                                      
  6447        |     |     +--- fprintf(fp,&quot;\t\tfor(i=0;i&lt;npN;i++){\n\t\t\tselect2[i][1]=i;\n\t\t\tselect2[i][0]=0;\n\t\t}\n\n&quot;);
  6448        |     |     |    
  6449        |     |     +--- /**********************************************************************************************/
  6450        |     |     |    //                                                                                               
  6451        |     |     |    //Kogakuin Irie                                                                                  
  6452        |     |     |    //d-Splineのバグ修正のための変更                                                                 
  6453        |     |     |    //既存コードはコメントアウト                                                                     
  6454        |     |     |    //                                                                                               
  6455        |     |     |    //変化率計算部分                                                                                 
  6456        |     |     +--- //  fprintf(fp,&quot;\tfor(i=1;i&lt;npN-1;i++){\n\t\tselect2[i][0]=fabs( x[i-1] - 2*x[i] + x[i+1] );\n\t}\n\n&quot;);
  6457        |     |     +--- fprintf(fp,&quot;\t\tfor(i=1;i&lt;npN-1;i++){\n\t\t\tselect2[i][0]=fabs( x[i-3] - 2*x[i] + x[i+3] );\n\t\t}\n\n&quot;);
  6458        |     |     +--- //
  6459        |     |     |    //ここまで                                                                                       
  6460        |     |     |    //                                                                                               
  6461        |     |     |    /**********************************************************************************************/ 
  6462        |     |     |                                                                                                     
  6463        |     |     |    //select2ソート部分                                                                              
  6464        |     |     +--- fprintf(fp,&quot;\t\tfor(i=0 ; i&lt;npN-1 ; i++){\n\t\t\tfor(j=npN-1 ; j&gt;i ; j--){\n\t\t\t\tif(select2[j-1][0] &lt; select2[j][0]){\n\t\t\t\t\ttemp=select2[j][0];\n\t\t\t\t\ttemp2=select2[j][1];\n\t\t\t\t\tselect2[j][0]=select2[j-1][0];\n\t\t\t\t\tselect2[j][1]=select2[j-1][1];\n\t\t\t\t\tselect2[j-1][0]=temp;\n\t\t\t\t\tselect2[j-1][1]=temp2;\n\t\t\t}\n\t\t\t}\n\t\t}\n\n&quot;);
  6465        |     |     |    
  6466        |     |     +--- //推定したベストPがすでに標本点にあるなら選択基準2、ないなら選択基準1　選択する部分
  6467        |     |     +--- fprintf(fp,&quot;\t\tfor(i=0;i&lt;npN;i++){\n&quot;);
  6468        |     |     +--- fprintf(fp,&quot;\t\t\tif(bestP==h[i]){\n\t\t\t\tfor(j=0;j&lt;npN;j++){\n\t\t\t\t\tfor(k=0;k&lt;npN;k++){\n\t\t\t\t\t\tif(select2[j][1]==h[k]){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(k+1==npN){\n\t\t\t\t\t\t\tnextP=select2[j][1];\n\t\t\t\t\t\t\tgoto OUT2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n&quot;);
  6469        |     |     +--- fprintf(fp,&quot;\t\t\telse{\n\t\t\t\tnextP=bestP;\n\t\t\t}\n\t\t}\n\t\tOUT2:\n&quot;);
  6470        |     |     +--- fprintf(fp,&quot;\t\tprintf(\&quot;nextP=%%d bestP=%%d \\n\\n\&quot;,nextP+1,bestP+1);\n\n&quot;);
  6471        |     |     |    
  6472        |     |     +--- //前回推定したパラメタと同じならカウント+1違うならカウント+1に初期化する部分
  6473        |     |     +--- fprintf(fp,&quot;\t\tif(prebestP==bestP){\n\t\t\tcount++;\n\t\t}\n\t\telse{\n\t\t\tcount=1;\n\t\t}\n\n&quot;);
  6474        |     |     |    
  6475        |     |     +--- //今回推定したベストパラメタをprebestPに設定
  6476        |     |     +--- fprintf(fp,&quot;\t\tprebestP=bestP;\n\n&quot;);
  6477        |     |     |    
  6478        |     |     +--- fprintf(fp,&quot;\t\tkk++;\n\n&quot;);
  6479        |     |     |    
  6480        |     |     +--- //推定値をエクセルに書き込みする部分
  6481        |     |     +--- fprintf(fp,&quot;\t\tfor(i=0;i&lt;nn;i++){\n\t\t\tfprintf(fpA,\&quot;%%lf\\n\&quot;,x[i]);\n\t\t}\n\t\tfprintf(fpA,\&quot;end\\n\\n\&quot;);\n\n&quot;);
  6482        |     |     |    
  6483        |     |     +--- fprintf(fp,&quot;\t\tprintf(\&quot;count = %%d \\n\&quot;,count);\n\n&quot;);
  6484        |     |     |    
  6485        |     |     +--- //while文
  6486        |     |     +--- fprintf(fp,&quot;\t}while(count&lt;3);\n\n\tprintf(\&quot;count end\\n\&quot;);\n\tprintf(\&quot;usedParaNums = %%d\\n\&quot;,kk);\n\n&quot;);
  6487        |     |     |    
  6488        |     |     +--- //--------4点後のdo while文ここまで--------
  6489        |     |     |                                                 
  6490        |     |     +--- fprintf(fp,&quot;\tfclose(fpA);\n\n&quot;);
  6491        |     |     +--- fprintf(fp,&quot;\treturn bestP+1;\n}\n&quot;);
              |     |   +-+---+ 
  6492        |     |   |  }  | 
              |     |   +-----+ 
  6493        |     |    
  6494        |     +--- //d-spline用追加部分　ここまで---------------------------------------------------------------------
  6495        |     |                                                                                                         
  6496        |     |    //d-spline用追加部分----------------dynamicDspline--------------------------------------             
  6497        |     |                                                                                                         
  6498        |     |                                                                                                         
  6499        |     |    /**************************************************/                                                 
  6500        |     |    //                                                                                                   
  6501        |     |    //Kogakuin Irie                                                                                      
  6502        |     |    //実行時d-Splineとその他のd-Splineの判断方法を変更                                                   
  6503        |     |    //region start 文からチューニングタイミングを取得                                                    
  6504        |     |    //対応する } は，現在は6786行目                                                                      
  6505        |     |    //                                                                                                   
  6506        |     |    //既存コードはコメントアウト                                                                         
  6507        |     |    //                                                                                                   
  6508        |     |    //if(FittingDynamic == 1){                                                                           
              |     |  +------------------------------+ 
  6509        |     +--+ if(TuneGroup == tgDynamic){  | 
              |     |  +--+---------------------------+ 
  6510        |     |     +--- //
  6511        |     |     |    //ここまで                                           
  6512        |     |     |    //                                                   
  6513        |     |     |    /**************************************************/ 
  6514        |     |     +--- int CaseNums = (int)( (variedToValue[0] - variedFromValue[0]) / variedStepValue[0] + 1 );
  6515        |     |     |    
  6516        |     |     +--- //デバッグ用と関数名部分
  6517        |     |     +--- fprintf(fp,&quot;#define DEBUG 1\n&quot;);
  6518        |     |     +--- /*************************************************************************************************************************************/
  6519        |     |     |    //                                                                                                                                       
  6520        |     |     |    //Kogakuin Irie                                                                                                                          
  6521        |     |     |    //d-Spline関数名に「自動チューニング種類名」と「チューニング領域名」を後ろにつける                                                       
  6522        |     |     |    //また，ヘッダファイルに関数定義を出力                                                                                                   
  6523        |     |     |    //既存コードはコメントアウト                                                                                                             
  6524        |     |     |    //                                                                                                                                       
  6525        |     |     +--- //  fprintf(fp,&quot;int dynamicDspline(int npN , int *isw , int Dswitch , double data)\n{\n&quot;);
  6526        |     |     +--- fprintf(fp,&quot;int dynamicDspline%s%s(int npN , int *isw , int Dswitch , double data)\n{\n&quot;,TuneGroupName.c_str(),Name.c_str());
  6527        |     |     +--- fprintf(fpOutHeader,&quot;int dynamicDspline%s%s(int npN , int *isw , int Dswitch , double data);\n&quot;,TuneGroupName.c_str(),Name.c_str());
  6528        |     |     +--- //
  6529        |     |     |    //ここまで                                                                                                                               
  6530        |     |     |    //                                                                                                                                       
  6531        |     |     |    /*************************************************************************************************************************************/  
  6532        |     |     |                                                                                                                                             
  6533        |     |     |    //変数宣言部分                                                                                                                           
  6534        |     |     +--- fprintf(fp,&quot;\tint nn=npN*3-2;\n&quot;);
  6535        |     |     +--- /*********************************************************************************************************************************************************************************************/
  6536        |     |     |    //                                                                                                                                                                                               
  6537        |     |     |    //Kogakuin Irie                                                                                                                                                                                  
  6538        |     |     |    //配列の要素数を，パラメータの取りうる数により変更させる                                                                                                                                         
  6539        |     |     |    //既存コードはコメントアウト                                                                                                                                                                     
  6540        |     |     |    //                                                                                                                                                                                               
  6541        |     |     +--- //  fprintf(fp,&quot;\tstatic double DE[100+1][100+1];\n\tstatic double R[100+1][100+1];\n\tstatic double G[100+1][100+1];\n&quot;);
  6542        |     |     +--- fprintf(fp,&quot;\tstatic double DE[%d+1][%d+1];\n\tstatic double R[%d+1][%d+1];\n\tstatic double G[%d+1][%d+1];\n&quot;,3*CaseNums-2,3*CaseNums-2,3*CaseNums-2,3*CaseNums-2,3*CaseNums-2,3*CaseNums-2);
  6543        |     |     +--- //
  6544        |     |     |    //ここまで                                                                                                                                                                                       
  6545        |     |     |    //                                                                                                                                                                                               
  6546        |     |     |    /*********************************************************************************************************************************************************************************************/  
  6547        |     |     |                                                                                                                                                                                                     
  6548        |     |     |    /****************************************************************************************************/                                                                                           
  6549        |     |     |    //                                                                                                                                                                                               
  6550        |     |     |    //Kogakuin Irie                                                                                                                                                                                  
  6551        |     |     |    //d-Splineのバグ修正のための変更                                                                                                                                                                 
  6552        |     |     |    //既存コードはコメントアウト                                                                                                                                                                     
  6553        |     |     |    //                                                                                                                                                                                               
  6554        |     |     +--- //  fprintf(fp,&quot;\tdouble r,c,s;\n\tint p,q;\n\tstatic int count=1;\n\t&quot;);
  6555        |     |     +--- fprintf(fp,&quot;\tdouble r,c,s;\n\tint p,q,q2;\n\tstatic int count=1;\n\t&quot;);
  6556        |     |     +--- //
  6557        |     |     |    //ここまで                                                                                             
  6558        |     |     |    //                                                                                                     
  6559        |     |     |    /****************************************************************************************************/ 
  6560        |     |     +--- fprintf(fp,&quot;static int count2=0;\n\tdouble x[nn];\n\tdouble temp;\n\tint temp2;\n&quot;);
  6561        |     |     +--- fprintf(fp,&quot;\tint bestP=0;\n\tint nextP;\n\tstatic int prebestP=0;\n\tdouble select2[npN][2];\n&quot;);
  6562        |     |     |    
  6563        |     |     +--- /**************************************************************************************************************/
  6564        |     |     |    //                                                                                                               
  6565        |     |     |    //Kogakuin Irie                                                                                                  
  6566        |     |     |    //配列の要素数を，パラメータの取りうる数により変更させる                                                         
  6567        |     |     |    //既存コードはコメントアウト                                                                                     
  6568        |     |     |    //                                                                                                               
  6569        |     |     +--- //  fprintf(fp,&quot;\tstatic int h[100];\n\tstatic int kk=0;\n\tdouble alfa=0.1;\n\tstatic int Fcount=0;\n&quot;);
  6570        |     |     +--- fprintf(fp,&quot;\tstatic int h[%d+1];\n\tstatic int kk=0;\n\tdouble alfa=0.1;\n\tstatic int Fcount=0;\n&quot;,CaseNums);
  6571        |     |     +--- //
  6572        |     |     |    //ここまで                                                                                                       
  6573        |     |     |    //                                                                                                               
  6574        |     |     |    /**************************************************************************************************************/ 
  6575        |     |     |                                                                                                                     
  6576        |     |     +--- fprintf(fp,&quot;\tint i,j,k;\n\n&quot;);
  6577        |     |     |    
  6578        |     |     +--- //エクセル書き込み用部分
  6579        |     |     +--- fprintf(fp,&quot;\tFILE *fpA;\n&quot;);
  6580        |     |     +--- fprintf(fp,&quot;\tchar *fname = \&quot;d-SplineData.csv\&quot;;\n&quot;);
  6581        |     |     +--- fprintf(fp,&quot;\tfpA = fopen(fname,\&quot;a\&quot;);\n\n&quot;);
  6582        |     |     |    
  6583        |     |     +--- //パラメタ探索後の終了部分
  6584        |     |     +--- fprintf(fp,&quot;\tif(count2==1){\n\t\treturn 0;\n\t}\n\n&quot;);
  6585        |     |     |    
  6586        |     |     +--- fprintf(fp,&quot;\tif(count==3){\n\t\tprintf(\&quot;count=3 end\\n\&quot;);\n\t\tprintf(\&quot;usedParaNums=%%d\\n\&quot;, Fcount-1);\n\t\t*isw = prebestP+1;\n&quot;);
  6587        |     |     +--- fprintf(fp,&quot;\t\tcount2=1;\n\t\treturn 0;\n\t}\n\n&quot;);
  6588        |     |     |    
  6589        |     |     +--- //h初期化部分
  6590        |     |     +--- fprintf(fp,&quot;\tif(Fcount==0){\n\t\tfor(i=0;i&lt;=npN;i++){\n\t\t\th[i]=npN+1;\n\t\t}\n\t}\n\n\tp=nn;\n\n&quot;);
  6591        |     |     |    
  6592        |     |     +--- //Dswitch1部分ここから--------------------
  6593        |     |     +--- fprintf(fp,&quot;\tif(Dswitch==1){\n\n&quot;);
  6594        |     |     |    
  6595        |     |     +--- //switch部分ここから
  6596        |     |     +--- fprintf(fp,&quot;\t\tswitch(Fcount){\n\t\tcase 0:\n\t\t\t*isw = 1;\n\t\t\tbreak;\n&quot;);
  6597        |     |     +--- fprintf(fp,&quot;\t\tcase 1:\n\t\t\t*isw = npN;\n\t\t\tbreak;\n&quot;);
  6598        |     |     +--- fprintf(fp,&quot;\t\tcase 2:\n\t\t\t*isw = (2+npN)/3;\n\t\t\tbreak;\n&quot;);
  6599        |     |     +--- fprintf(fp,&quot;\t\tcase 3:\n\t\t\t*isw = (1+2*npN)/3;\n\t\t\tbreak;\n&quot;);
  6600        |     |     |    
  6601        |     |     +--- //default部分
  6602        |     |     +--- fprintf(fp,&quot;\t\tdefault:\n\n&quot;);
  6603        |     |     +--- //推定値初期化部分
  6604        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn;i++){\n\t\t\t\tx[i]=DE[i][nn];\n\t\t\t}\n\n&quot;);
  6605        |     |     |    
  6606        |     |     +--- //後退代入計算部分
  6607        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=nn-1; i&gt;=0;i--){\n\t\t\t\tfor(j=i+1;j&lt;nn;j++){\n\t\t\t\t\tx[i]-=DE[i][j]*x[j];\n\t\t\t\t}\n\t\t\t\tx[i] /= DE[i][i];\n\t\t\t}\n\n&quot;);
  6608        |     |     |    
  6609        |     |     +--- //デバッグ用推定値表示部分
  6610        |     |     +--- fprintf(fp,&quot;\t\t\tif(DEBUG&gt;0){\n\t\t\t\tprintf(\&quot;\\nestimation\\n\&quot;);\n\t\t\t\tfor(i=0;i&lt;npN;i++){\n&quot;);
  6611        |     |     +--- /****************************************************************************************************/
  6612        |     |     |    //                                                                                                     
  6613        |     |     |    //Kogakuin Irie                                                                                        
  6614        |     |     |    //d-Splineのバグ修正のための変更                                                                       
  6615        |     |     |    //既存コードはコメントアウト                                                                           
  6616        |     |     |    //                                                                                                     
  6617        |     |     +--- //  fprintf(fp,&quot;\t\t\t\t\tprintf(\&quot;[%%d],%%lf\\n\&quot;,i+1,x[i]);\n\t\t\t\t\t}printf(\&quot;\\n\&quot;);\n\t\t\t\t}\n\n&quot;);
  6618        |     |     +--- fprintf(fp,&quot;\t\t\t\t\tprintf(\&quot;[%%d],%%lf\\n\&quot;,i+1,x[i*3]);\n\t\t\t\t\t}printf(\&quot;\\n\&quot;);\n\t\t\t\t}\n\n&quot;);
  6619        |     |     +--- //
  6620        |     |     |    //ここまで                                                                                             
  6621        |     |     |    //                                                                                                     
  6622        |     |     |    /****************************************************************************************************/ 
  6623        |     |     |                                                                                                           
  6624        |     |     |    /****************************************************************************************************/ 
  6625        |     |     |    //                                                                                                     
  6626        |     |     |    //Kogakuin Irie                                                                                        
  6627        |     |     |    //d-Splineのバグ修正のための変更                                                                       
  6628        |     |     |    //既存コードはコメントアウト                                                                           
  6629        |     |     |    //                                                                                                     
  6630        |     |     |    //最小推定値探索部分                                                                                   
  6631        |     |     +--- //  fprintf(fp,&quot;\t\t\ttemp=x[0];\n\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tif(x[i]&lt;temp){\n&quot;);
  6632        |     |     |    //  fprintf(fp,&quot;\t\t\t\t\ttemp=x[i];\n\t\t\t\t\tbestP=i;\n\t\t\t\t}\n\t\t\t}\n&quot;);        
  6633        |     |     +--- fprintf(fp,&quot;\t\t\ttemp=x[0];\n\t\t\tbestP=0;\n\n\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tj=i*3;\n\n\t\t\t\tif(x[j]&lt;temp){\n&quot;);
  6634        |     |     +--- fprintf(fp,&quot;\t\t\t\t\ttemp=x[j];\n\t\t\t\t\tbestP=i;\n\t\t\t\t}\n\t\t\t}\n\n&quot;);
  6635        |     |     +--- //
  6636        |     |     |    //ここまで                                                                                             
  6637        |     |     |    //                                                                                                     
  6638        |     |     |    /****************************************************************************************************/ 
  6639        |     |     |                                                                                                           
  6640        |     |     |    /****************************************************************************************************/ 
  6641        |     |     |    //                                                                                                     
  6642        |     |     |    //Kogakuin Irie                                                                                        
  6643        |     |     |    //d-Splineのバグ修正のための変更                                                                       
  6644        |     |     |    //既存コードはコメントアウト                                                                           
  6645        |     |     |    //                                                                                                     
  6646        |     |     |    //ベストパラメタ表示部分                                                                               
  6647        |     |     +--- //  fprintf(fp,&quot;\t\t\tprintf(\&quot;\\nbest para = %%d time = %%lf\\n\&quot;,bestP+1,x[bestP]);\n\n&quot;);
  6648        |     |     +--- fprintf(fp,&quot;\t\t\tprintf(\&quot;\\nbest para = %%d time = %%lf\\n\&quot;,bestP+1,x[bestP*3]);\n\n&quot;);
  6649        |     |     +--- //
  6650        |     |     |    //ここまで                                                                                             
  6651        |     |     |    //                                                                                                     
  6652        |     |     |    /****************************************************************************************************/ 
  6653        |     |     |                                                                                                           
  6654        |     |     |    //選択基準2初期化部分                                                                                  
  6655        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tselect2[i][1]=i;\n\t\t\t\tselect2[i][0]=0;\n\t\t\t}\n\n&quot;);
  6656        |     |     |    
  6657        |     |     +--- /****************************************************************************************************/
  6658        |     |     |    //                                                                                                     
  6659        |     |     |    //Kogakuin Irie                                                                                        
  6660        |     |     |    //d-Splineのバグ修正のための変更                                                                       
  6661        |     |     |    //既存コードはコメントアウト                                                                           
  6662        |     |     |    //                                                                                                     
  6663        |     |     |    //変化率計算部分                                                                                       
  6664        |     |     +--- //  fprintf(fp,&quot;\t\t\tfor(i=1;i&lt;npN-1;i++){\n\t\t\t\tselect2[i][0]=fabs( x[i-1] - 2*x[i] + x[i+1] );\n\t\t\t}\n\n&quot;);
  6665        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=1;i&lt;npN-1;i++){\n\t\t\t\tj=i*3;\n\t\t\t\tselect2[i][0]=fabs( x[j-3] - 2*x[j] + x[j+3] );\n\t\t\t}\n\n&quot;);
  6666        |     |     +--- //
  6667        |     |     |    //ここまで                                                                                             
  6668        |     |     |    //                                                                                                     
  6669        |     |     |    /****************************************************************************************************/ 
  6670        |     |     |                                                                                                           
  6671        |     |     |    //select2ソート部分                                                                                    
  6672        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0 ; i&lt;npN-1 ; i++){\n\t\t\t\tfor(j=npN-1 ; j&gt;i ; j--){\n\t\t\t\t\tif(select2[j-1][0] &lt; select2[j][0]){\n\t\t\t\t\t\ttemp=select2[j][0];\n\t\t\t\t\t\ttemp2=select2[j][1];\n\t\t\t\t\t\tselect2[j][0]=select2[j-1][0];\n\t\t\t\t\t\tselect2[j][1]=select2[j-1][1];\n\t\t\t\t\t\tselect2[j-1][0]=temp;\n\t\t\t\t\t\tselect2[j-1][1]=temp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n&quot;);
  6673        |     |     |    
  6674        |     |     +--- //選択基準1or2選択部分
  6675        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tif(bestP==h[i]){\n\t\t\t\t\tfor(j=0;j&lt;npN;j++){\n\t\t\t\t\t\tfor(k=0;k&lt;npN;k++){\n\t\t\t\t\t\t\tif(select2[j][1]==h[k]){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(k+1==npN){\n\t\t\t\t\t\t\t\tnextP=select2[j][1];\n\t\t\t\t\t\t\t\tgoto OUT1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnextP=bestP;\n\t\t\t\t}\n\t\t\t}\n\t\t\tOUT1:\n&quot;);
  6676        |     |     +--- //ベストパラメタと次のパラメタを表示
  6677        |     |     +--- fprintf(fp,&quot;\t\t\tprintf(\&quot;nextP=%%d bestP=%%d \\n\\n\&quot;,nextP+1,bestP+1);\n&quot;);
  6678        |     |     |    
  6679        |     |     +--- //iswに次使うパラメタをセットする部分
  6680        |     |     +--- fprintf(fp,&quot;\t\t\t*isw = nextP+1;\n\n&quot;);
  6681        |     |     |    
  6682        |     |     +--- //3回カウント用部分
  6683        |     |     +--- fprintf(fp,&quot;\t\t\tif(prebestP==bestP){\n\t\t\t\tcount++;\n\t\t\t}\n&quot;);
  6684        |     |     +--- fprintf(fp,&quot;\t\t\telse{\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t\tprebestP=bestP;\n\n&quot;);
  6685        |     |     |    
  6686        |     |     +--- //エクセルに書き込みをする部分
  6687        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn;i++){\n\t\t\t\tfprintf(fpA,\&quot;%%lf\\n\&quot;,x[i]);\n\t\t\t}\n\t\t\tfprintf(fpA,\&quot;end\\n\\n\&quot;);\n\n&quot;);
  6688        |     |     |    
  6689        |     |     +--- //default部分ここまで
  6690        |     |     +--- fprintf(fp,&quot;\t\t\tbreak;\n&quot;);
  6691        |     |     |    
  6692        |     |     +--- //switchここまで
  6693        |     |     +--- fprintf(fp,&quot;\t\t}\n\t\tFcount++;\n&quot;);
  6694        |     |     |    
  6695        |     |     +--- //Dswitch1ここまで------------
  6696        |     |     +--- fprintf(fp,&quot;\t}\n\n&quot;);
  6697        |     |     |    
  6698        |     |     |     
  6699        |     |     +--- //Dswitch2ここから-----------------
  6700        |     |     |                                         
  6701        |     |     +--- fprintf(fp,&quot;\tif(Dswitch == 2){\n\n&quot;);
  6702        |     |     |    
  6703        |     |     +--- //DE初期化部分
  6704        |     |     +--- fprintf(fp,&quot;\t\tif(Fcount == 1){\n\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tDE[i][j]=0;\n\t\t\t\t\tR[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\n&quot;);
  6705        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn-2;i++){\n\t\t\t\tDE[i][i]=1*alfa;\n\t\t\t\tDE[i][i+1]=-2*alfa;\n\t\t\t\tDE[i][i+2]=1*alfa;\n\t\t\t}\n\t\t}\n\n&quot;);
  6706        |     |     |    
  6707        |     |     +--- /****************************************************************************************************/
  6708        |     |     |    //                                                                                                     
  6709        |     |     |    //Kogakuin Irie                                                                                        
  6710        |     |     |    //d-Splineのバグ修正のための変更                                                                       
  6711        |     |     |    //既存コードはコメントアウト                                                                           
  6712        |     |     |    //                                                                                                     
  6713        |     |     |    //標本点とその実測値のセット部分                                                                       
  6714        |     |     +--- //  fprintf(fp,&quot;\t\tq = *isw;\n\t\tq--;\n\t\th[kk]=q;\n\n\t\tDE[p][q]=1;\n\t\tDE[p][nn]=data;\n\n&quot;);
  6715        |     |     +--- fprintf(fp,&quot;\t\tq = *isw;\n\t\tq--;\n\t\tq2=q*3;\n\t\th[kk]=q;\n\n\t\tDE[p][q2]=1;\n\t\tDE[p][nn]=data;\n\n&quot;);
  6716        |     |     +--- //
  6717        |     |     |    //ここまで                                                                                                                                                                         
  6718        |     |     |    //                                                                                                                                                                                 
  6719        |     |     |    /****************************************************************************************************/                                                                             
  6720        |     |     |                                                                                                                                                                                       
  6721        |     |     |    /*******************************************************************************************************************************************************************************/  
  6722        |     |     |    //                                                                                                                                                                                 
  6723        |     |     |    //Kogakuin Irie                                                                                                                                                                    
  6724        |     |     |    //d-Splineのバグ修正のための変更                                                                                                                                                   
  6725        |     |     |    //既存コードはコメントアウト                                                                                                                                                       
  6726        |     |     |    //                                                                                                                                                                                 
  6727        |     |     |    //ギブンス変換ループ部分-------------------                                                                                                                                        
  6728        |     |     |                                                                                                                                                                                       
  6729        |     |     +--- //  fprintf(fp,&quot;\t\tfor(q=q;q&lt;nn;q++){\n\n&quot;);
  6730        |     |     |                                                   
  6731        |     |     +--- //G初期化部分（不要なため削除）
  6732        |     |     +--- /*
  6733        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tG[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\n&quot;);  
  6734        |     |     |    */                                                                                                                         
  6735        |     |     +--- //G初期化
  6736        |     |     +--- //  fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tG[i][i]=0;\n\t\t\t}\n\n&quot;);
  6737        |     |     |    //  fprintf(fp,&quot;\t\t\tG[nn][nn]=1;\n&quot;);                                        
  6738        |     |     |                                                                                   
  6739        |     |     +--- //G用計算部分
  6740        |     |     +--- //  fprintf(fp,&quot;\t\t\tr=sqrt( (DE[q][q])*(DE[q][q]) + (DE[p][q])*(DE[p][q]) );\n\n\t\t\tif(r==0)\n\t\t\t\tbreak;\n\n\t\t\tc=DE[q][q]/r;\n\t\t\ts=DE[p][q]/r;\n\n\t\t\tG[p][p]=c;\n\t\t\tG[q][q]=c;\n\n\t\t\tG[q][p]=s;\n\t\t\tG[p][q]=-1*s;\n\n&quot;);
  6741        |     |     |                                                                                                                                                                                                                                                       
  6742        |     |     |                                                                                                                                                                                                                                                       
  6743        |     |     |                                                                                                                                                                                                                                                       
  6744        |     |     |                                                                                                                                                                                                                                                       
  6745        |     |     +--- //R=G*DEギブンス変換部分
  6746        |     |     +--- //  fprintf(fp,&quot;\t\t\tR[q][q]+=G[q][q]*DE[q][q];\n\t\t\tR[q][q]+=G[q][nn]*DE[nn][q];\n\t\t\tif( (q+1)!=nn &amp;&amp; (q+1)&lt;=nn ){\n\t\t\tR[q][q+1]+=G[q][q]*DE[q][q+1];\n\t\t\tR[q][q+1]+=G[q][nn]*DE[nn][q+1];\n\t\t\t}\n\n\t\t\tif( (q+2)!=nn &amp;&amp; (q+2)&lt;=nn ){\n\t\t\tR[q][q+2]+=G[q][q]*DE[q][q+2];\n\t\t\tR[q][q+2]+=G[q][nn]*DE[nn][q+2];\n\t\t\t}\n\n\t\t\tR[q][nn]+=G[q][q]*DE[q][nn];\n\t\t\tR[q][nn]+=G[q][nn]*DE[nn][nn];\n\n\t\t\tR[nn][q]+=G[nn][q]*DE[q][q];\n\t\t\tR[nn][q]+=G[nn][nn]*DE[nn][q];\n\n\t\t\t&quot;);
  6747        |     |     |    //  fprintf(fp,&quot;if( (q+1)!=nn &amp;&amp; (q+1)&lt;=nn ){\n\t\t\tR[nn][q+1]+=G[nn][q]*DE[q][q+1];\n\t\t\tR[nn][q+1]+=G[nn][nn]*DE[nn][q+1];\n\t\t\t}\n\n\t\t\tif( (q+2)!=nn &amp;&amp; (q+2)&lt;=nn ){\n\t\t\tR[nn][q+2]+=G[nn][q]*DE[q][q+2];\n\t\t\tR[nn][q+2]+=G[nn][nn]*DE[nn][q+2];\n\t\t\t}\n\n\t\t\tR[nn][nn]+=G[nn][q]*DE[q][nn];\n\t\t\tR[nn][nn]+=G[nn][nn]*DE[nn][nn];\n\n\t\t\t&quot;);                                                                                                                                              
  6748        |     |     |    //  fprintf(fp,&quot;DE[q][q]=R[q][q];\n\t\t\tDE[q][q+1]=R[q][q+1];\n\t\t\tDE[q][q+2]=R[q][q+2];\n\t\t\tDE[q][nn]=R[q][nn];\n\n\t\t\tDE[nn][q]=R[nn][q];\n\t\t\tDE[nn][q+1]=R[nn][q+1];\n\t\t\tDE[nn][q+2]=R[nn][q+2];\n\t\t\tDE[nn][nn]=R[nn][nn];\n\n\t\t\tR[q][q]=0;\n\t\t\tR[q][q+1]=0;\n\t\t\tR[q][q+2]=0;\n\t\t\tR[q][nn]=0;\n\n\t\t\tR[nn][q]=0;\n\t\t\tR[nn][q+1]=0;\n\t\t\tR[nn][q+2]=0;\n\t\t\tR[nn][nn]=0;\n&quot;);                                                                                                
  6749        |     |     |
  6750        |     |     +--- //R=G*DEギブンス変換部分（不要なため削除）
  6751        |     |     +--- /*
  6752        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tfor(k=0;k&lt;nn+1;k++){\n\t\t\t\t\t\tR[i][j]+=G[i][k]*DE[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n&quot;); 
  6753        |     |     |                                                                                                                                                                                             
  6754        |     |     |        //DEに次の計算のために計算結果Rを代入する部分（不要なため削除）                                                                                                                      
  6755        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tDE[i][j]=R[i][j];\n\t\t\t\t\tR[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n&quot;);                                     
  6756        |     |     |    */                                                                                                                                                                                       
  6757        |     |     |    //  fprintf(fp,&quot;\n\t\t}\n&quot;);                                                                                                                                                             
  6758        |     |     |                                                                                                                                                                                             
  6759        |     |     +--- //ギブンス変換ループここまで------------------
  6760        |     |     |                                                   
  6761        |     |     |    //ギブンス変換ループ部分-------------------    
  6762        |     |     |                                                   
  6763        |     |     +--- fprintf(fp,&quot;\t\tfor(q2=q2;q2&lt;nn;q2++){\n\n&quot;);
  6764        |     |     |    
  6765        |     |     +--- //G初期化部分（不要なため削除）
  6766        |     |     +--- /*
  6767        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tG[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\n&quot;);  
  6768        |     |     |    */                                                                                                                         
  6769        |     |     +--- //G初期化
  6770        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tG[i][i]=0;\n\t\t\t}\n\n&quot;);
  6771        |     |     +--- fprintf(fp,&quot;\t\t\tG[nn][nn]=1;\n&quot;);
  6772        |     |     |    
  6773        |     |     +--- //G用計算部分
  6774        |     |     +--- fprintf(fp,&quot;\t\t\tr=sqrt( (DE[q2][q2])*(DE[q2][q2]) + (DE[p][q2])*(DE[p][q2]) );\n\n\t\t\tif(r==0)\n\t\t\t\tbreak;\n\n\t\t\tc=DE[q2][q2]/r;\n\t\t\ts=DE[p][q2]/r;\n\n\t\t\tG[p][p]=c;\n\t\t\tG[q2][q2]=c;\n\n\t\t\tG[q2][p]=s;\n\t\t\tG[p][q2]=-1*s;\n\n&quot;);
  6775        |     |     |    
  6776        |     |     |     
  6777        |     |     |     
  6778        |     |     |     
  6779        |     |     +--- //R=G*DEギブンス変換部分
  6780        |     |     +--- fprintf(fp,&quot;\t\t\tR[q2][q2]+=G[q2][q2]*DE[q2][q2];\n\t\t\tR[q2][q2]+=G[q2][nn]*DE[nn][q2];\n\t\t\tif( (q2+1)!=nn &amp;&amp; (q2+1)&lt;=nn ){\n\t\t\tR[q2][q2+1]+=G[q2][q2]*DE[q2][q2+1];\n\t\t\tR[q2][q2+1]+=G[q2][nn]*DE[nn][q2+1];\n\t\t\t}\n\n\t\t\tif( (q2+2)!=nn &amp;&amp; (q2+2)&lt;=nn ){\n\t\t\tR[q2][q2+2]+=G[q2][q2]*DE[q2][q2+2];\n\t\t\tR[q2][q2+2]+=G[q2][nn]*DE[nn][q2+2];\n\t\t\t}\n\n\t\t\tR[q2][nn]+=G[q2][q2]*DE[q2][nn];\n\t\t\tR[q2][nn]+=G[q2][nn]*DE[nn][nn];\n\n\t\t\tR[nn][q2]+=G[nn][q2]*DE[q2][q2];\n\t\t\tR[nn][q2]+=G[nn][nn]*DE[nn][q2];\n\n\t\t\t&quot;);
  6781        |     |     +--- fprintf(fp,&quot;if( (q2+1)!=nn &amp;&amp; (q2+1)&lt;=nn ){\n\t\t\tR[nn][q2+1]+=G[nn][q2]*DE[q2][q2+1];\n\t\t\tR[nn][q2+1]+=G[nn][nn]*DE[nn][q2+1];\n\t\t\t}\n\n\t\t\tif( (q2+2)!=nn &amp;&amp; (q2+2)&lt;=nn ){\n\t\t\tR[nn][q2+2]+=G[nn][q2]*DE[q2][q2+2];\n\t\t\tR[nn][q2+2]+=G[nn][nn]*DE[nn][q2+2];\n\t\t\t}\n\n\t\t\tR[nn][nn]+=G[nn][q2]*DE[q2][nn];\n\t\t\tR[nn][nn]+=G[nn][nn]*DE[nn][nn];\n\n\t\t\t&quot;);
  6782        |     |     +--- fprintf(fp,&quot;DE[q2][q2]=R[q2][q2];\n\t\t\tDE[q2][q2+1]=R[q2][q2+1];\n\t\t\tDE[q2][q2+2]=R[q2][q2+2];\n\t\t\tDE[q2][nn]=R[q2][nn];\n\n\t\t\tDE[nn][q2]=R[nn][q2];\n\t\t\tDE[nn][q2+1]=R[nn][q2+1];\n\t\t\tDE[nn][q2+2]=R[nn][q2+2];\n\t\t\tDE[nn][nn]=R[nn][nn];\n\n\t\t\tR[q2][q2]=0;\n\t\t\tR[q2][q2+1]=0;\n\t\t\tR[q2][q2+2]=0;\n\t\t\tR[q2][nn]=0;\n\n\t\t\tR[nn][q2]=0;\n\t\t\tR[nn][q2+1]=0;\n\t\t\tR[nn][q2+2]=0;\n\t\t\tR[nn][nn]=0;\n&quot;);
  6783        |     |     |    
  6784        |     |     +--- //R=G*DEギブンス変換部分（不要なため削除）
  6785        |     |     +--- /*
  6786        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tfor(k=0;k&lt;nn+1;k++){\n\t\t\t\t\t\tR[i][j]+=G[i][k]*DE[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n&quot;); 
  6787        |     |     |                                                                                                                                                                                             
  6788        |     |     |        //DEに次の計算のために計算結果Rを代入する部分（不要なため削除）                                                                                                                      
  6789        |     |     |        fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tDE[i][j]=R[i][j];\n\t\t\t\t\tR[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n&quot;);                                     
  6790        |     |     |    */                                                                                                                                                                                       
  6791        |     |     +--- fprintf(fp,&quot;\n\t\t}\n&quot;);
  6792        |     |     |    
  6793        |     |     +--- //ギブンス変換ループここまで------------------
  6794        |     |     |    //                                                                                                                                                                                 
  6795        |     |     |    //ここまで                                                                                                                                                                         
  6796        |     |     |    //                                                                                                                                                                                 
  6797        |     |     |    /*******************************************************************************************************************************************************************************/  
  6798        |     |     |                                                                                                                                                                                       
  6799        |     |     +--- fprintf(fp,&quot;\t\tkk++;\n\n&quot;);
  6800        |     |     |    
  6801        |     |     +--- //Dswitch2ここまで
  6802        |     |     +--- fprintf(fp,&quot;\t}\n&quot;);
  6803        |     |     |    
  6804        |     |     +--- fprintf(fp,&quot;\tfclose(fpA);\n\n&quot;);
  6805        |     |     |    
  6806        |     |     +--- //関数ここまで
  6807        |     |     +--- fprintf(fp,&quot;\treturn 0;\n}\n\n&quot;);
  6808        |     |     |    
  6809        |     |     |     
              |     |   +-+---+ 
  6810        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  6811        |   |  }  | 
              |   +-----+ 
  6812        |    
  6813        |     
  6814        |     
  6815        +--- //d-spline用追加部分　ここまで----------------dynamicDspline--------------------------------------
  6816        |    //                                                                                                                           
  6817        |                                                                                                                                 
  6818        |    /*************************************************************************************************************************/  
  6819        |    //                                                                                                                           
  6820        |    //Kogakuin Irie                                                                                                              
  6821        |    //2次元対応のd-Spline用追加部分                                                                                              
  6822        |    //                                                                                                                           
              |  +--------------------------+ 
  6823        +--+ if(FittingDspline == 2){ | 
              |  +--+-----------------------+ 
  6824        |     +--- //2次元用d-spline（インストール時自動チューニング用）
              |     |  +------------------------------+ 
  6825        |     +--+ if(TuneGroup == tgInstall){  | 
              |     |  +--+---------------------------+ 
  6826        |     |     +--- //インストール時自動チューニングに使用するdspline2の定義
  6827        |     |     +--- fprintf(fp,&quot;#include &lt;stdio.h&gt;\n&quot;);
  6828        |     |     +--- fprintf(fp,&quot;#include &lt;stdlib.h&gt;\n&quot;);
  6829        |     |     +--- fprintf(fp,&quot;\n#define DEBUG 2\n\n&quot;);
  6830        |     |     |    
  6831        |     |     +--- //ここから流用　関数出力のため------
  6832        |     |     |                                         
              |     |     |  +------------------------------+ 
  6833        |     |     +--+ if(TuneGroup != tgDynamic){  | 
              |     |     |  +--+---------------------------+ 
              |     |     |     |  +----------------------------------------+ 
  6834        |     |     |     +--+ if(MainF-&gt;Call_ATExec_Script == NULL){ | 
              |     |     |     |  +--+-------------------------------------+ 
  6835        |     |     |     |     +--- TScript *Script = new TScript(MainF-&gt;TokenList,0,NULL,ValDataList);
  6836        |     |     |     |     +--- ArgStr = Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);
  6837        |     |     |     |     +--- fprintf(fp,&quot;int dsp2giv%s%s(int npN,int para1st,int para2nd%s)\n&quot;,TuneGroupName.c_str(),
  6838        |     |     |     |     |        Name.c_str(),ArgStr.c_str());                                                        
  6839        |     |     |     |     +--- fprintf(fpOutHeader,&quot;int dsp2giv%s%s(int npN,int para1st,int para2nd%s);\n&quot;,TuneGroupName.c_str(),
  6840        |     |     |     |     |        Name.c_str(),ArgStr.c_str());                                                                  
  6841        |     |     |     |     +--- delete Script;
  6842        |     |     |     |     +--- //          fprintf(fp,&quot;OAT_ATexec%s%s(char *OAT_Routines)\n&quot;,TuneGroupName.c_str(),Name.c_str());
              |     |     |     |   +-+---+ 
  6843        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+-------+ 
  6843        |     |     |     |   |  else{  | 
              |     |     |     |   +-+-------+ 
  6844        |     |     |     |     +--- ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);
  6845        |     |     |     |     +--- fprintf(fp,&quot;int dsp2giv%s%s(int npN,int para1st,int para2nd%s)\n&quot;,TuneGroupName.c_str(),
  6846        |     |     |     |     |        Name.c_str(),ArgStr.c_str());                                                        
  6847        |     |     |     |     +--- fprintf(fpOutHeader,&quot;int dsp2giv%s%s(int npN,int para1st,int para2nd%s);\n&quot;,TuneGroupName.c_str(),
  6848        |     |     |     |     |        Name.c_str(),ArgStr.c_str());                                                                  
              |     |     |     |   +-+---+ 
  6849        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
  6850        |     |     |     +--- iBsetSw1Str = &quot;iBestSw1&quot;;
              |     |     |   +-+---------+ 
  6851        |     |     |   |  }//else{ | 
              |     |     |   +-----------+ 
  6852        |     |     +--- //          if(MainF-&gt;Call_ATExec_Script == NULL){
  6853        |     |     |    //              TScript *Script = new TScript(MainF-&gt;TokenList,0,NULL,ValDataList);                  
  6854        |     |     |    //              ArgStr = Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);                                        
  6855        |     |     |    /*                                                                                                   
  6856        |     |     |                    fprintf(fp,&quot;int dsp2giv%s%s(char *OAT_Routines,int %s,int *iBestSw1)\n&quot;,             
  6857        |     |     |                        TuneGroupName.c_str(),Name.c_str(),BaseValName.c_str());                         
  6858        |     |     |                    fprintf(fpOutHeader,&quot;int dsp2giv%s%s(char *OAT_Routines,int %s,int *iBestSw1);\n&quot;,   
  6859        |     |     |                        TuneGroupName.c_str(),Name.c_str(),BaseValName.c_str());                         
  6860        |     |     |    */                                                                                                   
  6861        |     |     |    //              fprintf(fp,&quot;int dsp2giv%s%s(int npN,int para1st,int para2nd%s)\n&quot;,                   
  6862        |     |     |    //                  TuneGroupName.c_str(),Name.c_str(),ArgStr.c_str());                              
  6863        |     |     |    //              fprintf(fpOutHeader,&quot;int dsp2giv%s%s(int npN,int para1st,int para2nd%s);\n&quot;,         
  6864        |     |     |    //                  TuneGroupName.c_str(),Name.c_str(),ArgStr.c_str());                              
  6865        |     |     |    //              delete Script;                                                                       
  6866        |     |     |    //          }else{                                                                                   
  6867        |     |     |    //              ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(true,&quot;&quot;,&quot;&quot;);                     
  6868        |     |     |    /*                                                                                                   
  6869        |     |     |                    fprintf(fp,&quot;int dsp2giv%s%s(char *OAT_Routines,int %s,int *iBestSw1%s)\n&quot;,           
  6870        |     |     |                        TuneGroupName.c_str(),Name.c_str(),BaseValName.c_str(),ArgStr.c_str());          
  6871        |     |     |                    fprintf(fpOutHeader,&quot;int dsp2giv%s%s(char *OAT_Routines,int %s,int *iBestSw1%s);\n&quot;, 
  6872        |     |     |                        TuneGroupName.c_str(),Name.c_str(),BaseValName.c_str(),ArgStr.c_str());          
  6873        |     |     |    */                                                                                                   
  6874        |     |     |    //              fprintf(fp,&quot;int dsp2giv%s%s(int npN,int para1st,int para2nd%s)\n&quot;,                   
  6875        |     |     |    //                  TuneGroupName.c_str(),Name.c_str(),ArgStr.c_str());                              
  6876        |     |     |    //              fprintf(fpOutHeader,&quot;int dsp2giv%s%s(int npN,int para1st,int para2nd%s);\n&quot;,         
  6877        |     |     |    //                  TuneGroupName.c_str(),Name.c_str(),ArgStr.c_str());                              
  6878        |     |     |    //                                                                                                   
  6879        |     |     |    //          }                                                                                        
  6880        |     |     |    //          iBsetSw1Str = &quot;*iBestSw1&quot;;                                                               
  6881        |     |     |    //      }                                                                                            
  6882        |     |     |                                                                                                         
  6883        |     |     +--- //ここまで流用　関数出力用------
  6884        |     |     +--- fprintf(fp,&quot;{\n&quot;);
  6885        |     |     |    
  6886        |     |     +--- //変数宣言部分
  6887        |     |     +--- fprintf(fp,&quot;\tint p3_1st=para1st*3;\n&quot;);
  6888        |     |     +--- fprintf(fp,&quot;\tint p3_2nd=para2nd*3;\n&quot;);
  6889        |     |     +--- fprintf(fp,&quot;\tint p3_2nd_2 = p3_2nd-2;\n&quot;);
  6890        |     |     +--- fprintf(fp,&quot;\tint nn=(p3_1st-2)*p3_2nd_2;\n&quot;);
  6891        |     |     +--- fprintf(fp,&quot;\tdouble DE[nn+1][nn+1];\n&quot;);
  6892        |     |     +--- fprintf(fp,&quot;\tdouble R[nn+1][nn+1];\n&quot;);
  6893        |     |     +--- fprintf(fp,&quot;\tdouble radius,cosine,sine;\n&quot;);
  6894        |     |     +--- fprintf(fp,&quot;\tint p,q,q2;\n&quot;);
  6895        |     |     +--- fprintf(fp,&quot;\tdouble data;\n&quot;);
  6896        |     |     +--- fprintf(fp,&quot;\tint count=1;\n&quot;);
  6897        |     |     +--- fprintf(fp,&quot;\tdouble x[nn];\n&quot;);
  6898        |     |     +--- fprintf(fp,&quot;\tdouble temp;\n&quot;);
  6899        |     |     +--- fprintf(fp,&quot;\tint temp2,bestP=0,nextP,prebestP;\n&quot;);
  6900        |     |     +--- fprintf(fp,&quot;\tdouble select2[npN][2];\n&quot;);
  6901        |     |     +--- fprintf(fp,&quot;\tint h[npN];\n&quot;);
  6902        |     |     +--- fprintf(fp,&quot;\tint dspline_isw[npN];\n&quot;);
  6903        |     |     +--- fprintf(fp,&quot;\tint kk=0;\n&quot;);
  6904        |     |     +--- fprintf(fp,&quot;\tdouble alfa=0.1;\n&quot;);
  6905        |     |     +--- fprintf(fp,&quot;\tdouble t1,t2;\n&quot;);
  6906        |     |     +--- fprintf(fp,&quot;\tint F2[16];\n&quot;);
  6907        |     |     +--- fprintf(fp,&quot;\tint i,j,k,i4;\n\n&quot;);
  6908        |     |     |    
  6909        |     |     +--- //エクセル書き込み用部分
  6910        |     |     +--- fprintf(fp,&quot;\tFILE *fpA;\n&quot;);
  6911        |     |     +--- fprintf(fp,&quot;\tchar *fname = \&quot;d-SplineData.csv\&quot;;\n&quot;);
  6912        |     |     +--- fprintf(fp,&quot;\tfpA = fopen(fname,\&quot;w\&quot;);\n\n&quot;);
  6913        |     |     |    
  6914        |     |     +--- //DE初期化部分
  6915        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;nn+1;i++){\n\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\tDE[i][j]=0;\n\t\t\tR[i][j]=0;\n\t\t}\n\t}\n\n&quot;);
  6916        |     |     |    
  6917        |     |     +--- //DE1,-2,1(1,1,-4,1,1)セット部分
  6918        |     |     +--- fprintf(fp,&quot;\tj=0;\n\n&quot;);
  6919        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;nn-4;i++){\n\t\tif(i&lt;p3_2nd_2-2){\n\t\t\tDE[i][i]=1*alfa;\n\t\t\tDE[i][i+1]=-2*alfa;\n\t\t\tDE[i][i+2]=1*alfa;\n\t\t}\n\t\telse if(i&gt;=nn-p3_2nd){\n\t\t\tDE[i][i+2]=1*alfa;\n\t\t\tDE[i][i+3]=-2*alfa;\n\t\t\tDE[i][i+4]=1*alfa;\n\t\t}\n\t\telse{\n\t\t\tif(j%%p3_2nd_2==0||(j+1)%%p3_2nd_2==0){\n\t\t\t\tDE[i][j]=1*alfa;\n\t\t\t\tDE[i][j+p3_2nd_2]=-2*alfa;\n\t\t\t\tDE[i][j+2*p3_2nd_2]=1*alfa;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tDE[i][j]=1*alfa;\n\t\t\t\tDE[i][j+p3_2nd_2-1]=1*alfa;\n\t\t\t\tDE[i][j+p3_2nd_2]=-4*alfa;\n\t\t\t\tDE[i][j+p3_2nd_2+1]=1*alfa;\n\t\t\t\tDE[i][j+2*p3_2nd_2]=1*alfa;\n\t\t\t}\n\n\t\t\tj++;\n\t\t}\n\t}\n\n&quot;);
  6920        |     |     |    
  6921        |     |     +--- /*DEをあらかじめ上三角行列に整形*/
  6922        |     |     +--- fprintf(fp,&quot;\tq=0;\n\n\tfor(i=p3_2nd_2-2;i&lt;nn-p3_2nd;i++){\n\t\tfor(j=0;j&lt;p3_2nd_2-2;j++){\n&quot;);
  6923        |     |     |    
  6924        |     |     +--- //G用計算部分
  6925        |     |     +--- fprintf(fp,&quot;\t\t\tradius=sqrt( (DE[q+j][q+j])*(DE[q+j][q+j]) + (DE[i][q+j])*(DE[i][q+j]) );\n\n\t\t\tif(radius==0)\n\t\t\t\tcontinue;\n\n\t\t\tcosine=DE[q+j][q+j]/radius;\n\t\t\tsine=DE[i][q+j]/radius;\n\n&quot;);
  6926        |     |     |    
  6927        |     |     +--- //R=回転行列*DEギブンス変換部分
  6928        |     |     +--- fprintf(fp,&quot;\t\t\tfor(k=j;k&lt;2*p3_2nd_2+1;k++){\n\t\t\t\tif(k==nn)\n\t\t\t\t\tbreak;\n\n\t\t\t\tR[q+j][q+k]+=cosine*DE[q+j][q+k];\n\t\t\t\tR[q+j][q+k]+=sine*DE[i][q+k];\n\n\t\t\t\tR[i][q+k]+=(-1)*sine*DE[q+j][q+k];\n\t\t\t\tR[i][q+k]+=cosine*DE[i][q+k];\n\n\t\t\t\tDE[q+j][q+k]=R[q+j][q+k];\n\t\t\t\tDE[i][q+k]=R[i][q+k];\n\n\t\t\t\tR[q+j][q+k]=0;\n\t\t\t\tR[i][q+k]=0;\n\t\t\t}\n&quot;);
  6929        |     |     |    
  6930        |     |     +--- fprintf(fp,&quot;\t\t}\n\n\t\tq++;\n\t}\n\n&quot;);
  6931        |     |     +--- /*整形終了*/
  6932        |     |     |                   
  6933        |     |     |    //h初期化部分  
  6934        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;=npN;i++){\n\t\th[i]=npN+1;\n\t}\n\n&quot;);
  6935        |     |     |    
  6936        |     |     +--- //初期16点決定部分
  6937        |     |     +--- fprintf(fp,&quot;\tF2[0]=1;\n\tF2[1]=(2+para2nd)/3;\n\tF2[2]=(1+2*para2nd)/3;\n\tF2[3]=para2nd;\n\tF2[4]=((2+para1st)/3-1)*para2nd+1;\n\tF2[5]=((2+para1st)/3-1)*para2nd+(2+para2nd)/3;\n\tF2[6]=((2+para1st)/3-1)*para2nd+(1+2*para2nd)/3;\n\tF2[7]=((2+para1st)/3-1)*para2nd+para2nd;\n\tF2[8]=((1+2*para1st)/3-1)*para2nd+1;\n\tF2[9]=((1+2*para1st)/3-1)*para2nd+(2+para2nd)/3;\n\tF2[10]=((1+2*para1st)/3-1)*para2nd+(1+2*para2nd)/3;\n\tF2[11]=((1+2*para1st)/3-1)*para2nd+para2nd;\n\tF2[12]=(para1st-1)*para2nd+1;\n\tF2[13]=(para1st-1)*para2nd+(2+para2nd)/3;\n\tF2[14]=(para1st-1)*para2nd+(1+2*para2nd)/3;\n\tF2[15]=(para1st-1)*para2nd+para2nd;\n\n\tp=nn;\n\n&quot;);
  6938        |     |     |    
  6939        |     |     +--- //パラメータの取りうる値が，d-Spline関数中ではどの点に対応するかを設定
  6940        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;npN;i++)\n\t{\n\t\tdspline_isw[i]=3*i+(p3_2nd-3)*((int)(i/para2nd)*2);\n\t}\n\n&quot;);
  6941        |     |     |    
  6942        |     |     +--- //初期16点の計算用部分------------------------------------------------------
  6943        |     |     +--- fprintf(fp,&quot;\tfor(i4=0;i4&lt;16;i4++){\n\t\tq=F2[i4];\n\t\tq2=dspline_isw[q-1];\n\n&quot;);
  6944        |     |     +--- fprintf(fp,&quot;\t\tt1 = omp_get_wtime();\n&quot;);
  6945        |     |     +--- //計算する関数に飛ぶ部分    基本的に既存部分の流用
              |     |     |  +----------------------------------------------------------------------------------+ 
  6946        |     |     +--+ if(MainF-&gt;EECntlF){     // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |     |     |  +--+-------------------------------------------------------------------------------+ 
  6947        |     |     |     +--- fprintf(fp,&quot;\t\t\tiloop_inner = 0;\n&quot;);
  6948        |     |     |     +--- fprintf(fp,&quot;\t\t\twhile(OAT_Eecntl_Continue()){\n&quot;);
  6949        |     |     |     +--- s = &quot;\t\t\t&quot;+FuncName + &quot;(&quot;;
              |     |     |   +-+---+ 
  6950        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------+ 
  6950        |     |     |   |  else{  | 
              |     |     |   +-+-------+ 
  6951        |     |     |     +--- s = &quot;\t\t&quot;+FuncName + &quot;(&quot;;
              |     |     |   +-+---+ 
  6952        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------------------------------------------+ 
  6953        |     |     +--+ for(i = 0 ; i &lt; ArgValList-&gt;Count ; i++){  | 
              |     |     |  +--+-----------------------------------------+ 
              |     |     |     |  +------------------------------------+ 
  6954        |     |     |     +--+ if(ArgValList-&gt;Strings[i] == &quot;&quot;){  | 
              |     |     |     |  +--+---------------------------------+ 
              |     |     |     |     |  +------------+ 
  6955        |     |     |     |     +--+ continue;  | 
              |     |     |     |     |  +------------+ 
              |     |     |     |   +-+---+ 
  6956        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
  6957        |     |     |     +--- ValData = (TValData *)ArgValList-&gt;Objects[i];
  6958        |     |     |     +--- s += ValData-&gt;Str + &quot;, &quot;;
              |     |     |   +-+---+ 
  6959        |     |     |   |  }  | 
              |     |     |   +-----+ 
  6960        |     |     +--- s += &quot;q);&quot;;
  6961        |     |     +--- fprintf(fp,&quot;%s\n&quot;,s.c_str());
  6962        |     |     |    
  6963        |     |     |     
  6964        |     |     +--- fprintf(fp,&quot;\t\tt2 = omp_get_wtime();\n\n\t\tdata = t2 - t1;\n\n&quot;);
  6965        |     |     +--- fprintf(fp,&quot;\t\tprintf(\&quot;\\n---para is %%d time is %%lf--- \\n\&quot;,q,data);\n\n&quot;);
  6966        |     |     +--- fprintf(fp,&quot;\t\tq--;\n\t\th[kk]=q;\n\n\t\tDE[p][q2]=1;\n\t\tDE[p][nn]=data;\n\n&quot;);
  6967        |     |     |    
  6968        |     |     +--- //------初期16点ギブンス変換for文部分ここから------
  6969        |     |     +--- fprintf(fp,&quot;\t\tfor(q2=q2;q2&lt;nn;q2++){\n\n&quot;);
  6970        |     |     |    
  6971        |     |     +--- //G用計算部分
  6972        |     |     +--- fprintf(fp,&quot;\t\t\tradius=sqrt( (DE[q2][q2])*(DE[q2][q2]) + (DE[p][q2])*(DE[p][q2]) );\n\n\t\t\tif(radius==0)\n\t\t\t\tcontinue;\n\n\t\t\tcosine=DE[q2][q2]/radius;\n\t\t\tsine=DE[p][q2]/radius;\n\n&quot;);
  6973        |     |     |    
  6974        |     |     +--- //R=回転行列*DEギブンス変換部分
  6975        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=q2;i&lt;q2+2*p3_2nd_2+1;i++){\n\t\t\t\tif(i==p+1)\n\t\t\t\t\tbreak;\n\n\t\t\t\tR[q2][i]+=cosine*DE[q2][i];\n\t\t\t\tR[q2][i]+=sine*DE[p][i];\n\n\t\t\t\tR[p][i]+=(-1)*sine*DE[q2][i];\n\t\t\t\tR[p][i]+=cosine*DE[p][i];\n\n\t\t\t\tDE[q2][i]=R[q2][i];\n\t\t\t\tDE[p][i]=R[p][i];\n\n\t\t\t\tR[q2][i]=0;\n\t\t\t\tR[p][i]=0;\n\n\t\t\t\tif(i==q2+2*p3_2nd_2){\n\t\t\t\t\tR[q2][p]+=cosine*DE[q2][p];\n\t\t\t\t\tR[q2][p]+=sine*DE[p][p];\n\n\t\t\t\t\tR[p][p]+=(-1)*sine*DE[q2][p];\n\t\t\t\t\tR[p][p]+=cosine*DE[p][p];\n\n\t\t\t\t\tDE[q2][p]=R[q2][p];\n\t\t\t\t\tDE[p][p]=R[p][p];\n\n\t\t\t\t\tR[q2][p]=0;\n\t\t\t\t\tR[p][p]=0;\n\t\t\t\t}\n\t\t\t}\n&quot;);
  6976        |     |     |    
  6977        |     |     +--- fprintf(fp,&quot;\t\t}\n\n\t\tkk++;\n\t}\n\n&quot;);
  6978        |     |     +--- //------初期16点ギブンス変換for文部分ここまで------
  6979        |     |     |                                                                           
  6980        |     |     |                                                                           
  6981        |     |     |    //------初期16点計算後、ベストパラメタと次のパラメタ決定ここから------ 
  6982        |     |     |                                                                           
  6983        |     |     |    //推定値代入初期化部分                                                 
  6984        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;nn;i++){\n\t\tx[i]=DE[i][nn];\n\t}\n\n&quot;);
  6985        |     |     |    
  6986        |     |     +--- //後退代入で推定値計算部分
  6987        |     |     +--- fprintf(fp,&quot;\tfor(i=nn-1; i&gt;=0;i--){\n\t\tfor(j=i+1;j&lt;nn;j++){\n\t\t\tx[i]-=DE[i][j]*x[j];\n\t\t}\n\t\tx[i] /= DE[i][i];\n\t}\n\n&quot;);
  6988        |     |     |    
  6989        |     |     +--- //デバッグ用、推定値表示部分
  6990        |     |     +--- fprintf(fp,&quot;\tif(DEBUG&gt;0){\n\t\tprintf(\&quot;\\nestimation\\n\&quot;);\n\t\tfor(i=0;i&lt;npN;i++){\n\t\t\tprintf(\&quot;[%%d],%%lf\\n\&quot;,i+1,x[dspline_isw[i]]);\n\t\t}\n\t\tprintf(\&quot;\\n\&quot;);\n\t}\n\n&quot;);
  6991        |     |     |    
  6992        |     |     +--- //推定値が最小となる番号をベストパラメタに設定する部分
  6993        |     |     +--- fprintf(fp,&quot;\ttemp=x[0];\n\tbestP=0;\n\n\tfor(i=0;i&lt;npN;i++){\n\t\tif(x[dspline_isw[i]]&lt;temp){\n\t\t\ttemp=x[dspline_isw[i]];\n\t\t\tbestP=i;\n\t\t}\n\t}\n\n&quot;);
  6994        |     |     +--- fprintf(fp,&quot;\tprintf(\&quot;\\nbest para = %%d time = %%lf\\n\&quot;,bestP+1,x[dspline_isw[bestP]]);\n\n&quot;);
  6995        |     |     |    
  6996        |     |     +--- //選択基準2用配列初期化部分
  6997        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;npN;i++){\n\t\tselect2[i][1]=i;\n\t\tselect2[i][0]=0;\n\t}\n\n&quot;);
  6998        |     |     |    
  6999        |     |     +--- //変化率計算部分
  7000        |     |     +--- fprintf(fp,&quot;\tk=p3_2nd_2*3;\n\n&quot;);
  7001        |     |     +--- fprintf(fp,&quot;\tfor(i=1;i&lt;npN-1;i++){\n\t\tj=dspline_isw[i];\n\n\t\tif(i&lt;para2nd-1||(para1st-1)*para2nd&lt;i){\n\t\t\tselect2[i][0]=fabs( x[j-3] - 2*x[j] + x[j+3] );\n\t\t}\n\t\telse if((i%%para2nd==0)&amp;&amp;(i&lt;(para1st-1)*para2nd)||((i+1)%%para2nd==0)&amp;&amp;i&gt;para2nd){\n\t\t\tselect2[i][0]=fabs( x[j-k] - 2*x[j] + x[j+k] );\n\t\t}\n\t\telse if( i!=para2nd-1&amp;&amp;i!=(para1st-1)*para2nd){\n\t\t\tselect2[i][0]=fabs( x[j-3] + x[j-k] - 4*x[j] + x[j+k] + x[j+3] );\n\t\t}\n\t}\n\n&quot;);
  7002        |     |     |    
  7003        |     |     +--- //select2ソート部分
  7004        |     |     +--- fprintf(fp,&quot;\tfor(i=0 ; i&lt;npN-1 ; i++){\n\t\tfor(j=npN-1 ; j&gt;i ; j--){\n\t\t\tif(select2[j-1][0] &lt; select2[j][0]){\n\t\t\t\ttemp=select2[j][0];\n\t\t\t\ttemp2=select2[j][1];\n\t\t\t\tselect2[j][0]=select2[j-1][0];\n\t\t\t\tselect2[j][1]=select2[j-1][1];\n\t\t\t\tselect2[j-1][0]=temp;\n\t\t\t\tselect2[j-1][1]=temp2;\n\t\t\t}\n\t\t}\n\t}\n\n&quot;);
  7005        |     |     |    
  7006        |     |     +--- //推定したベストPがすでに標本点にあるなら選択基準2、ないなら選択基準1　選択する部分
  7007        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;npN;i++){\n&quot;);
  7008        |     |     +--- fprintf(fp,&quot;\t\tif(bestP==h[i]){\n\t\t\tfor(j=0;j&lt;npN;j++){\n\t\t\t\tfor(k=0;k&lt;npN;k++){\n\t\t\t\t\tif(select2[j][1]==h[k]){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(k+1==npN){\n\t\t\t\t\t\tnextP=select2[j][1];\n\t\t\t\t\t\tgoto OUT1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n&quot;);
  7009        |     |     +--- fprintf(fp,&quot;\t\telse{\n\t\t\tnextP=bestP;\n\t\t}\n\t}\n\tOUT1:\n&quot;);
  7010        |     |     +--- fprintf(fp,&quot;\tprintf(\&quot;nextP=%%d bestP=%%d \\n\\n\&quot;,nextP+1,bestP+1);\n\n&quot;);
  7011        |     |     |    
  7012        |     |     +--- //prebestPに16点計算終了時のベストパラメタを代入する部分
  7013        |     |     +--- fprintf(fp,&quot;\tprebestP=bestP;\n\n\n&quot;);
  7014        |     |     |    
  7015        |     |     +--- //推定値をエクセルに書き込みする部分
  7016        |     |     +--- fprintf(fp,&quot;\tfor(i=0;i&lt;nn;i++){\n\t\tfprintf(fpA,\&quot;%%lf\\n\&quot;,x[i]);\n\t}\n\tfprintf(fpA,\&quot;end\\n\\n\&quot;);\n\n&quot;);
  7017        |     |     |    
  7018        |     |     +--- fprintf(fp,&quot;\tprintf(\&quot;\\n----------end 16 point---------- \\n\&quot;);\n\n&quot;);
  7019        |     |     |    
  7020        |     |     +--- //--------16点後のdo while文ここから--------
  7021        |     |     +--- fprintf(fp,&quot;\tdo{\n&quot;);
  7022        |     |     +--- fprintf(fp,&quot;\t\tq=nextP;\n\t\tq2=dspline_isw[q];\n\n&quot;);
  7023        |     |     +--- fprintf(fp,&quot;\t\tt1 = omp_get_wtime();\n&quot;);
  7024        |     |     +--- //計算する関数に飛ぶ部分    基本的に既存部分の流用
              |     |     |  +----------------------------------------------------------------------------------+ 
  7025        |     |     +--+ if(MainF-&gt;EECntlF){     // -eectrlのフラグ(ON時は、コントロール部分を置き換え）  | 
              |     |     |  +--+-------------------------------------------------------------------------------+ 
  7026        |     |     |     +--- fprintf(fp,&quot;\t\t\tiloop_inner = 0;\n&quot;);
  7027        |     |     |     +--- fprintf(fp,&quot;\t\t\twhile(OAT_Eecntl_Continue()){\n&quot;);
  7028        |     |     |     +--- s = &quot;\t\t\t&quot;+FuncName + &quot;(&quot;;
              |     |     |   +-+---+ 
  7029        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------+ 
  7029        |     |     |   |  else{  | 
              |     |     |   +-+-------+ 
  7030        |     |     |     +--- s = &quot;\t\t&quot;+FuncName + &quot;(&quot;;
              |     |     |   +-+---+ 
  7031        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------------------------------------------+ 
  7032        |     |     +--+ for(i = 0 ; i &lt; ArgValList-&gt;Count ; i++){  | 
              |     |     |  +--+-----------------------------------------+ 
              |     |     |     |  +------------------------------------+ 
  7033        |     |     |     +--+ if(ArgValList-&gt;Strings[i] == &quot;&quot;){  | 
              |     |     |     |  +--+---------------------------------+ 
              |     |     |     |     |  +------------+ 
  7034        |     |     |     |     +--+ continue;  | 
              |     |     |     |     |  +------------+ 
              |     |     |     |   +-+---+ 
  7035        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
  7036        |     |     |     +--- ValData = (TValData *)ArgValList-&gt;Objects[i];
  7037        |     |     |     +--- s += ValData-&gt;Str + &quot;, &quot;;
              |     |     |   +-+---+ 
  7038        |     |     |   |  }  | 
              |     |     |   +-----+ 
  7039        |     |     +--- s += &quot;q+1);&quot;;
  7040        |     |     +--- fprintf(fp,&quot;%s\n&quot;,s.c_str());
  7041        |     |     |    
  7042        |     |     +--- fprintf(fp,&quot;\t\tt2 = omp_get_wtime();\n\n&quot;);
  7043        |     |     +--- fprintf(fp,&quot;\t\tdata = t2 - t1;\n\n&quot;);
  7044        |     |     +--- fprintf(fp,&quot;\t\tprintf(\&quot;\\n---para is %%d time is %%lf--- \\n\&quot;,q+1,data);\n\n&quot;);
  7045        |     |     +--- fprintf(fp,&quot;\t\th[kk]=q;\n\n\t\tDE[p][q2]=1;\n\t\tDE[p][nn]=data;\n\n&quot;);
  7046        |     |     |    
  7047        |     |     +--- //--------ギブンス変換for文ここから--------
  7048        |     |     +--- fprintf(fp,&quot;\t\tfor(q=q;q&lt;nn;q++){\n\n&quot;);
  7049        |     |     |    
  7050        |     |     +--- //G用計算部分
  7051        |     |     +--- fprintf(fp,&quot;\t\t\tradius=sqrt( (DE[q2][q2])*(DE[q2][q2]) + (DE[p][q2])*(DE[p][q2]) );\n\n\t\t\tif(radius==0)\n\t\t\t\tcontinue;\n\n\t\t\tcosine=DE[q2][q2]/radius;\n\t\t\tsine=DE[p][q2]/radius;\n\n&quot;);
  7052        |     |     |    
  7053        |     |     +--- //R=回転行列*DEギブンス変換部分
  7054        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=q2;i&lt;q2+2*p3_2nd_2+1;i++){\n\t\t\t\tif(i==p+1)\n\t\t\t\t\tbreak;\n\n\t\t\t\tR[q2][i]+=cosine*DE[q2][i];\n\t\t\t\tR[q2][i]+=sine*DE[p][i];\n\n\t\t\t\tR[p][i]+=(-1)*sine*DE[q2][i];\n\t\t\t\tR[p][i]+=cosine*DE[p][i];\n\n\t\t\t\tDE[q2][i]=R[q2][i];\n\t\t\t\tDE[p][i]=R[p][i];\n\n\t\t\t\tR[q2][i]=0;\n\t\t\t\tR[p][i]=0;\n\n\t\t\t\tif(i==q2+2*p3_2nd_2){\n\t\t\t\t\tR[q2][p]+=cosine*DE[q2][p];\n\t\t\t\t\tR[q2][p]+=sine*DE[p][p];\n\n\t\t\t\t\tR[p][p]+=(-1)*sine*DE[q2][p];\n\t\t\t\t\tR[p][p]+=cosine*DE[p][p];\n\n\t\t\t\t\tDE[q2][p]=R[q2][p];\n\t\t\t\t\tDE[p][p]=R[p][p];\n\n\t\t\t\t\tR[q2][p]=0;\n\t\t\t\t\tR[p][p]=0;\n\t\t\t\t}\n\t\t\t}\n&quot;);
  7055        |     |     |    
  7056        |     |     +--- fprintf(fp,&quot;\n\t\t}\n\n\n&quot;);
  7057        |     |     +--- //--------ギブンス変換for文ここまで--------
  7058        |     |     |                                                     
  7059        |     |     |                                                     
  7060        |     |     |    //ギブンス変換後、推定値計算、次の標本点決定部分 
  7061        |     |     |    //推定値代入初期化部分                           
  7062        |     |     +--- fprintf(fp,&quot;\t\tfor(i=0;i&lt;nn;i++){\n\t\t\tx[i]=DE[i][nn];\n\t\t}\n\n&quot;);
  7063        |     |     |    
  7064        |     |     +--- //後退代入で推定値計算部分
  7065        |     |     +--- fprintf(fp,&quot;\t\tfor(i=nn-1; i&gt;=0;i--){\n\t\t\tfor(j=i+1;j&lt;nn;j++){\n\t\t\t\tx[i]-=DE[i][j]*x[j];\n\t\t\t}\n\t\t\tx[i] /= DE[i][i];\n\t\t}\n\n&quot;);
  7066        |     |     |    
  7067        |     |     +--- //デバッグ用、推定値表示部分
  7068        |     |     +--- fprintf(fp,&quot;\t\tif(DEBUG&gt;0){\n\t\t\tprintf(\&quot;\\nestimation\\n\&quot;);\n\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tprintf(\&quot;[%%d],%%lf\\n\&quot;,i+1,x[dspline_isw[i]]);\n\t\t\t\t}printf(\&quot;\\n\&quot;);\n\t\t}\n\n&quot;);
  7069        |     |     |    
  7070        |     |     +--- //推定値が最小となる番号をベストパラメタに設定する部分
  7071        |     |     +--- fprintf(fp,&quot;\t\ttemp=x[0];\n\t\tbestP=0;\n\n\t\tfor(i=0;i&lt;npN;i++){\n\t\t\tif(x[dspline_isw[i]]&lt;temp){\n\t\t\t\ttemp=x[dspline_isw[i]];\n\t\t\t\tbestP=i;\n\t\t\t}\n\t\t}\n\n&quot;);
  7072        |     |     +--- fprintf(fp,&quot;\t\tprintf(\&quot;\\nbest para = %%d time = %%lf\\n\&quot;,bestP+1,x[dspline_isw[bestP]]);\n\n&quot;);
  7073        |     |     |    
  7074        |     |     +--- //選択基準2用配列初期化部分
  7075        |     |     +--- fprintf(fp,&quot;\t\tfor(i=0;i&lt;npN;i++){\n\t\t\tselect2[i][1]=i;\n\t\t\tselect2[i][0]=0;\n\t\t}\n\n&quot;);
  7076        |     |     |    
  7077        |     |     +--- //変化率計算部分
  7078        |     |     +--- fprintf(fp,&quot;\t\tk=p3_2nd_2*3;\n\n&quot;);
  7079        |     |     +--- fprintf(fp,&quot;\t\tfor(i=1;i&lt;npN-1;i++){\n\t\t\tj=dspline_isw[i];\n\n\t\t\tif(i&lt;para2nd-1||(para1st-1)*para2nd&lt;i){\n\t\t\t\tselect2[i][0]=fabs( x[j-3] - 2*x[j] + x[j+3] );\n\t\t\t}\n\t\t\telse if((i%%para2nd==0)&amp;&amp;(i&lt;(para1st-1)*para2nd)||((i+1)%%para2nd==0)&amp;&amp;i&gt;para2nd){\n\t\t\t\tselect2[i][0]=fabs( x[j-k] - 2*x[j] + x[j+k] );\n\t\t\t}\n\t\t\telse if( i!=para2nd-1&amp;&amp;i!=(para1st-1)*para2nd){\n\t\t\t\tselect2[i][0]=fabs( x[j-3] + x[j-k] - 4*x[j] + x[j+k] + x[j+3] );\n\t\t\t}\n\t\t}\n\n&quot;);
  7080        |     |     |    
  7081        |     |     +--- //select2ソート部分
  7082        |     |     +--- fprintf(fp,&quot;\t\tfor(i=0 ; i&lt;npN-1 ; i++){\n\t\t\tfor(j=npN-1 ; j&gt;i ; j--){\n\t\t\t\tif(select2[j-1][0] &lt; select2[j][0]){\n\t\t\t\t\ttemp=select2[j][0];\n\t\t\t\t\ttemp2=select2[j][1];\n\t\t\t\t\tselect2[j][0]=select2[j-1][0];\n\t\t\t\t\tselect2[j][1]=select2[j-1][1];\n\t\t\t\t\tselect2[j-1][0]=temp;\n\t\t\t\t\tselect2[j-1][1]=temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n&quot;);
  7083        |     |     |    
  7084        |     |     +--- //推定したベストPがすでに標本点にあるなら選択基準2、ないなら選択基準1　選択する部分
  7085        |     |     +--- fprintf(fp,&quot;\t\tfor(i=0;i&lt;npN;i++){\n&quot;);
  7086        |     |     +--- fprintf(fp,&quot;\t\t\tif(bestP==h[i]){\n\t\t\t\tfor(j=0;j&lt;npN;j++){\n\t\t\t\t\tfor(k=0;k&lt;npN;k++){\n\t\t\t\t\t\tif(select2[j][1]==h[k]){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(k+1==npN){\n\t\t\t\t\t\t\tnextP=select2[j][1];\n\t\t\t\t\t\t\tgoto OUT2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n&quot;);
  7087        |     |     +--- fprintf(fp,&quot;\t\t\telse{\n\t\t\t\tnextP=bestP;\n\t\t\t}\n\t\t}\n\t\tOUT2:\n&quot;);
  7088        |     |     +--- fprintf(fp,&quot;\t\tprintf(\&quot;nextP=%%d bestP=%%d \\n\\n\&quot;,nextP+1,bestP+1);\n\n&quot;);
  7089        |     |     |    
  7090        |     |     +--- //前回推定したパラメタと同じならカウント+1違うならカウント+1に初期化する部分
  7091        |     |     +--- fprintf(fp,&quot;\t\tif(prebestP==bestP){\n\t\t\tcount++;\n\t\t}\n\t\telse{\n\t\t\tcount=1;\n\t\t}\n\n&quot;);
  7092        |     |     |    
  7093        |     |     +--- //今回推定したベストパラメタをprebestPに設定
  7094        |     |     +--- fprintf(fp,&quot;\t\tprebestP=bestP;\n\n&quot;);
  7095        |     |     |    
  7096        |     |     +--- fprintf(fp,&quot;\t\tkk++;\n\n&quot;);
  7097        |     |     |    
  7098        |     |     +--- //推定値をエクセルに書き込みする部分
  7099        |     |     +--- fprintf(fp,&quot;\t\tfor(i=0;i&lt;nn;i++){\n\t\t\tfprintf(fpA,\&quot;%%lf\\n\&quot;,x[i]);\n\t\t}\n\t\tfprintf(fpA,\&quot;end\\n\\n\&quot;);\n\n&quot;);
  7100        |     |     |    
  7101        |     |     +--- fprintf(fp,&quot;\t\tprintf(\&quot;count = %%d \\n\&quot;,count);\n\n&quot;);
  7102        |     |     |    
  7103        |     |     +--- //while文
  7104        |     |     +--- fprintf(fp,&quot;\t}while(count&lt;3);\n\n\tprintf(\&quot;count end\\n\&quot;);\n\tprintf(\&quot;usedParaNum = %%d\\n\&quot;,kk);\n\n&quot;);
  7105        |     |     |    
  7106        |     |     +--- //--------16点後のdo while文ここまで--------
  7107        |     |     |                                                 
  7108        |     |     +--- fprintf(fp,&quot;\tfclose(fpA);\n\n&quot;);
  7109        |     |     +--- fprintf(fp,&quot;\treturn bestP+1;\n}\n&quot;);
              |     |   +-+---+ 
  7110        |     |   |  }  | 
              |     |   +-----+ 
  7111        |     +--- //2次元用d-spline（インストール時自動チューニング用）ここまで
  7112        |     |                                                                   
  7113        |     |    //2次元用d-spline（実行時自動チューニング用）                  
              |     |  +------------------------------+ 
  7114        |     +--+ if(TuneGroup == tgDynamic){  | 
              |     |  +--+---------------------------+ 
  7115        |     |     |    
  7116        |     |     +--- //デバッグ用と関数名部分
  7117        |     |     +--- fprintf(fp,&quot;#define DEBUG 1\n&quot;);
  7118        |     |     |    
  7119        |     |     +--- fprintf(fp,&quot;int dynamicDspline2%s%s(int npN, int para1st, int para2nd, int *isw, int Dswitch, double data)\n&quot;,TuneGroupName.c_str(),
  7120        |     |     |            Name.c_str());                                                                                                               
  7121        |     |     +--- fprintf(fpOutHeader,&quot;int dynamicDspline2%s%s(int npN, int para1st, int para2nd, int *isw, int Dswitch, double data);\n&quot;,TuneGroupName.c_str(),
  7122        |     |     |            Name.c_str());                                                                                                                         
  7123        |     |     |    
  7124        |     |     +--- fprintf(fp,&quot;{\n&quot;);
  7125        |     |     |    
  7126        |     |     +--- int CaseArrayCount2[2];
  7127        |     |     +--- CaseArrayCount2[0] = (int)( (variedToValue[0] - variedFromValue[0]) / variedStepValue[0] + 1 );
  7128        |     |     +--- CaseArrayCount2[1] = (int)( (variedToValue[1] - variedFromValue[1]) / variedStepValue[1] + 1 );
  7129        |     |     +--- int nnn=(3*CaseArrayCount2[0]-2)*(3*CaseArrayCount2[1]-2);
  7130        |     |     |    
  7131        |     |     +--- //変数宣言部分
  7132        |     |     +--- fprintf(fp,&quot;\tint p3_1st=para1st*3;\n\tint p3_2nd=para2nd*3;\n\tint p3_2nd_2=p3_2nd-2;\n\n&quot;);
  7133        |     |     +--- fprintf(fp,&quot;\tint nn=(p3_1st-2)*p3_2nd_2;\n&quot;);
  7134        |     |     +--- fprintf(fp,&quot;\tstatic double DE[%d+1][%d+1];\n\tstatic double R[%d+1][%d+1];\n&quot;,nnn,nnn,nnn,nnn);
  7135        |     |     +--- fprintf(fp,&quot;\tdouble radius,cosine,sine;\n\tint p,q,q2;\n\tstatic int count=1;\n\t&quot;);
  7136        |     |     +--- fprintf(fp,&quot;static int count2=0;\n\tdouble x[nn];\n\tdouble temp;\n\tint temp2;\n&quot;);
  7137        |     |     +--- fprintf(fp,&quot;\tint bestP=0;\n\tint nextP;\n\tstatic int prebestP=0;\n\tdouble select2[npN][2];\n&quot;);
  7138        |     |     +--- fprintf(fp,&quot;\tstatic int h[%d+1];\n\tstatic int dspline_isw[%d];\n\tstatic int kk=0;\n\tdouble alfa=0.1;\n\tstatic int Fcount=0;\n&quot;,CaseArrayCount2[0]*CaseArrayCount2[1],CaseArrayCount2[0]*CaseArrayCount2[1]);
  7139        |     |     +--- fprintf(fp,&quot;\tint i,j,k;\n\n&quot;);
  7140        |     |     |    
  7141        |     |     +--- //エクセル書き込み用部分
  7142        |     |     +--- fprintf(fp,&quot;\tFILE *fpA;\n&quot;);
  7143        |     |     +--- fprintf(fp,&quot;\tchar *fname = \&quot;d-SplineData.csv\&quot;;\n&quot;);
  7144        |     |     +--- fprintf(fp,&quot;\tfpA = fopen(fname,\&quot;a\&quot;);\n\n&quot;);
  7145        |     |     |    
  7146        |     |     +--- //パラメタ探索後の終了部分
  7147        |     |     +--- fprintf(fp,&quot;\tif(count2==1){\n\t\treturn 0;\n\t}\n\n&quot;);
  7148        |     |     |    
  7149        |     |     +--- fprintf(fp,&quot;\tif(count==3){\n\t\tprintf(\&quot;count=3 end\\n\&quot;);\n\t\tprintf(\&quot;usedParaNums=%%d\\n\&quot;, Fcount-1);\n\t\t*isw = prebestP+1;\n&quot;);
  7150        |     |     +--- fprintf(fp,&quot;\t\tcount2=1;\n\t\treturn 0;\n\t}\n\n&quot;);
  7151        |     |     |    
  7152        |     |     +--- //h初期化部分
  7153        |     |     +--- fprintf(fp,&quot;\tif(Fcount==0){\n\t\tfor(i=0;i&lt;=npN;i++){\n\t\t\th[i]=npN+1;\n\t\t}\n\t}\n\n\tp=nn;\n\n&quot;);
  7154        |     |     |    
  7155        |     |     +--- //Dswitch1部分ここから--------------------
  7156        |     |     +--- fprintf(fp,&quot;\tif(Dswitch==1){\n\n&quot;);
  7157        |     |     |    
  7158        |     |     +--- //switch部分ここから
  7159        |     |     |    // 1  9 13   5       
  7160        |     |     |    //16  3  7  12       
  7161        |     |     |    //11  8  4  15       
  7162        |     |     |    // 6 14 10   2       
  7163        |     |     +--- fprintf(fp,&quot;\t\tswitch(Fcount){\n\t\tcase 0:\n\t\t\t*isw = 1;\n\t\t\tbreak;\n&quot;);
  7164        |     |     +--- fprintf(fp,&quot;\t\tcase 1:\n\t\t\t*isw = (2+para2nd)/3;\n\t\t\tbreak;\n&quot;);
  7165        |     |     +--- fprintf(fp,&quot;\t\tcase 2:\n\t\t\t*isw = (1+2*para2nd)/3;\n\t\t\tbreak;\n&quot;);
  7166        |     |     +--- fprintf(fp,&quot;\t\tcase 3:\n\t\t\t*isw = para2nd;\n\t\t\tbreak;\n&quot;);
  7167        |     |     |    
  7168        |     |     +--- fprintf(fp,&quot;\t\tcase 4:\n\t\t\t*isw = ((2+para1st)/3-1)*para2nd+1;\n\t\t\tbreak;\n&quot;);
  7169        |     |     +--- fprintf(fp,&quot;\t\tcase 5:\n\t\t\t*isw = ((2+para1st)/3-1)*para2nd+(2+para2nd)/3;\n\t\t\tbreak;\n&quot;);
  7170        |     |     +--- fprintf(fp,&quot;\t\tcase 6:\n\t\t\t*isw = ((2+para1st)/3-1)*para2nd+(1+2*para2nd)/3;\n\t\t\tbreak;\n&quot;);
  7171        |     |     +--- fprintf(fp,&quot;\t\tcase 7:\n\t\t\t*isw = ((2+para1st)/3-1)*para2nd+para2nd;\n\t\t\tbreak;\n&quot;);
  7172        |     |     |    
  7173        |     |     +--- fprintf(fp,&quot;\t\tcase 8:\n\t\t\t*isw = ((1+2*para1st)/3-1)*para2nd+1;\n\t\t\tbreak;\n&quot;);
  7174        |     |     +--- fprintf(fp,&quot;\t\tcase 9:\n\t\t\t*isw = ((1+2*para1st)/3-1)*para2nd+(2+para2nd)/3;\n\t\t\tbreak;\n&quot;);
  7175        |     |     +--- fprintf(fp,&quot;\t\tcase 10:\n\t\t\t*isw = ((1+2*para1st)/3-1)*para2nd+(1+2*para2nd)/3;\n\t\t\tbreak;\n&quot;);
  7176        |     |     +--- fprintf(fp,&quot;\t\tcase 11:\n\t\t\t*isw = ((1+2*para1st)/3-1)*para2nd+para2nd;\n\t\t\tbreak;\n&quot;);
  7177        |     |     |    
  7178        |     |     +--- fprintf(fp,&quot;\t\tcase 12:\n\t\t\t*isw = (para1st-1)*para2nd+1;\n\t\t\tbreak;\n&quot;);
  7179        |     |     +--- fprintf(fp,&quot;\t\tcase 13:\n\t\t\t*isw = (para1st-1)*para2nd+(2+para2nd)/3;\n\t\t\tbreak;\n&quot;);
  7180        |     |     +--- fprintf(fp,&quot;\t\tcase 14:\n\t\t\t*isw = (para1st-1)*para2nd+(1+2*para2nd)/3;\n\t\t\tbreak;\n&quot;);
  7181        |     |     +--- fprintf(fp,&quot;\t\tcase 15:\n\t\t\t*isw = (para1st-1)*para2nd+para2nd;\n\t\t\tbreak;\n&quot;);
  7182        |     |     |    
  7183        |     |     +--- //default部分
  7184        |     |     +--- fprintf(fp,&quot;\t\tdefault:\n\n&quot;);
  7185        |     |     +--- //推定値初期化部分
  7186        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn;i++){\n\t\t\t\tx[i]=DE[i][nn];\n\t\t\t}\n\n&quot;);
  7187        |     |     |    
  7188        |     |     +--- //後退代入計算部分
  7189        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=nn-1; i&gt;=0;i--){\n\t\t\t\tfor(j=i+1;j&lt;nn;j++){\n\t\t\t\t\tx[i]-=DE[i][j]*x[j];\n\t\t\t\t}\n\n\t\t\t\tx[i] /= DE[i][i];\n\t\t\t}\n\n&quot;);
  7190        |     |     |    
  7191        |     |     +--- //デバッグ用推定値表示部分
  7192        |     |     +--- fprintf(fp,&quot;\t\t\tif(DEBUG&gt;0){\n\t\t\t\tprintf(\&quot;\\nestimation\\n\&quot;);\n\n\t\t\t\tfor(i=0;i&lt;npN;i++){\n&quot;);
  7193        |     |     +--- fprintf(fp,&quot;\t\t\t\t\tprintf(\&quot;[%%d],%%lf\\n\&quot;,i+1,x[dspline_isw[i]]);\n\t\t\t\t}\n\n\t\t\t\tprintf(\&quot;\\n\&quot;);\n\t\t\t}\n\n&quot;);
  7194        |     |     |    
  7195        |     |     +--- //最小推定値探索部分
  7196        |     |     +--- fprintf(fp,&quot;\t\t\ttemp=x[dspline_isw[0]];\n\t\t\tbestP=0;\n\n\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tj=dspline_isw[i];\n\n\t\t\t\tif(x[j]&lt;temp){\n&quot;);
  7197        |     |     +--- fprintf(fp,&quot;\t\t\t\t\ttemp=x[j];\n\t\t\t\t\tbestP=i;\n\t\t\t\t}\n\t\t\t}\n&quot;);
  7198        |     |     |    
  7199        |     |     +--- //ベストパラメタ表示部分
  7200        |     |     +--- fprintf(fp,&quot;\t\t\tprintf(\&quot;\\nbest para = %%d time = %%lf\\n\&quot;,bestP+1,x[dspline_isw[bestP]]);\n\n&quot;);
  7201        |     |     |    
  7202        |     |     +--- //選択基準2初期化部分
  7203        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tselect2[i][1]=i;\n\t\t\t\tselect2[i][0]=0;\n\t\t\t}\n\n&quot;);
  7204        |     |     |    
  7205        |     |     +--- //変化率計算部分
  7206        |     |     +--- fprintf(fp,&quot;\t\t\tk = p3_2nd_2*3;\n\n&quot;);
  7207        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=1;i&lt;npN-1;i++){\n\t\t\t\tj=dspline_isw[i];\n\n\t\t\t\tif(i&lt;para2nd-1||(para1st-1)*para2nd&lt;i){\n\t\t\t\t\tselect2[i][0]=fabs( x[j-3] - 2*x[j] + x[j+3] );\n\t\t\t\t}\n\t\t\t\telse if((i%%para2nd==0)&amp;&amp;(i&lt;(para1st-1)*para2nd)||((i+1)%%para2nd==0)&amp;&amp;i&gt;para2nd){\n\t\t\t\t\tselect2[i][0]=fabs( x[j-k] - 2*x[j] + x[j+k] );\n\t\t\t\t}\n\t\t\t\telse if(i!=para2nd-1&amp;&amp;i!=(para1st-1)*para2nd){\n\t\t\t\t\tselect2[i][0]=fabs( x[j-3] + x[j-k] - 4*x[j] + x[j+k] + x[j+3] );\n\t\t\t\t}\n\t\t\t}\n\n&quot;);
  7208        |     |     |    
  7209        |     |     +--- //select2ソート部分
  7210        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0 ; i&lt;npN-1 ; i++){\n\t\t\t\tfor(j=npN-1 ; j&gt;i ; j--){\n\t\t\t\t\tif(select2[j-1][0] &lt; select2[j][0]){\n\t\t\t\t\t\ttemp=select2[j][0];\n\t\t\t\t\t\ttemp2=select2[j][1];\n\t\t\t\t\t\tselect2[j][0]=select2[j-1][0];\n\t\t\t\t\t\tselect2[j][1]=select2[j-1][1];\n\t\t\t\t\t\tselect2[j-1][0]=temp;\n\t\t\t\t\t\tselect2[j-1][1]=temp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n&quot;);
  7211        |     |     |    
  7212        |     |     +--- //選択基準1or2選択部分
  7213        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;npN;i++){\n\t\t\t\tif(bestP==h[i]){\n\t\t\t\t\tfor(j=0;j&lt;npN;j++){\n\t\t\t\t\t\tfor(k=0;k&lt;npN;k++){\n\t\t\t\t\t\t\tif(select2[j][1]==h[k]){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(k+1==npN){\n\t\t\t\t\t\t\t\tnextP=select2[j][1];\n\t\t\t\t\t\t\t\tgoto OUT1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnextP=bestP;\n\t\t\t\t}\n\t\t\t}\n\t\t\tOUT1:\n&quot;);
  7214        |     |     +--- //ベストパラメタと次のパラメタを表示
  7215        |     |     +--- fprintf(fp,&quot;\t\t\tprintf(\&quot;nextP=%%d bestP=%%d \\n\\n\&quot;,nextP+1,bestP+1);\n&quot;);
  7216        |     |     |    
  7217        |     |     +--- //iswに次使うパラメタをセットする部分
  7218        |     |     +--- fprintf(fp,&quot;\t\t\t*isw = nextP+1;\n\n&quot;);
  7219        |     |     |    
  7220        |     |     +--- //3回カウント用部分
  7221        |     |     +--- fprintf(fp,&quot;\t\t\tif(prebestP==bestP){\n\t\t\t\tcount++;\n\t\t\t}\n&quot;);
  7222        |     |     +--- fprintf(fp,&quot;\t\t\telse{\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t\tprebestP=bestP;\n\n&quot;);
  7223        |     |     |    
  7224        |     |     +--- //エクセルに書き込みをする部分
  7225        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn;i++){\n\t\t\t\tfprintf(fpA,\&quot;%%lf\\n\&quot;,x[i]);\n\t\t\t}\n\t\t\tfprintf(fpA,\&quot;end\\n\\n\&quot;);\n\n&quot;);
  7226        |     |     |    
  7227        |     |     +--- //default部分ここまで
  7228        |     |     +--- fprintf(fp,&quot;\t\t\tbreak;\n&quot;);
  7229        |     |     |    
  7230        |     |     +--- //switchここまで
  7231        |     |     +--- fprintf(fp,&quot;\t\t}\n\t\tFcount++;\n&quot;);
  7232        |     |     |    
  7233        |     |     +--- //Dswitch1ここまで------------
  7234        |     |     +--- fprintf(fp,&quot;\t}\n\n&quot;);
  7235        |     |     |    
  7236        |     |     |     
  7237        |     |     +--- //Dswitch2ここから-----------------
  7238        |     |     |                                         
  7239        |     |     +--- fprintf(fp,&quot;\tif(Dswitch == 2){\n\n&quot;);
  7240        |     |     |    
  7241        |     |     +--- //DE初期化部分
  7242        |     |     +--- fprintf(fp,&quot;\t\tif(Fcount == 1){\n\t\t\tfor(i=0;i&lt;nn+1;i++){\n\t\t\t\tfor(j=0;j&lt;nn+1;j++){\n\t\t\t\t\tDE[i][j]=0;\n\t\t\t\t\tR[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tj=0;\n\n&quot;);
  7243        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;nn-4;i++){\n\t\t\t\tif(i&lt;p3_2nd_2-2){\n\t\t\t\t\tDE[i][i]=1*alfa;\n\t\t\t\t\tDE[i][i+1]=-2*alfa;\n\t\t\t\t\tDE[i][i+2]=1*alfa;\n\t\t\t\t}\n&quot;);
  7244        |     |     +--- fprintf(fp,&quot;\t\t\t\telse if(i&gt;=nn-p3_2nd){\n\t\t\t\t\tDE[i][i+2]=1*alfa;\n\t\t\t\t\tDE[i][i+3]=-2*alfa;\n\t\t\t\t\tDE[i][i+4]=1*alfa;\n\t\t\t\t}\n&quot;);
  7245        |     |     +--- fprintf(fp,&quot;\t\t\t\telse{\n\t\t\t\t\tif((i+2)%%p3_2nd_2==0||(i+3)%%p3_2nd_2==0){\n\t\t\t\t\t\tDE[i][j]=1*alfa;\n\t\t\t\t\t\tDE[i][j+p3_2nd_2]=-2*alfa;\n\t\t\t\t\t\tDE[i][j+2*p3_2nd_2]=1*alfa;\n\t\t\t\t\t}\n&quot;);
  7246        |     |     +--- fprintf(fp,&quot;\t\t\t\t\telse{\n\t\t\t\t\t\tDE[i][j]=1*alfa;\n\t\t\t\t\t\tDE[i][j+p3_2nd_2-1]=1*alfa;\n\t\t\t\t\t\tDE[i][j+p3_2nd_2]=-4*alfa;\n\t\t\t\t\t\tDE[i][j+p3_2nd_2+1]=1*alfa;\n\t\t\t\t\t\tDE[i][j+2*p3_2nd_2]=1*alfa;\n\t\t\t\t\t}\n\n&quot;);
  7247        |     |     +--- fprintf(fp,&quot;\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\n&quot;);
  7248        |     |     |    
  7249        |     |     +--- //パラメータの取りうる値が，d-Spline関数中ではどの点に対応するかを設定
  7250        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=0;i&lt;npN;i++)\n\t\t\t{\n\t\t\t\tdspline_isw[i]=3*i+(p3_2nd-3)*((int)(i/para2nd)*2);\n\t\t\t}\n\n&quot;);
  7251        |     |     |    
  7252        |     |     +--- /*DEをあらかじめ上三角行列に整形*/
  7253        |     |     +--- fprintf(fp,&quot;\t\t\tq=0;\n\n\t\t\tfor(i=p3_2nd_2-2;i&lt;nn-p3_2nd;i++){\n\t\t\t\tfor(j=0;j&lt;p3_2nd_2-2;j++){\n&quot;);
  7254        |     |     |    
  7255        |     |     +--- //G用計算部分
  7256        |     |     +--- fprintf(fp,&quot;\t\t\t\t\tradius=sqrt( (DE[q+j][q+j])*(DE[q+j][q+j]) + (DE[i][q+j])*(DE[i][q+j]) );\n\n\t\t\t\t\t\tif(radius==0)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcosine=DE[q+j][q+j]/radius;\n\t\t\t\t\tsine=DE[i][q+j]/radius;\n\n&quot;);
  7257        |     |     |    
  7258        |     |     +--- //R=回転行列*DEギブンス変換部分
  7259        |     |     +--- fprintf(fp,&quot;\t\t\t\t\tfor(k=j;k&lt;2*p3_2nd_2+1;k++){\n\t\t\t\t\t\tif(k==nn)\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tR[q+j][q+k]+=cosine*DE[q+j][q+k];\n\t\t\t\t\t\tR[q+j][q+k]+=sine*DE[i][q+k];\n\n\t\t\t\t\t\tR[i][q+k]+=(-1)*sine*DE[q+j][q+k];\n\t\t\t\t\t\tR[i][q+k]+=cosine*DE[i][q+k];\n\n\t\t\t\t\t\tDE[q+j][q+k]=R[q+j][q+k];\n\t\t\t\t\t\tDE[i][q+k]=R[i][q+k];\n\n\t\t\t\t\t\tR[q+j][q+k]=0;\n\t\t\t\t\t\tR[i][q+k]=0;\n\t\t\t\t\t}\n&quot;);
  7260        |     |     |    
  7261        |     |     +--- fprintf(fp,&quot;\t\t\t\t}\n\n\t\t\t\tq++;\n\t\t\t}\n\n&quot;);
  7262        |     |     +--- /*整形終了*/
  7263        |     |     |                 
  7264        |     |     +--- fprintf(fp,&quot;\t\t}\n\n&quot;);
  7265        |     |     |    
  7266        |     |     |     
  7267        |     |     +--- //標本点とその実測値のセット部分
  7268        |     |     +--- fprintf(fp,&quot;\t\tq = *isw;\n\t\tq--;\n\t\tq2=dspline_isw[q];\n\t\th[kk]=q;\n\n\t\tDE[p][q2]=1;\n\t\tDE[p][nn]=data;\n\n&quot;);
  7269        |     |     |    
  7270        |     |     +--- //ギブンス変換ループ部分-------------------
  7271        |     |     |                                                 
  7272        |     |     +--- fprintf(fp,&quot;\t\tfor(q2=q2;q2&lt;nn;q2++){\n\n&quot;);
  7273        |     |     |    
  7274        |     |     +--- //G用計算部分
  7275        |     |     +--- fprintf(fp,&quot;\t\t\tradius=sqrt( (DE[q2][q2])*(DE[q2][q2]) + (DE[p][q2])*(DE[p][q2]) );\n\n\t\t\tif(radius==0)\n\t\t\t\tcontinue;\n\n\t\t\tcosine=DE[q2][q2]/radius;\n\t\t\tsine=DE[p][q2]/radius;\n\n&quot;);
  7276        |     |     |    
  7277        |     |     +--- //R=回転行列*DEギブンス変換部分
  7278        |     |     +--- fprintf(fp,&quot;\t\t\tfor(i=q2;i&lt;q2+2*p3_2nd_2+1;i++){\n\t\t\t\tif(i==p+1)\n\t\t\t\t\tbreak;\n\n\t\t\t\tR[q2][i]+=cosine*DE[q2][i];\n\t\t\t\tR[q2][i]+=sine*DE[p][i];\n\n\t\t\t\tR[p][i]+=(-1)*sine*DE[q2][i];\n\t\t\t\tR[p][i]+=cosine*DE[p][i];\n\n\t\t\t\tDE[q2][i]=R[q2][i];\n\t\t\t\tDE[p][i]=R[p][i];\n\n\t\t\t\tR[q2][i]=0;\n\t\t\t\tR[p][i]=0;\n\n&quot;);
  7279        |     |     +--- fprintf(fp,&quot;\t\t\t\tif(i==q2+2*p3_2nd_2){\n\t\t\t\t\tR[q2][p]+=cosine*DE[q2][p];\n\t\t\t\t\tR[q2][p]+=sine*DE[p][p];\n\n\t\t\t\t\tR[p][p]+=(-1)*sine*DE[q2][p];\n\t\t\t\t\tR[p][p]+=cosine*DE[p][p];\n\n\t\t\t\t\tDE[q2][p]=R[q2][p];\n\t\t\t\t\tDE[p][p]=R[p][p];\n\n\t\t\t\t\tR[q2][p]=0;\n\t\t\t\t\tR[p][p]=0;\n\t\t\t\t}\n\t\t\t}\n\n&quot;);
  7280        |     |     |    
  7281        |     |     +--- //ギブンス変換ループここまで------------------
  7282        |     |     |                                                   
  7283        |     |     +--- fprintf(fp,&quot;\t\t}\n\n\t\tkk++;\n&quot;);
  7284        |     |     |    
  7285        |     |     +--- //Dswitch2ここまで
  7286        |     |     +--- fprintf(fp,&quot;\t}\n\n&quot;);
  7287        |     |     |    
  7288        |     |     +--- fprintf(fp,&quot;\tfclose(fpA);\n\n&quot;);
  7289        |     |     |    
  7290        |     |     +--- //関数ここまで
  7291        |     |     +--- fprintf(fp,&quot;\treturn 0;\n}\n\n&quot;);
              |     |   +-+---+ 
  7292        |     |   |  }  | 
              |     |   +-----+ 
  7293        |     +--- //2次元用d-spline（実行時自動チューニング用）ここまで
              |   +-+---+ 
  7294        |   |  }  | 
              |   +-----+ 
  7295        +--- //
  7296        |    //ここまで                                                                                                                   
  7297        |    //                                                                                                                           
  7298        |    /*************************************************************************************************************************/  
  7299        |                                                                                                                                 
  7300        |                                                                                                                                 
  7301        |                                                                                                                                 
  7302        +--- delete DefValNameList;
            +-+---+ 
  7303      |  }  | 
            +-----+ 
</pre>


</body>
</html>
