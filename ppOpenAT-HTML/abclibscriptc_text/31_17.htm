
<html>
<head>
<title>Pass2_C 関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">21.17. Pass2_C 関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>関数名</th>        <td nowrap>Pass2_C</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>pass2.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>657</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>int Pass2_C ( TList * TokenList , int sPos , TList * ValDataList )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>構文解析を１文ごとに行う<br>主な目的は、変数についての参照関係を含めた情報収集。<br>sPosからのトークンを処理し、使用したトークン数を返す。</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap>使用したトークン数</td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap>TokenList   トークンリスト<br>sPos    開始位置<br>ValDataList 変数リスト</td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap></td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="31_16.htm">Pass2</a></td>
<td nowrap><a href="5_3.htm">pass2.cpp</a></td>
<td nowrap><a href="31_16.htm">87</a></td>
</tr>
</table>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TList::Add</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>64</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="31_1.htm">AddDataDef_C</a></td>
<td nowrap><a href="5_3.htm">pass2.cpp</a></td>
<td nowrap><a href="31_1.htm">1038</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="31_8.htm">GetValIdx</a></td>
<td nowrap><a href="5_3.htm">pass2.cpp</a></td>
<td nowrap><a href="31_8.htm">2086</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>atof</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>c_str</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
</table>

<p></p>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_1_1.htm">TList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_1_1.htm">57</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_9_1.htm">TToken</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="16_9_1.htm">294</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_11_1.htm">TValData</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_11.htm">pass2.h</a></td>
<td nowrap><a href="16_11_1.htm">106</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +------------------------------------------------------------+ 
   657  +--+ int Pass2_C(TList *TokenList,int sPos,TList *ValDataList)  | 
   658     | {                                                          | 
           +--+---------------------------------------------------------+ 
   659        +--- TToken *Token;
   660        +--- TToken *Token1;
   661        +--- TToken *Token2;
   662        +--- int TokId,TokId2;
   663        +--- string TokStr;
   664        +--- int ValIdx;
   665        +--- TValData *ValData;
   666        +--- int Nest;
   667        +--- int i,j,ePos,StartPos;
   668        |    
   669        +--- StartPos = sPos;
   670        +--- //
   671        |    // 先頭の改行や区切りをSkipする。  
   672        |    //                                 
              |  +--------------------------------------------+ 
   673        +--+ for( ; sPos &lt; TokenList-&gt;Count ; sPos++){  | 
              |  +--+-----------------------------------------+ 
   674        |     +--- Token = (TToken *)TokenList-&gt;Items[sPos];
   675        |     +--- TokId = Token-&gt;TokId;
              |     |  +------------------------------+ 
   676        |     +--+ if(TokId == tid_Semikoron){  | 
              |     |  +--+---------------------------+ 
              |     |     |  +------------+ 
   677        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   678        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +--------------------------+ 
   679        |     +--+ if(TokId == tid_Koron){  | 
              |     |  +--+-----------------------+ 
              |     |     |  +------------+ 
   680        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   681        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------+ 
   682        |     +--+ if(TokId == tid_DaiKakko){ | 
              |     |  +--+-------------------------+ 
              |     |     |  +------------+ 
   683        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   684        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------+ 
   685        |     +--+ if(TokId == tid_DaiKokka){ | 
              |     |  +--+-------------------------+ 
              |     |     |  +------------+ 
   686        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   687        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------+ 
   688        |     +--+ if(TokId == tid_LineEnd){  | 
              |     |  +--+-------------------------+ 
              |     |     |  +------------+ 
   689        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   690        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +--------+ 
   691        |     +--+ break; | 
              |     |  +--------+ 
              |   +-+---+ 
   692        |   |  }  | 
              |   +-----+ 
   693        |    
   694        +--- //
   695        |    // 各文について、計算上での分割範囲での分割を行う。  
   696        |    //  ;: か {}までを範囲とする。                       
   697        |    // if(a==0){ c = 3 ; d = 4: } の場合は、             
   698        |    // if(a==0) と c = 4 と d = 4 の分割となる。         
   699        |    //                                                   
              |  +--------------------------------------------------------+ 
   700        +--+ for(ePos = sPos+1 ; ePos &lt; TokenList-&gt;Count ; ePos++){ | 
              |  +--+-----------------------------------------------------+ 
   701        |     +--- Token = (TToken *)TokenList-&gt;Items[ePos];
   702        |     +--- TokId = Token-&gt;TokId;
              |     |  +------------------------------+ 
   703        |     +--+ if(TokId == tid_Semikoron){  | 
              |     |  +--+---------------------------+ 
              |     |     |  +--------+ 
   704        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
   705        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +--------------------------+ 
   706        |     +--+ if(TokId == tid_Koron){  | 
              |     |  +--+-----------------------+ 
              |     |     |  +--------+ 
   707        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
   708        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------+ 
   709        |     +--+ if(TokId == tid_DaiKakko){ | 
              |     |  +--+-------------------------+ 
              |     |     |  +--------+ 
   710        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
   711        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------+ 
   712        |     +--+ if(TokId == tid_DaiKokka){ | 
              |     |  +--+-------------------------+ 
              |     |     |  +--------+ 
   713        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
   714        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------------------------------------------------+ 
   715        |     +--+ if((Token-&gt;TokId &gt;= tid_SharpStart)&amp;&amp;(Token-&gt;TokId &lt;= tid_SharpEnd)){  | 
              |     |  +--+---------------------------------------------------------------------+ 
              |     |     |  +--------+ 
   716        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
   717        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   718        |   |  }  | 
              |   +-----+ 
   719        +--- //
   720        |    //  文の先頭のトークンをでの処理を行う。                     
   721        |    //  int ,double 等の定義が先頭の場合は、定義として処理する。 
   722        |    //  (int)は先頭でないので対象外。                            
   723        |    //                                                           
   724        +--- Token = (TToken *)TokenList-&gt;Items[sPos];
   725        +--- TokId = Token-&gt;TokId;
   726        +--- TokStr = Token-&gt;Str;
   727        |    
   728        +--- //
   729        |    // 先頭が#のマクロの処理 
   730        |    //                       
              |  +------------------------------------------------------------------------+ 
   731        +--+ if((Token-&gt;TokId &gt;= tid_SharpStart)&amp;&amp;(Token-&gt;TokId &lt;= tid_SharpEnd)){  | 
              |  +--+---------------------------------------------------------------------+ 
   732        |     +--- //
   733        |     |    //  #define N 500 の対応。 
   734        |     |    //                         
              |     |  +--------------------------------------+ 
   735        |     +--+ if(Token-&gt;TokId == tid_SharpDefine){ | 
              |     |  +--+-----------------------------------+ 
              |     |     |  +--------------------------------+ 
   736        |     |     +--+ if(sPos+2 &lt; TokenList-&gt;Count){ | 
              |     |     |  +--+-----------------------------+ 
   737        |     |     |     +--- Token1 = (TToken *)TokenList-&gt;Items[sPos+1];
   738        |     |     |     +--- Token2 = (TToken *)TokenList-&gt;Items[sPos+2];
              |     |     |     |  +------------------------------------------------------------------+ 
   739        |     |     |     +--+ if((Token1-&gt;TokId == tid_Val)&amp;&amp;(Token2-&gt;TokId == tid_ConstNum)){ | 
              |     |     |     |  +--+---------------------------------------------------------------+ 
   739        |     |     |     |     +--- ;
   740        |     |     |     |     +--- TokStr = Token1-&gt;Str;
   741        |     |     |     |     +--- ValIdx = GetValIdx(ValDataList,TokStr,Token-&gt;ModuleIdx);
              |     |     |     |     |  +--------------------+ 
   742        |     |     |     |     +--+ if(ValIdx == -1){  | 
              |     |     |     |     |  +--+-----------------+ 
   743        |     |     |     |     |     +--- ValData = new TValData(TokStr);
   744        |     |     |     |     |     +--- ValIdx = ValDataList-&gt;Add((void *)ValData);
              |     |     |     |     |   +-+---+ 
   745        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-+---+ 
              |     |     |     |     |   +-+-------+ 
   745        |     |     |     |     |   |  else{  | 
              |     |     |     |     |   +-+-------+ 
   746        |     |     |     |     |     +--- ValData = (TValData *)ValDataList-&gt;Items[ValIdx];
              |     |     |     |     |   +-+---+ 
   747        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
   748        |     |     |     |     +--- ValData-&gt;ModuleIdx = Token-&gt;ModuleIdx;
   749        |     |     |     |     +--- ValData-&gt;BrNestLevel = Token-&gt;BrNestLevel;
   750        |     |     |     |     +--- ValData-&gt;DataType = dt_Int;
   751        |     |     |     |     +--- Token-&gt;ValData = ValData;
   752        |     |     |     |     +--- ValData-&gt;ParamValF = true; // PARAMETER相当
   753        |     |     |     |     +--- ValData-&gt;dData = atof(Token2-&gt;Str.c_str());
              |     |     |     |   +-+---+ 
   754        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   755        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   756        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +--------------------------------------------------------+ 
   757        |     +--+ for(ePos = sPos+1 ; ePos &lt; TokenList-&gt;Count ; ePos++){ | 
              |     |  +--+-----------------------------------------------------+ 
   758        |     |     +--- Token = (TToken *)TokenList-&gt;Items[ePos];
   759        |     |     +--- TokId = Token-&gt;TokId;
              |     |     |  +----------------------------+ 
   760        |     |     +--+ if(TokId == tid_LineEnd){  | 
              |     |     |  +--+-------------------------+ 
              |     |     |     |  +--------+ 
   761        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
   762        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   763        |     |   |  }  | 
              |     |   +-----+ 
   764        |     +--- //      return ePos - sPos;
              |     |  +--------------------------+ 
   765        |     +--+ return ePos - StartPos;  | 
              |     |  +--------------------------+ 
              |   +-+---+ 
   766        |   |  }  | 
              |   +-----+ 
   767        +--- //
   768        |    //  関数と変数定義を追加する。 
   769        |    //                             
   770        +--- AddDataDef_C(TokenList,sPos,ePos,ValDataList);
   771        +--- #if 0
   772        +--- //
   773        |    //  NestLevel = 0 での変数定義（グローバル）に対応 2011/07/27  
   774        |    //                                                             
              |  +----------------------------------------------------+ 
   775        +--+ if((Token-&gt;NestLevel == 0)&amp;&amp;(TokId == tid_Func)){  | 
              |  +--+-------------------------------------------------+ 
   776        |     +--- //
   777        |     |    // 先頭が関数か変数の場合で、Nest=0ならば、int 定義となる。  
   778        |     |    //                                                           
   779        |     +--- AddSubFuncDef_C(TokenList,sPos,ePos,ValDataList);
              |   +-+---+ 
   780        |   |  }  | 
              |   +-+---+ 
              |   +-+---------------------------+ 
   780        |   |  else if(TokId == tid_Val){ | 
              |   +-+---------------------------+ 
   781        |     +--- AddDataDef_C(TokenList,sPos,ePos,ValDataList);
              |   +-+---+ 
   782        |   |  }  | 
              |   +-+---+ 
              |   +-+---------------------------------------------------------------------------+ 
   782        |   |  else if((TokId == tid_int)||(TokId == tid_double)||(TokId == tid_char)||   | 
   783        |   |     (TokId == tid_float)||(TokId == tid_void)||                             | 
   784        |   |     (TokId == tid_signed)||(TokId == tid_unsigned)||(TokId == tid_static)){ | 
              |   +-+---------------------------------------------------------------------------+ 
   785        |     +--- //
   786        |     |    //  関数か配列定義。Nestは無関係。 
   787        |     |    //                                 
              |     |  +----------------------------------+ 
   788        |     +--+ for(i = sPos ; i &lt; ePos ; i++){  | 
              |     |  +--+-------------------------------+ 
   789        |     |     +--- Token = (TToken *)TokenList-&gt;Items[i];
   790        |     |     +--- TokId = Token-&gt;TokId;
   791        |     |     +--- TokStr = Token-&gt;Str;
              |     |     |  +------------------------+ 
   792        |     |     +--+ if(TokId == tid_Val){  | 
              |     |     |  +--+---------------------+ 
   793        |     |     |     +--- AddDataDef_C(TokenList,sPos,ePos,ValDataList);
              |     |     |     |  +--------+ 
   794        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
   795        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +------------------------+ 
   796        |     |     +--+ if(TokId == tid_Func){ | 
              |     |     |  +--+---------------------+ 
   797        |     |     |     +--- AddSubFuncDataDef_C(TokenList,sPos,ePos,ValDataList);
              |     |     |     |  +--------+ 
   798        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
   799        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   800        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   801        |   |  }  | 
              |   +-----+ 
   802        +--- //
   803        |    //  変数を変数リストに追加する。                 
   804        |    //  配列の場合は、配列の次元も調べてセットする。 
   805        |    //                                               
              |  +----------------------------------+ 
   806        +--+ for(i = sPos ; i &lt; ePos ; i++){  | 
              |  +--+-------------------------------+ 
   807        |     +--- Token = (TToken *)TokenList-&gt;Items[i];
              |     |  +--------------------------------------------------------------------------+ 
   808        |     +--+ if(Token-&gt;TokId == tid_Val){    // 変数出現時は、変数リストに追加する。  | 
              |     |  +--+-----------------------------------------------------------------------+ 
   809        |     |     +--- //
   810        |     |     |    // 名前の次が[なら配列。名前の前が * の場合も配列。  
   811        |     |     |    //                                                   
   812        |     |     +--- TokStr = Token-&gt;Str;
   813        |     |     +--- //
   814        |     |     |    // 変数を名前とモジュールIdxで検索。                           
   815        |     |     |    // 最初の出現時、変数の後の [] を数えて、配列の次元を求める。  
   816        |     |     |    // 通常は、定義での呼出が先なので、すでに型等は設定済み。。    
   817        |     |     |    //                                                             
   818        |     |     +--- ValIdx = GetValIdx(ValDataList,TokStr,Token-&gt;ModuleIdx);
              |     |     |  +----------------------------------------------------------------+ 
   819        |     |     +--+ if(ValIdx == -1){   // Cの場合は、最初の出現は定義であること。 | 
              |     |     |  +--+-------------------------------------------------------------+ 
   820        |     |     |     +--- ValData = new TValData(TokStr);
   821        |     |     |     +--- ValDataList-&gt;Add((void *)ValData);
   822        |     |     |     +--- ValData-&gt;ModuleIdx = Token-&gt;ModuleIdx;
   823        |     |     |     +--- ValData-&gt;BrNestLevel = Token-&gt;BrNestLevel;
   824        |     |     |     +--- ValData-&gt;SetCount = 0;
   825        |     |     |     +--- Token-&gt;ValData = ValData;
   826        |     |     |     +--- Nest = 0;
   827        |     |     |     +--- ArrayLevel = 0;
              |     |     |     |  +--------------------------------+ 
   828        |     |     |     +--+ for(j = i+1 ; j &lt; ePos ; j++){ | 
              |     |     |     |  +--+-----------------------------+ 
   829        |     |     |     |     +--- Token = (TToken *)TokenList-&gt;Items[j];
   830        |     |     |     |     +--- TokId = Token-&gt;TokId;
              |     |     |     |     |  +----------------------------------+ 
   831        |     |     |     |     +--+ if(TokId == tid_KagiKakko){ // [ | 
              |     |     |     |     |  +--+-------------------------------+ 
   832        |     |     |     |     |     +--- Nest++;
   833        |     |     |     |     |     +--- ArrayLevel++;
              |     |     |     |     |   +-+---+ 
   834        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-+---+ 
              |     |     |     |     |   +-+---------------------------------------+ 
   834        |     |     |     |     |   |  else if(TokId == tid_KagiKokka){ // ]  | 
              |     |     |     |     |   +-+---------------------------------------+ 
   835        |     |     |     |     |     +--- Nest--;
              |     |     |     |     |   +-+---+ 
   836        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-+---+ 
              |     |     |     |     |   +-+---------------------+ 
   836        |     |     |     |     |   |  else if(Nest == 0){  | 
              |     |     |     |     |   +-+---------------------+ 
              |     |     |     |     |     |  +--------+ 
   837        |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |  +--------+ 
              |     |     |     |     |   +-+---+ 
   838        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
   839        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |     |  +------------------------------+ 
   840        |     |     |     +--+ for(j = i-1 ; j &gt; 0 ; j--){  | 
              |     |     |     |  +--+---------------------------+ 
   841        |     |     |     |     +--- Token = (TToken *)TokenList-&gt;Items[j];
              |     |     |     |     |  +------------------------------+ 
   842        |     |     |     |     +--+ if(Token-&gt;Str == &quot;*&quot;){  // * | 
              |     |     |     |     |  +--+---------------------------+ 
   843        |     |     |     |     |     +--- ArrayLevel++;
              |     |     |     |     |   +-+---+ 
   844        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-+---+ 
              |     |     |     |     |   +-+---------------------+ 
   844        |     |     |     |     |   |  else if(Nest == 0){  | 
              |     |     |     |     |   +-+---------------------+ 
              |     |     |     |     |     |  +--------+ 
   845        |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |  +--------+ 
              |     |     |     |     |   +-+---+ 
   846        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
   847        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
   848        |     |     |     +--- ValData-&gt;ArrayLevel = ArrayLevel; // 配列次元数
              |     |     |   +-+---+ 
   849        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------+ 
   849        |     |     |   |  else{  | 
              |     |     |   +-+-------+ 
   850        |     |     |     +--- ValData = (TValData *)ValDataList-&gt;Items[ValIdx];
   851        |     |     |     +--- Token-&gt;ValData = ValData;
              |     |     |   +-+---+ 
   852        |     |     |   |  }  | 
              |     |     |   +-----+ 
   853        |     |     +--- ValData-&gt;RefCount++;
              |     |   +-+---+ 
   854        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   855        |   |  }  | 
              |   +-----+ 
   856        +--- #endif
   857        +--- //
   858        |    //  ＝、＋＝等を検索して、その右側の変数に参照をセットする。 
   859        |    //      Add 2010/08/20                                       
   860        |    //  = なしで、( が出現した場合も参照とする。                 
   861        |    //                                                           
              |  +----------------------------------+ 
   862        +--+ for(i = sPos ; i &lt; ePos ; i++){  | 
              |  +--+-------------------------------+ 
   863        |     +--- Token = (TToken *)TokenList-&gt;Items[i];
   864        |     +--- TokId = Token-&gt;TokId;
              |     |  +----------------------------------------------+ 
   865        |     +--+ if((TokId == tid_Set)||(TokId == tid_Set2)){ | 
              |     |  +--+-------------------------------------------+ 
   866        |     |     +--- // = や += などの出現位置から右側の変数に値の参照属性をセットする。
   867        |     |     +--- Nest = 0;
              |     |     |  +--------------------------------+ 
   868        |     |     +--+ for(j = i+1; j &lt; ePos ; j++){  | 
              |     |     |  +--+-----------------------------+ 
   869        |     |     |     +--- Token2 = (TToken *)TokenList-&gt;Items[j];
   870        |     |     |     +--- TokId2 = Token2-&gt;TokId;
   871        |     |     |     |    
              |     |     |     |  +------------------------+ 
   872        |     |     |     +--+ if(TokId2 == tid_Val){ | 
              |     |     |     |  +--+---------------------+ 
   873        |     |     |     |     +--- //                  MainF-&gt;print(&quot;Ref[&quot;+Token2-&gt;Str+&quot;]&quot;);
   874        |     |     |     |     +--- Token2-&gt;RefType = vrf_ref;
   875        |     |     |     |     +--- ValData = (TValData *)Token2-&gt;ValData;
   876        |     |     |     |     +--- ValData-&gt;RefCount++;
              |     |     |     |   +-+---+ 
   877        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   878        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------+ 
   879        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
   880        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   881        |   |  }  | 
              |   +-----+ 
              |  +--------------------------------------------------------------------------+ 
   882        +--+ if(i == ePos){  // = , += 等がない場合は、変数はすべて参照で使用される。 | 
              |  +--+-----------------------------------------------------------------------+ 
              |     |  +--------------------------------+ 
   883        |     +--+ for(j = sPos; j &lt; ePos ; j++){ | 
              |     |  +--+-----------------------------+ 
   884        |     |     +--- Token2 = (TToken *)TokenList-&gt;Items[j];
   885        |     |     +--- TokId2 = Token2-&gt;TokId;
   886        |     |     |    
              |     |     |  +------------------------+ 
   887        |     |     +--+ if(TokId2 == tid_Val){ | 
              |     |     |  +--+---------------------+ 
   888        |     |     |     +--- //          MainF-&gt;print(&quot;Ref[&quot;+Token2-&gt;Str+&quot;]&quot;);
   889        |     |     |     +--- Token2-&gt;RefType = vrf_ref;
   890        |     |     |     +--- ValData = (TValData *)Token2-&gt;ValData;
              |     |     |     |  +----------------------+ 
   891        |     |     |     +--+ if(ValData != NULL){ | 
              |     |     |     |  +--+-------------------+ 
   892        |     |     |     |     +--- ValData-&gt;RefCount++;
              |     |     |     |   +-+---+ 
   893        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   894        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   895        |     |   |  }  | 
              |     |   +-----+ 
   896        |     |    
              |   +-+---+ 
   897        |   |  }  | 
              |   +-----+ 
   898        +--- //
   899        |    //  ＝、＋＝等を検索して、変数とトークンに設定ありかどうかを追加する。 
   900        |    //                                                                     
              |  +------------------------------------+ 
   901        +--+ for(i = ePos-1 ; i &gt;= sPos ; i--){ | 
              |  +--+---------------------------------+ 
   902        |     +--- Token = (TToken *)TokenList-&gt;Items[i];
   903        |     +--- TokId = Token-&gt;TokId;
              |     |  +----------------------------------------------+ 
   904        |     +--+ if((TokId == tid_Set)||(TokId == tid_Set2)){ | 
              |     |  +--+-------------------------------------------+ 
   905        |     |     +--- // = や += などの出現位置から左側の変数に値の設定の属性をセットする。
   906        |     |     |    // だだし、[][]内の添え字の変数は対象外とする。                        
   907        |     |     +--- Nest = 0;
              |     |     |  +------------------------------+ 
   908        |     |     +--+ for(j = sPos ; j &lt; i ; j++){ | 
              |     |     |  +--+---------------------------+ 
   909        |     |     |     +--- Token2 = (TToken *)TokenList-&gt;Items[j];
   910        |     |     |     +--- TokId2 = Token2-&gt;TokId;
              |     |     |     |  +--------------------------------------+ 
   911        |     |     |     +--+ if(TokId2 == tid_KagiKakko){    // [ | 
              |     |     |     |  +--+-----------------------------------+ 
   912        |     |     |     |     +--- Nest++;
              |     |     |     |   +-+---+ 
   913        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+---------------------------------------+ 
   913        |     |     |     |   |  else if(TokId2 == tid_KagiKokka){ // ] | 
              |     |     |     |   +-+---------------------------------------+ 
   914        |     |     |     |     +--- Nest--;
              |     |     |     |   +-+---+ 
   915        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |     |  +----------------------------------------+ 
   916        |     |     |     +--+ if((TokId2 == tid_Val)&amp;&amp;(Nest == 0)){  | 
              |     |     |     |  +--+-------------------------------------+ 
   917        |     |     |     |     +--- //                  MainF-&gt;print(&quot;Set[&quot;+Token2-&gt;Str+&quot;]&quot;);
   918        |     |     |     |     +--- Token2-&gt;RefType = vrf_set;
   919        |     |     |     |     +--- ValData = (TValData *)Token2-&gt;ValData;
   920        |     |     |     |     +--- ValData-&gt;SetCount++;
   921        |     |     |     |     +--- //                  if(TokId == tid_Set){
   922        |     |     |     |     |    //                      ValData-&gt;RefCount--; 
   923        |     |     |     |     |    //                  }                        
              |     |     |     |   +-+---+ 
   924        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   925        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------+ 
   926        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
   927        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   928        |   |  }  | 
              |   +-----+ 
   929        +--- //  return ePos-sPos;
              |  +------------------------+ 
   930        +--+ return ePos-StartPos;  | 
              |  +------------------------+ 
            +-+---+ 
   931      |  }  | 
            +-----+ 
</pre>


</body>
</html>
