
<html>
<head>
<title>TuneRegion.h ò_óùÉ`ÉÉÅ[Ég</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC ÉvÉçÉWÉFÉNÉg</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">5.15. TuneRegion.h ò_óùÉ`ÉÉÅ[Ég</font></td>
</tr>
</table>

<p></p>
<pre>
ÉtÉ@ÉCÉãò_óùÉ`ÉÉÅ[Ég

     1  +--- ÔªÉ\/*=====================================================================*
     2  |     *                                                                     *           
     3  |     *   Software Name : ppOpen-AT                                         *           
     4  |     *         Version : 0.1                                               *           
     5  |     *                                                                     *           
     6  |     *   License                                                           *           
     7  |     *     This file is part of ppOpen-AT.                                 *           
     8  |     *     ppOpen-AT is a free software, you can use it under the terms    *           
     9  |     *     of The MIT License (MIT). See LICENSE file and User's guide     *           
    10  |     *     for more details.                                               *           
    11  |     *                                                                     *           
    12  |     *   ppOpen-HPC project:                                               *           
    13  |     *     Open Source Infrastructure for Development and Execution of     *           
    14  |     *     Large-Scale Scientific Applications on Post-Peta-Scale          *           
    15  |     *     Supercomputers with Automatic Tuning (AT).                      *           
    16  |     *                                                                     *           
    17  |     *   Organizations:                                                    *           
    18  |     *     The University of Tokyo                                         *           
    19  |     *       - Information Technology Center                               *           
    20  |     *       - Atmosphere and Ocean Research Institute (AORI)              *           
    21  |     *       - Graduate School of Interdisciplinary Information Studies    *           
    22  |     *         /Earthquake Research Institute (ERI)                        *           
    23  |     *       - Graduate School of Frontier Science                         *           
    24  |     *     Kyoto University                                                *           
    25  |     *       - Academic Center for Computing and Media Studies             *           
    26  |     *     Japan Agency for Marine-Earth Science and Technology (JAMSTEC)  *           
    27  |     *                                                                     *           
    28  |     *   Sponsorship:                                                      *           
    29  |     *     Japan Science and Technology Agency (JST), Basic Research       *           
    30  |     *     Programs: CREST, Development of System Software Technologies    *           
    31  |     *     for post-Peta Scale High Performance Computing.                 *           
    32  |     *                                                                     *           
    33  |     *   Copyright (c) 2012                                                *           
    34  |     *      Information Technology Center, The University of Tokyo         *           
    35  |     *                                                                     *           
    36  |     *=====================================================================*/          
    37  |     /*----------------------------------------------------------------------------*/  
    38  |    //                                                                                 
    39  |    //  Ê¶ÇËÉíÅ                                                                        
    40  |    //    „ÉÅ„É•„ÉÉV„Éã„É≥„ÇÅ[„ÉÉF„ÉÉV„ÇÉN„ÉÉ@„ÉÉE„ÇÉb„ÉÉD„ÇÉP„ÄÄ„Éò„ÉÉ„ÉÄ             
    41  |    //                                                                                 
    42  |    //  ‰ΩúÊàêËÄÖ                                                                      
    43  |    //                                                                                 
    44  |    /*----------------------------------------------------------------------------*/   
    45  |                                                                                       
    46  +--- #include &quot;main.h&quot;
    47  |    
    48  +--- #ifndef TuneRegionH
    49  +--- #define TuneRegionH
    50  |    
    51  +--- //---------------------------------------------------------------------------
    52  |    //                                                                                         
    53  |    // ÂêÑ„ÉÅ„ÉÅE„ÉÉV„Éã„É≥„ÇÅ[„ÉÉF„ÉÉV„ÇÉN„ÉÉ@„ÉÉE„Åî„Å®„ÅÉHÁîüÊàê„Åï„Çå„Çã„ÇØ„ÉÉD„ÇÉP        
    54  |    // „Åì„Çå„ÇíÂÖÉ„ÅÉH Pass5„ÅÉ@„ÇÉX„ÉÉV„ÇÉP„ÇÉE„ÉÉV„Éâ„ÅåÁîüÊàê„Åï„Çå„ÇãÂÉXÅuÂºè„Å´Â§âÊõ¥    
    55  |    // TuneRegionList„ÅÉHËøÉXÂä†„Åï„Çå„Çã„ÄÇ                                                   
    56  |    //                                                                                         
    57  |    // ÁîüÊàê„ÅÉb„ÄÅPass4„ÅÉ@„ÅÉá„ÇÉX„ÉÉV„ÇÉP„Çí„Çπ„ÇÉÖ„ÉÅv„ÉÉE„Åô„ÇãÂΩÅu„ÅÉ@Ë°å„Çè„Çå„Çã„ÄÇ   
    58  |    //                                                                                         
    59  |    /*----------------------------------------------------------------------------*/           
    60  |    //  1.ÊóÅEÊúÉÉË™ûÂêç                                                                       
    61  |    //                                                                                         
    62  |    //  2.Ê¶ÇËÉíÅ                                                                              
    63  |    //    „ÉÅ„É•„ÉÉV„Éã„É≥„ÇÅ[„ÇÅ[„ÉÉH„ÉÉV„ÉóÁÉBÉáÈ°û                                          
    64  |    //                                                                                         
    65  |    //  3.Ê©üËÉΩË™ÉÉÊòé                                                                        
    66  |    //                                                                                         
    67  |    //  4.ÂÇôËÄÉ                                                                               
    68  |    //                                                                                         
    69  |    /*----------------------------------------------------------------------------*/           
        |  +--------------------+ 
    70  +--+ enum TTuneGroup {  | 
        |  +--+-----------------+ 
    71  |     +--- tgInstall,
    72  |     |    tgStatic,  
    73  |     |    tgDynamic, 
        |   +-+---+ 
    74  |   |  }; | 
        |   +-----+ 
    75  |    
    76  +--- /*----------------------------------------------------------------------------*/
    77  |    //  1.ÊóÅEÊúÉÉË™ûÂêç                                                             
    78  |    //                                                                               
    79  |    //  2.Ê¶ÇËÉíÅ                                                                    
    80  |    //    „ÉÅ„É•„ÉÉV„Éã„É≥„ÇÅ[Á®ÉáÈ°û                                                
    81  |    //                                                                               
    82  |    //  3.Ê©üËÉΩË™ÉÉÊòé                                                              
    83  |    //                                                                               
    84  |    //  4.ÂÇôËÄÉ                                                                     
    85  |    //                                                                               
    86  |    /*----------------------------------------------------------------------------*/ 
        |  +------------------+ 
    87  +--+ enum TTuneKind { | 
        |  +--+---------------+ 
    88  |     +--- tkDefine,
    89  |     |    tkVariable,                                                                                      
    90  |     |    tkSelect,                                                                                        
    91  |     |    tkUnroll,                                                                                        
    92  |     |    tkLoopFusionSplit,                                                                               
    93  |     |    tkLoopFusion,                                                                                    
    94  |     |    tkLoopSplit,                                                                                     
    95  |     |    tkRotationOrder,                                                                                 
    96  |     |                                                                                                     
    97  |     |    tkList,             // Add 2012/02/26                                                            
    98  |     |    tkVariableD,                                                                                     
    99  |     |    tkListD,                                                                                         
   100  |     |    tkReplace,                                                                                       
   101  |     |    tkGWV,                                                                                           
   102  |     |    tkList_End,         // ListÁ®ÉáÈ°û„ÅÆÁµÇ„Çè„Çä„ÇíÁ§ÉR„ÅôËÉÖòÂà•ÁîÉB„ÄÇ‰ÉXÉ\ÁîÉB„ÅÉb„Åó„Å™„ÅÑ„ÄÇ  
        |   +-+---+ 
   103  |   |  }; | 
        |   +-----+ 
   104  +--- /*----------------------------------------------------------------------------*/
   105  |    //  1.ÊóÅEÊúÉÉË™ûÂêç                                                             
   106  |    //                                                                               
   107  |    //  2.Ê¶ÇËÉíÅ                                                                    
   108  |    //    „ÇÉI„Éñ„É™„ÉÉV„ÇÉN„ÉÉ@„ÉÉEÁ®ÉáÈ°û                                          
   109  |    //                                                                               
   110  |    //  3.Ê©üËÉΩË™ÉÉÊòé                                                              
   111  |    //                                                                               
   112  |    //  4.ÂÇôËÄÉ                                                                     
   113  |    //                                                                               
   114  |    /*----------------------------------------------------------------------------*/ 
        |  +------------------------+ 
   115  +--+ enum TSubRegionKind {  | 
        |  +--+---------------------+ 
   116  |     +--- srSelect                            // „ÇÉI„Éñ„É™„ÉÉV„ÇÉN„ÉÉ@„ÉÉEÁ®ÉáÈ°û
        |   +-+-----------------------------------------+ 
   117  |   |  };  // „ÇÉI„Éñ„É™„ÉÉV„ÇÉN„ÉÉ@„ÉÉEÁ®ÉáÈ°û | 
   118  |   |                                           | 
        |   +-------------------------------------------+ 
   119  +--- /*----------------------------------------------------------------------------*/
   120  |    //  1.ÊóÅEÊúÉÉË™ûÂêç                                                             
   121  |    //                                                                               
   122  |    //  2.Ê¶ÇËÉíÅ                                                                    
   123  |    //    GPUÁ®ÉáÈ°û                                                                 
   124  |    //                                                                               
   125  |    //  3.Ê©üËÉΩË™ÉÉÊòé                                                              
   126  |    //    #Pragma ABCLib allocate „ÅÉ@ÊåáÂÉáö„Åï„Çå„Çã GPU„ÇÉF„Éó„Ç∑„ÉÉ@„ÉÉE         
   127  |    //                                                                               
   128  |    //  4.ÂÇôËÄÉ                                                                     
   129  |    //                                                                               
   130  |    /*----------------------------------------------------------------------------*/ 
        |  +--------------------+ 
   131  +--+ enum TGPUOption {  | 
        |  +--+-----------------+ 
   132  |     +--- gpu_option_None,    // GPU„ÇÉF„Éó„Ç∑„ÉÉ@„ÉÉE„ÅÉF„Åó
   133  |     |    gpu_option_CPU,     // GPU„ÇÉF„Éó„Ç∑„ÉÉ@„ÉÉE CPU     
   134  |     |    gpu_option_GPU,     // GPU„ÇÉF„Éó„Ç∑„ÉÉ@„ÉÉE GPU     
   135  |     |    gpu_option_auto,    // GPU„ÇÉF„Éó„Ç∑„ÉÉ@„ÉÉE auto    
        |   +-+---+ 
   136  |   |  }; | 
        |   +-----+ 
   137  +--- /*----------------------------------------------------------------------------*/
   138  |    //  1.ÊóÅEÊúÉÉË™ûÂêç                                                                                                               
   139  |    //                                                                                                                                 
   140  |    //  2.Ê¶ÇËÉíÅ                                                                                                                      
   141  |    //    „ÉÅ„É•„ÉÉV„Éã„É≥„ÇÅ[„ÉÉF„ÉÉV„ÇÉN„ÉÉ@„ÉÉE„ÇÉb„ÉÉD„ÇÉP                                                                         
   142  |    //    ÂêÑ„ÉÅ„ÉÅE„ÉÉV„Éã„É≥„ÇÅ[„ÉÉF„ÉÉV„ÇÉN„ÉÉ@„ÉÉE„Åî„Å®„ÅÉHÁîüÊàê„Åï„Çå„ÄÅËÉ@ÅvÊûê„Å´Âøú„Åò„ÅÉí„Éá„Éº„ÇÉ\„ÅåËÉBÉÖÂÆö„Åï„Çå„Çã„ÄÇ  
   143  |    //    „ÇÉX„ÉÉV„ÇÉPÁîüÊàêÊôÇ„Å´„ÅÉb„ÄÅ„Åì„ÅÉá„ÇÉb„ÉÉD„ÇÉP„Çí„Ç¢„ÇÉb„ÇÉT„ÇÉP„Åó„Å¶ÂáÉRÂäõ„Ç≥„ÉÉV„Éâ„ÅåÁîüÊàê„Åï„Çå„Çã„ÄÇ             
   144  |    //                                                                                                                                 
   145  |    //  3.Ê©üËÉΩË™ÉÉÊòé                                                                                                                
   146  |    //                                                                                                                                 
   147  |    //  4.ÂÇôËÄÉ                                                                                                                       
   148  |    //                                                                                                                                 
   149  |    /*----------------------------------------------------------------------------*/                                                   
        |  +--------------------+ 
   150  +--+ class TTuneRegion{ | 
        |  +--+-----------------+ 
        |     +-----------+ 
   151  |     |  private: | 
        |     +-----------+ 
   152  |     +--- TPass4 *Pass4;
   153  |     |    
   154  |     +--- // UnRoll„ÅÉ@ÂÖÉAÈÄöÂà©ÁîÉB„Åï„Çå„ÇãÂÅAâÊï∞
   155  |     +--- int CaseIdx;
   156  |     +--- unsigned int UnRollDoRefValBits;            // UnrollÂØÉZË±ÅB„ÅÉáDOÂ§âÊï∞Bit CaseIdx„Åî„Å®„ÅÉHÂ§â
   157  |     +--- // Âåñ
   158  |     +--- int UnrollCount[32];
   159  |     +--- int DoTokPos[32];
   160  |     +--- int EndDoTokPos[32];
   161  |     +--- string DoValStr[32];
   162  |     +--- string DoVal_m[32];
   163  |     +--- string DoVal_i[32];
   164  |     +--- string DoVal_l[32];
   165  |     +--- string DoValName[32];
   166  |     +--- int DoValIdx;
   167  |     +--- int DoValCount;
   168  |     +--- char Comment;
   169  |     |    
   170  |     +--- void OutputLoopFusionExecCode_Fortran(FILE *fp);
   171  |     +--- void OutputUnrollExecCode_Fortran(FILE *fp);
   172  |     +--- void OutputLoopFusionExecCode_C(FILE *fp,FILE *fpOutHeader);
   173  |     +--- void OutputUnrollExecCode_C(FILE *fp,FILE *fpOutHeader);
   174  |     |    
   175  |     +--- string GetNewValName(string BaseName,int Idx,TStringList *ArgValList);
   176  |     +--- string GetNewValName(string BaseName,string AddStr,TStringList *ArgValList);
   177  |     +--- string GetNewValNameForValData(TValData *ValData,
   178  |     |            unsigned int UnRollDoRefValBits,int Idx,TStringList *ArgValList);  
   179  |     +--- int GetBitIdx(unsigned int Bits);
   180  |     +--- int GetValCountOfBit(unsigned int Bits,int *Count);
   181  |     +--- string ChangeFromOrgStr(string OrgStr,string Str);
   182  |     +--- int GetDoValAddValue(int kk,unsigned int UseValBits,int DoValIdx,int *Count);
   183  |     +--- //    int TTuneRegion::GetValAddValue(int kk,DWORD UseValBits,DWORD UseDoValBits,int DoValIdx,int *Count);
   184  |     +--- int GetValAddValue(int RefValIdx,unsigned int UseDoValBits,int DoValIdx,int *Count);
   185  |     +--- int GetValAddValue2(int RefValIdx,unsigned int RefDoValBits,
   186  |     |        unsigned int UnRollDoRefValBits,int DoValIdx,int *Count);  
   187  |     |    
   188  |     +--- //  string SepLongStr(string s);
   189  |     +--- void MakeArgValList();
   190  |     +--- int GetNextSemikoronPos(int sPos);
   191  |     +--- int FindEndDo2(TList *TokenList,int sPos);
   192  |     +--- int FindEndIf(TList *TokenList,int sPos);
   193  |     +--- string GetPrePostSubregionStr(int Mode);
   194  |     |    
        |     +-----------------------------------------+ 
   195  |     |  public:     // „ÉÉí„ÉÉV„ÇÉJ„ÉÉVÂÆÅvË®Ä | 
        |     +-----------------------------------------+ 
   196  |     +--- TList *TokenList;
   197  |     +--- TList *ValDataList;
   198  |     +--- int TokenStartPos;                  // ÈñãÂÉ@ã„Éà„ÉÉV„ÇÉb„ÉÉE‰ΩçÁÉXÉáÔºàPass4ÂÜÖÂèÇÁÖÉ@)
   199  |     +--- int TokenEndPos;                    // ÁµÇ‰ÉRÜ„Éà„ÉÉV„ÇÉb„ÉÉE‰ΩçÁÉXÉá
   200  |     |                                                                           
   201  |     +--- string Name;                    // ÂêçÂâç name „ÅÉ@ÊåáÂÉáö„Åï„Çå„Çã„ÄÇ
   202  |     +--- string FuncName;                // ÂëÉV„ÅÉEÂáÉR„ÅóÈñ¢ÊïÅ[„ÉÉT„ÇÉI„Éñ„É´„ÉÉV„ÉÅ„É≥Âêç
   203  |     +--- string RefValStr;               // „Éá„Éê„ÉÉ„Ç∞ÁîÉBÔºàÂÅAâÊï∞ÂèÇÁÖßÊñáÂÉÖóÂàó„ÉÉF„ÇÉP„ÉàÔÉVâ
   204  |     +--- TTuneGroup TuneGroup;
   205  |     +--- string TuneGroupName;           // Install,Static.Dynamic
   206  |     +--- TTuneKind TuneKind;
   207  |     |    
   208  |     +--- bool UseAccordingF;                 // Sub Region„ÇíÂê´„ÇÅ„Å¶ AccordingÊåáÂÉáö„ÅÇ„Çä
   209  |     |                                        // „ÄÇ                                           
   210  |     +--- string AccordingStr;            // According„ÅÉ@ÊåáÂÉáö„Åï„Çå„Åü„ÄÄÊïÅ[Âºè
   211  |     +--- bool UsedDynPefThis;                // DynPefThis„ÇÉP„ÇÉb„ÉÉF„Éó„Éà„Åå‰ÉXÉ\ÁîÉB„Åï„Çå„Åü„ÄÇ
   212  |     |                                        // Dynamic„ÅÉ@ÂëÉV„ÅÉEÂáÉR„ÅóÊôÇ„ÅÉá setParam()„Çí„Çπ„ÇÉÖ„ÉÉ   
   213  |     |                                        // „Éó                                                         
   214  |     +--- int Number;                         // „ÇÉP„ÇÉb„ÉÉF„Éó„ÉàNumber„ÅÉ@„ÅÉáÊåáÂÉáö
   215  |     |                                                                                   
   216  |     +--- TStringList *ArgValList;            // „ÇÉI„Éñ„É´„ÉÉV„ÉÅ„É≥„ÅÉH„Åô„ÇãÂ†ÉGÂêà„ÅÆÂºïÊï∞„ÉÉF„ÇÉP„Éà
   217  |     +--- TList *UndefinedArgValList;         // ÂÆöÁÉZÉD„ÅåËÉíã„Å§„Åã„Çâ„ÅÉF„ÅÑÂÉVïÊï∞„Éá„Éº„ÇÉ\
   218  |     +--- int CaseCount;                      // „ÉÉF„ÉÉV„ÇÉN„ÉÉ@„ÉÉEÂÜÖ„ÅÆËáÉFÂãï„ÉÅ„ÉÅE„ÉÉV„Éã„É≥„ÇÅ[„ÅåÂèñ„Çä„ÅÜ„ÇãÁÉBÉáÈ°ûÊï∞
   219  |     +--- TList *ValBitsList;                 // ValData-&gt;Bits‰øùÊåÅÁîÉB
   220  |     +--- TList *SubRegionList;               // „ÇÉI„Éñ„É™„ÉÉV„ÇÉN„ÉÉ@„ÉÉE„ÉÉF„ÇÉP„Éà TSubRegion „ÇÉb„ÉÉD„ÇÉP
   221  |     |                                        // Select sub region „ÅÉF„ÅÉD                                    
   222  |     |                                                                                                         
   223  |     +--- string OffsetStr;
   224  |     |    
   225  |     +--- TStringList *BaseValList;           // ÂüÉRÊúÉÉ„Éë„É©„ÉÅB„ÉÉV„ÇÉ\Âêç„ÅÆÂ§âÊï∞„ÉÉF„ÇÉP„Éà Add 2009/03/05
   226  |     |                                        // BPset(N) „ÇÑ BPset(N,NX)„ÅÉF„ÅÉD„ÅÉ@Ë®ÉÖÂÆö„Åï„Çå„Çã„ÄÇ           
   227  |     |                                        // Â§âÊï∞Âêç+ValData„ÅÉN„ÅÉá„Éù„Ç§„ÉÉE„ÇÉ\                           
   228  |     |                                        // „ÉÉF„ÉÉV„ÇÉN„ÉÉ@„ÉÉE„Éá„Éº„ÇÉ\‰ΩúÊàêÊôÇ„Å´„ÇÉT„ÉÉ„Éà„Åï„Çå„Çã„ÄÇ  
   229  |     +--- TStringList *ParamValList;          // „Éë„É©„ÉÅB„ÉÉV„ÇÉ\Êñá„ÅÆÂ§âÊï∞„ÉÉF„ÇÉP„Éà
   230  |     |                                                                                     
   231  |     +--- //
   232  |     |    // varid (xx[,xx]) from X to Y „ÅÉáÊåáÂÉáöÊÉÖÂ†ÉA (variedÊåáÂÉáöÊôÇ„ÅÉHÊúâÂäπ) 
   233  |     |    //                                                                             
   234  |     +--- int variedCount;
   235  |     +--- string variedValName[32];       // Â§âÊï∞Âêç ÔºàÂÉ\ÖÈ†àÔÉVâ
   236  |     +--- /**************************************************************************/
   237  |     |    //                                                                           
   238  |     |    //Kogakuin Irie                                                              
   239  |     |    //ÂÆüÊï∞ÂØÉZÂøú„ÅÆ„Åü„ÇÅ„ÅÉáÂ§âÊõ¥                                           
   240  |     |    //ÊóÅuÂ≠ò„Ç≥„ÉÉV„Éâ„ÅØ„ÇÉE„ÉÅB„ÉÉE„Éà„Ç¢„ÇÉí„Éà                              
   241  |     |    //                                                                           
   242  |     |    //  int variedFromValue[32];            // ÈñãÂÉ@ãÂÄÅA                       
   243  |     |    //  int variedToValue[32];              // ÁµÇ‰ÉRÜÂÄÅA                       
   244  |     +--- float variedFromValue[32];          // ÈñãÂÉ@ãÂÄÅA
   245  |     +--- float variedToValue[32];            // ÁµÇ‰ÉRÜÂÄÅA
   246  |     +--- float variedStepValue[32];          // Â¢óÂàÜÔºàÈñìÈöîÔÉVâÂÄÅA
   247  |     +--- //
   248  |     |    //Â§âÊõ¥„Åì„Åì„ÅÉZ„ÅÉ@                                                       
   249  |     |    //                                                                           
   250  |     |    /**************************************************************************/ 
   251  |     +--- void *variedValData[32];            // Â§âÊï∞„ÅÉN„ÅÉá„Éù„Ç§„ÉÉE„ÇÉ\
   252  |     |                                                                         
   253  |     |                                                                         
   254  |     +--- //
   255  |     |    //  variedDÁîÉBÂ§âÊï∞ Add 2016/03/01 
   256  |     |    //                                   
   257  |     +--- int variedDCount;
   258  |     +--- string variedDValName[32];      // Â§âÊï∞Âêç ÔºàÂÉ\ÖÈ†àÔÉVâ
   259  |     +--- float variedDFromValue[32];         // ÈñãÂÉ@ãÂÄÅA
   260  |     +--- float variedDToValue[32];           // ÁµÇ‰ÉRÜÂÄÅA
   261  |     +--- float variedDStepValue[32];         // Â¢óÂàÜÔºàÈñìÈöîÔÉVâÂÄÅA
   262  |     +--- void *variedDValData[32];           // Â§âÊï∞„ÅÉN„ÅÉá„Éù„Ç§„ÉÉE„ÇÉ\
   263  |     |                                                                         
   264  |     +--- //
   265  |     |    // Fitting„ÅÉá„Åü„ÇÅ„ÅÉá„Éá„Éº„ÇÉ\ 
   266  |     |    //                                 
   267  |     +--- //d-splineÁîÉBËøÉXÂä†ÈÉÉBÂàÜ
   268  |     +--- int FittingDspline;
   269  |     +--- int FittingDynamic;
   270  |     +--- //d-splineÁîÉBËøÉXÂä†ÈÉÉBÂàÜ„Åì„Åì„Åæ„ÅÉ@
   271  |     +--- int FittingType;                    // Type = 0:„ÅÉF„Åó„ÄÅ1:least-square,2:user_
   272  |     |                                        // defined                                   
   273  |     +--- int FittingDegree;                  // Â§öÈ†ÖÂÉVè„ÅÆÊ¨ÅBÊïÅ[
   274  |     +--- TList *SampledList;                 // int„ÅÉáÂΩÅu„ÅÉ@ Sampled„ÅÉáÂÄÅA„Åå„Çª„ÉÉ„ÉàÔºàÂÉáü‰ÉXì„ÅØ
   275  |     |                                        // „ÄÅScript„ÅÉá„Éá„Éº„ÇÉ\Ôºâ                                
   276  |     |                                                                                                     
   277  |     +--- //
   278  |     |    //  GPU„ÅÉá„Åü„ÇÅ„ÅÉá„Éá„Éº„ÇÉ\ 2010/12/28 ËøÉXÂä† 
   279  |     |    //                                                 
   280  |     +--- TGPUOption GPUOption;
   281  |     |    
   282  |     +--- //
   283  |     |    //  LoopFusionSplit„ÅÉá„Åü„ÇÅ„ÅÉá„Éá„Éº„ÇÉ\ 2012/03/07 
   284  |     |    //                                                     
   285  |     +--- int SplitPointCopyDef_StartPos;
   286  |     +--- int SplitPointCopyDef_EndPos;
   287  |     |    
   288  |     +--- //
   289  |     |    //  OptionÊåáÂÉáöÊñáÂ≠óÂàó 
   290  |     |    //                         
   291  |     +--- string OptionStr;
   292  |     |    
   293  |     +--- //
   294  |     |    // Select„ÅÉáËßÅvÊûê„ÇíË°å„ÅÜ  
   295  |     |    //                             
   296  |     +--- void MakeSelectData_Old(int sPos);  // ‰ªÅEÂâç„ÅÆ„Éê„Éº„ÇÉN„ÉÉ@„ÉÉE 2016/02/26
   297  |     +--- void MakeSelectData(int sPos);      // ReplaceÁ≠â„Å´ÂØÉZÂøú
   298  |     +--- //
   299  |     |    //                                                                                                   
   300  |     |    // UnRoll„ÅÉáÂ†ÉGÂêà„ÅÆËßÅvÊûêÁÉIêÊûú                                                                
   301  |     |    // Do„ÅÉáNest„ÅÉb„ÄÅÊúÄÂ§É@32„ÅÉZ„ÅÉ@„ÇíÂÉbÉZË±ÅB„ÅÉB„Åô„Çã„ÄÇ(ÂÖÉ„ÅØPass4„ÅÉ@ËßÅvÊûê„Åó„ÅÉí„ÅÑ„Åü)  
   302  |     |    //                                                                                                   
   303  |     +--- void MakeUnrollData(int sPos);
   304  |     |    
   305  |     +--- TToken *DoToken[32];                // Unroll„ÅÉá‰∏ÄÁïÉFÂ§ñÂÅ¥„ÅÉáDo„Éà„Éº„ÇÉb„ÉÉE
   306  |     +--- TToken *DoValToken[32];             // DoÂ§âÊï∞
   307  |     +--- int DoStartSPos[32];                // Do„ÅÉáÂàùÊúüÂÄÅA„ÅÉáÂºè
   308  |     +--- int DoStartEPos[32];
   309  |     +--- int DoEndSPos[32];                  // Do„ÅÉáÁµÇ„Çè„ÇäÂÄÅA„ÅÉáÂºè
   310  |     +--- int DoEndEPos[32];
   311  |     +--- int DoStepSPos[32];                 // Do„ÅÉáÂ¢óÂàÜÂÄÅA„ÅÉáÂºè
   312  |     +--- int DoStepEPos[32];
   313  |     |    
   314  |     +--- //
   315  |     |    //  LoopFusion„ÅÉáËßÅvÊûêÁÉIêÊûú 
   316  |     |    //                               
   317  |     +--- int FusionCount;
   318  |     |    
   319  |     +--- void MakeLoopFusionSplitData(int sPos);
   320  |     +--- TList *MakeRotaionOrderSrcTokenList();
   321  |     |    
   322  |     +--- TList *RotaionOrderList;    // RotationOrder„ÅÉá„ÉÉF„ÉÉV„ÇÉN„ÉÉ@„ÉÉE„Éà„Éº„ÇÉb„ÉÉE‰ΩçÁÉXÉá
   323  |     |                                // ÂÖàÈ†ÉÖ„ÅÉBÊúÄÂæå„Åå‰∫ÅA‰∫í„Å´ÂÖÅE„Çã„ÄÇ                    
   324  |     |                                                                                               
   325  |     +--- //
   326  |     |    //  ReplaseÁ≠â„ÅÆËßÅvÊûêÁÉIêÊûú„ÄÇ   
   327  |     |    //                                   
   328  |     +--- TStringList *ReplaceStrList;        // replaceÊåáÂÉáöÂÉÖê„ÅßÂÆöÁÉZÉD„Åï„Çå„ÅüÊñáÂ≠óÂàó„ÉÉF„ÇÉP„Éà
   329  |     +--- TStringList *TargetStrList;         // targerÊåáÂÉáöÂÉÖê„ÅßÂÆöÁÉZÉD„Åï„Çå„ÅüÊñáÂ≠óÂàó„ÉÉF„ÇÉP„Éà„ÄÇÊúÄÂæå„ÅÆ()„ÇíÂê´„ÇÄÂ†ÉGÂêà„ÅÇ„Çä„ÄÇ
   330  |     +--- TStringList *ListSrcStrList;        // listÊåáÂÉáöÂÉÖê„ÅßÂÆöÁÉZÉD„Åï„Çå„ÅüÁÉXÉáÊèõ„ÅàÂÖÉÂÅAâÊï∞Âêç„É™„ÇÉP„Éà
   331  |     +--- TStringList *ListReplaceStrList;    // listÊåáÂÉáöÂÉÖê„ÅßÂÆöÁÉZÉD„Åï„Çå„ÅüÁÉXÉáÊèõ„Åà„ÉÉF„ÇÉP„Éà ListSrcList*NÂÄã„ÅÆË¶ÅÁÉG†
   332  |     +--- TStringList *ListDSrcStrList;       // listDÊåáÂÉáöÂÉÖê„ÅßÂÆöÁÉZÉD„Åï„Çå„ÅüÁÉXÉáÊèõ„ÅàÂÖÉÂÅAâÊï∞Âêç„É™„ÇÉP„Éà
   333  |     +--- TStringList *ListDReplaceStrList;   // listDÊåáÂÉáöÂÉÖê„ÅßÂÆöÁÉZÉD„Åï„Çå„ÅüÁÉXÉáÊèõ„Åà„ÉÉF„ÇÉP„Éà ListSrcList*NÂÄã„ÅÆË¶ÅÁÉG†
   334  |     +--- TList *GWV_ListList;                // GWVÂ§âÊèõÁîÉB„ÅÉá„ÉÉF„ÇÉP„Éà„Å∏„ÅÉá„ÉÉF„ÇÉP„Éà
   335  |     +--- TStringList *GWV_TargetStrList;     // targerÊåáÂÉáöÂÉÖê„ÅßÂÆöÁÉZÉD„Åï„Çå„ÅüÊñáÂ≠óÂàó„ÉÉF„ÇÉP„Éà„ÄÇÊúÄÂæå„ÅÆ()„ÇíÂê´„ÇÄÂ†ÉGÂêà„ÅÇ„Çä„ÄÇ
   336  |     |                                                                                                                                             
   337  |     +--- //
   338  |     |    // Select„ÅÉáÂ†ÉGÂêà„ÅÆËßÅvÊûêÁÉIêÊûú  
   339  |     |    //                                     
   340  |     |                                           
   341  |     +--- int GetNextKanmaPos(int sPos);
   342  |     +--- void ChackRefDoValF(int sPos,int ePos);
   343  |     +--- void AddArgValListToATExecArgList();
   344  |     +--- void SaveAndResetValBits(int sPos,int ePos);
   345  |     +--- void RestoreValBits(int sPos,int ePos);
   346  |     |    
   347  |     +--- TTuneRegion(TPass4 *aPass4,int Pos);        // ÁîüÊàê
   348  |     +--- ~TTuneRegion();         // Á†ÉGÊ£Ñ
   349  |     |                                       
   350  |     +--- string GetInfo();   // ÊÉÖÂ†ÉA„ÇíÊîπË°åÂÖ•„ÇäÊñáÂ≠óÂàó„ÅÉ@ÊâÄÂæóÔÉVà„Éá„Éê„ÉÉ„ÇÅ[ÁîÉBÔºâ
   351  |     |                                                                                             
   352  |     +--- void OutputSetParamCode_Fortran(FILE *fp,int TempLineNo,FILE *fpAdd);
   353  |     +--- void OutputSetParamCode_C(FILE *fp,int TempLineNo);
   354  |     +--- void OutputAutoExecCode_Fortran(FILE *fp);
   355  |     +--- void OutputAutoExecCode_C(FILE *fp,FILE *fpOutHeader);
   356  |     +--- void OutputExecCode_Fortran(FILE *fp);
   357  |     +--- void OutputExecCode_C(FILE *fp,FILE *fpOutHeader);
   358  |     +--- //  void TTuneRegion::OutputSrcCode(FILE *fp,AnsiString IndentStr,bool InCaseF);
   359  |     +--- void OutputSrcCode(FILE *fp, string IndentStr, int OutMode,int Use_OAT_functuonNameF = 0);
   360  |     +--- void OutputSelectCaseExecCode_Fortran(FILE *fp,int iusw1);
   361  |     +--- void OutputSelectCaseExecCode_C(FILE *fp,int iusw1);
   362  |     |    
   363  |     +--- void OutputReplaceSrc(FILE *fp,void *TargetSubRegion,int iusw1,bool Skip_Pragma_ACCF);
   364  |     |    
   365  |     +--- //  int OutputUnroll_DoBlock_Fortran(FILE *fp,int TokPos,unsigned int UseDoRefValBits,int RefValIdx);
   366  |     +--- int OutputUnroll_DoBlock_Fortran(FILE *fp, int TokPos,
   367  |     |        unsigned int UsedDoRefValBits, int RefValIdx,string CommentStrBeforeDo = &quot;&quot;);  
   368  |     +--- int OutputUnroll_DoBlock_C(FILE *fp,int TokPos,
   369  |     |        unsigned int UseDoRefValBits,int RefValIdx,string CommentStrBeforeDo = &quot;&quot;);  
   370  |     +--- int OutputUnroll_IfBlock_Fortran(FILE *fp,int TokPos,unsigned int UsedDoRefValBits,int RefValIdx);
   371  |     +--- int OutputUnroll_IfBlock_C(FILE *fp,int TokPos,unsigned int UsedDoRefValBits,int RefValIdx);
   372  |     +--- int OutputUnroll_Line_Fortran(FILE *fp,int TokPos,unsigned int UseDoRefValBits,int RefValIdx);
   373  |     +--- int OutputUnroll_Line_C(FILE *fp,int TokPos,unsigned int UseDoRefValBits,int RefValIdx);
   374  |     |    
   375  |     +--- int CalNewRefValIdx(int RefValIdx,unsigned int UseDoRefValBits,
   376  |     |            int AndRefValIdx,unsigned int AndUseDoRefValBits,int *UnrollCount);  
   377  |     |    
   378  |     +--- //    AnsiString TTuneRegion::GetPrePostSubregionStr(int Mode);
   379  |     +--- string GetPrePostSubregionStr(int Mode,int InControlCode);
   380  |     +--- string GetPrePostBPSetSubregionStr(int Mode);
   381  |     +--- string Merge_Unroll_Line_C(string *BaseOutputStr,
   382  |     |        string LastOutputStr,string *CurLineStr,int AddOprStrPos); 
   383  |     |    
   384  |     +--- //  void OutputSetParmSrcCode(FILE *fp,string IndentStr);
   385  |     +--- void OutputSetParmSrcCode(FILE *fp, string IndentStr,int Use_OAT_functuonNameF = 0);
   386  |     +--- string ChangePragmaStr(string OrgStr,int TokPos,int EndTokPos,
   387  |     |            TStringList *NewValStrList);                           
   388  |     |    
   389  |     +--- bool IsATExecArg(void *ValData);
   390  |     +--- void OutputFusionDo_Fortran(string FusionValName,FILE *fp,int DoNest,int FusionIdx);
   391  |     +--- void OutputFusionDo_C(string FusionValName,FILE *fp,int DoNest,int FusionIdx);
   392  |     |    
        |   +-+---+ 
   393  |   |  }; | 
        |   +-----+ 
   394  +--- //
   395  |    // SubReguon Class                                                                                           
   396  |    //                                                                                                           
   397  |    /*----------------------------------------------------------------------------*/                             
   398  |    //  1.ÊóÅEÊúÉÉË™ûÂêç                                                                                         
   399  |    //                                                                                                           
   400  |    //  2.Ê¶ÇËÉíÅ                                                                                                
   401  |    //    „ÇÉI„Éñ„É™„ÉÉV„ÇÉN„ÉÉ@„ÉÉE„ÇÉb„ÉÉD„ÇÉP                                                                 
   402  |    //    „ÇÉP„ÇÉb„ÉÉF„Éó„Éà„ÅÉ@ÂÆöÁÉZÉD„Åï„Çå„Çã„Çµ„Éñ„É™„ÉÉV„ÇÉN„ÉÉ@„ÉÉE„ÅÉá„Éá„Éº„ÇÉ\„ÅåÊ†ÉVÁ¥ç„Åï„Çå„Çã„ÄÇ   
   403  |    //    „ÇÉP„Éó„É™„ÉÉ„Éà„ÅÉáÂ†ÉGÂêà„Å´„ÇÇ‰ÉXÉ\ÁîÉB„Åï„Çå„Çã„ÄÇ                                                 
   404  |    //                                                                                                           
   405  |    //  3.Ê©üËÉΩË™ÉÉÊòé                                                                                          
   406  |    //                                                                                                           
   407  |    //  4.ÂÇôËÄÉ                                                                                                 
   408  |    //                                                                                                           
   409  |    /*----------------------------------------------------------------------------*/                             
        |  +--------------------+ 
   410  +--+ class TSubRegion{  | 
        |  +--+-----------------+ 
        |     +-----------+ 
   411  |     |  public:  | 
        |     +-----------+ 
   412  |     +--- Enum_ScType ScType;                 // Á®ÉáÈ°û sub region start „ÅÉ@„ÅÉáÂÖàÈ†ÉÖ„ÇÉÖ„ÉÉV„ÉÉb„ÉÉV„Éâ
   413  |     +--- int TokenStartPos;
   414  |     +--- int TokenEndPos;
   415  |     +--- string AccordingStr;            // According„ÅÉ@ÊåáÂÉáö„Åï„Çå„Åü„ÄÄÊïÅ[Âºè
   416  |     |                                                                               
   417  |     +--- //
   418  |     |    // varid (xx[,xx]) from X to Y „ÅÉáÊåáÂÉáöÊÉÖÂ†ÉA (variedÊåáÂÉáöÊôÇ„ÅÉHÊúâÂäπ) 
   419  |     |    //                                                                             
   420  |     +--- int CaseCount;
   421  |     |    
   422  |     +--- int variedCount;
   423  |     +--- string variedValName[32];       // Â§âÊï∞Âêç ÔºàÂÉ\ÖÈ†àÔÉVâ
   424  |     +--- /**************************************************************************/
   425  |     |    //                                                                           
   426  |     |    //Kogakuin Irie                                                              
   427  |     |    //ÂÆüÊï∞ÂØÉZÂøú„ÅÆ„Åü„ÇÅ„ÅÉáÂ§âÊõ¥                                           
   428  |     |    //ÊóÅuÂ≠ò„Ç≥„ÉÉV„Éâ„ÅØ„ÇÉE„ÉÅB„ÉÉE„Éà„Ç¢„ÇÉí„Éà                              
   429  |     |    //                                                                           
   430  |     |    //  int variedFromValue[32];            // ÈñãÂÉ@ãÂÄÅA                       
   431  |     |    //  int variedToValue[32];              // ÁµÇ‰ÉRÜÂÄÅA                       
   432  |     +--- float variedFromValue[32];          // ÈñãÂÉ@ãÂÄÅA
   433  |     +--- float variedToValue[32];            // ÁµÇ‰ÉRÜÂÄÅA
   434  |     +--- float variedStepValue[32];          // Â¢óÂàÜÔºàÈñìÈöîÔÉVâÂÄÅA
   435  |     +--- //
   436  |     |    //Â§âÊõ¥„Åì„Åì„ÅÉZ„ÅÉ@                                                       
   437  |     |    //                                                                           
   438  |     |    /**************************************************************************/ 
   439  |     +--- void *variedValData[32];        // Â§âÊï∞„ÅÉN„ÅÉá„Éù„Ç§„ÉÉE„ÇÉ\
   440  |     |                                                                     
   441  |     +--- unsigned int SplitBitsOfFusionIdx[32];  // FusionIdx„ÅÉH„Çà„Çã SplitÊúâÂäπÁÑÅBÂäÉPBits
   442  |     +--- // DoVal„ÅÉBÂêå„Åò‰∏Éí„ÅÉE„ÅÉáBits„ÅÉH„ÅÉF„Çã„ÄÇ
   443  |     |    // Ôºí^BitsÊïÅ[„ÅåÂêÑFusionIdx„ÅÉH„Åä„Åë„ÇãSplitÊïÅ[„ÅÉH„ÅÉF„Çã„ÄÇ   
   444  |     +--- int SplitCaseCountOfFusionIdx[32];      // FusionIdx„ÅÉH„Çà„Çã SplitCaseÊïÅ[
   445  |     |                                                                                 
   446  |     +--- TSubRegion();
   447  |     |    
        |   +-+---+ 
   448  |   |  }; | 
        |   +-----+ 
   449  |    
   450  +--- #endif
</pre>


</body>
</html>
