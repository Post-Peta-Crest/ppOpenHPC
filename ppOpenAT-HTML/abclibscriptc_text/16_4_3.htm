
<html>
<head>
<title>AddIncludePosList メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.4.3. AddIncludePosList メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>AddIncludePosList</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>pass5.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>2500</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TPass5</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>private</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>int AddIncludePosList ( TList * InsertIncludePosList )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>Includeを配置する位置を求めて返す。</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap>配置種類：0:通常の配置。1 モジュール内に１つのみ配置。</td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap>InsertIncludePosList 求めた配置トークン位置を返すリスト</td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap>リージョン内の変数で未定義がある場合は、containsやuse等を使っている可能性がある。<br>例えば、 use module での変数を使用している場合は、そこの呼び出し部分に組み込む形で<br>OATのルーチンをincludeする必要がある。例えば call OAT_Install_xx(Arg1,Arg2)があった場合に<br>Arg1の型がモジュールで定義されて不明の場合には、useが有効な部分の最後に<br>contains の形での includeによって use へ参照可能な形での includeが必要。<br><br>未定義の変数がない場合は、OATのルーチンは従来と同じで、外部サブルーチンの記述で問題ない。<br>未定義の変数定義を use等が有効になるようにリージョンの後にContainsで追加する。<br><br>Containsでは、複数の参照があった場合は、複数のincludeが必要になるが、<br>Module 宣言内に includeする場合には、他のプログラムは useでそのモジュールを参照可能なので<br>１か所のみにincludeする。他のプログラムへのuseは手動で追加とする（すでにuseしてある場合も多い）</td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_4_10.htm">TPass5::MakeFunctionCode_Fortran</a></td>
<td nowrap><a href="5_6.htm">pass5.cpp</a></td>
<td nowrap><a href="16_4_10.htm">1837</a></td>
</tr>
</table>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TList::Add</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>64</td>
</tr>
</table>

<p></p>

<p></p>
参照メンバ変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TPass5::TokenList</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>69</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>TPass5::TuneRegionList</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap>71</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_1_1.htm">TList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_1_1.htm">57</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_5_1.htm">TScript</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_12.htm">pass3.h</a></td>
<td nowrap><a href="16_5_1.htm">209</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_9_1.htm">TToken</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="16_9_1.htm">294</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap><a href="16_10_1.htm">TTuneRegion</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap><a href="16_10_1.htm">143</a></td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap><a href="16_11_1.htm">TValData</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_11.htm">pass2.h</a></td>
<td nowrap><a href="16_11_1.htm">106</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +------------------------------------------------------------+ 
  2500  +--+ int TPass5::AddIncludePosList(TList *InsertIncludePosList) | 
  2501     | {                                                          | 
           +--+---------------------------------------------------------+ 
  2502        +--- int i,j;
  2503        +--- TTuneRegion *TuneRegion;
  2504        +--- int UndefindeArgCount;
  2505        +--- int TokenPos;
  2506        +--- int ModuleNest;
  2507        +--- int NestLevel;
  2508        +--- TToken *Token;
  2509        +--- TToken *Token2;
  2510        +--- TScript *Script;
  2511        +--- bool RegionStartInModuleF;
  2512        +--- bool AddIncludeReqF;
  2513        +--- TValData *ValData;
  2514        +--- bool ContainsF;
  2515        |    
  2516        +--- UndefindeArgCount = 0;
              |  +------------------------------------------------+ 
  2517        +--+ for(i = 0 ; i &lt; TuneRegionList-&gt;Count ; i++){  | 
              |  +--+---------------------------------------------+ 
  2518        |     +--- TuneRegion = (TTuneRegion *)TuneRegionList-&gt;Items[i];
  2519        |     +--- UndefindeArgCount += TuneRegion-&gt;UndefinedArgValList-&gt;Count;
  2520        |     +--- //
  2521        |     |    // 配列の仮引数で、要素数の指定がない場合 (:)での定義もContainsを使用する。  
  2522        |     |    // (INTERFACEの定義に関しては、現時点では考慮していない。)                   
  2523        |     |    //                                                                           
              |     |  +--------------------------------------------------------+ 
  2524        |     +--+ for(j = 0 ; j &lt; TuneRegion-&gt;ArgValList-&gt;Count ; j++){  | 
              |     |  +--+-----------------------------------------------------+ 
  2525        |     |     +--- ValData = (TValData *)TuneRegion-&gt;ArgValList-&gt;Objects[j];
              |     |     |  +----------------------+ 
  2526        |     |     +--+ if(ValData == NULL){ | 
              |     |     |  +--+-------------------+ 
              |     |     |     |  +------------+ 
  2527        |     |     |     +--+ continue;  | 
              |     |     |     |  +------------+ 
              |     |     |   +-+---+ 
  2528        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +----------------------------------------------------------+ 
  2529        |     |     +--+ if(ValData-&gt;ArrayOrFuncF &amp;&amp; (ValData-&gt;ArrayLevel &gt;= 1)){ | 
              |     |     |  +--+-------------------------------------------------------+ 
              |     |     |     |  +------------------------------------------------------------------------------------+ 
  2530        |     |     |     +--+ if((ValData-&gt;ArrayDefPosS-1 &lt; 0)||(ValData-&gt;ArrayDefPosE+1 &gt;= TokenList-&gt;Count)){  | 
              |     |     |     |  +--+---------------------------------------------------------------------------------+ 
              |     |     |     |     |  +------------+ 
  2531        |     |     |     |     +--+ continue;  | 
              |     |     |     |     |  +------------+ 
              |     |     |     |   +-+---+ 
  2532        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |     |  +------------------------------------------------------------------------+ 
  2533        |     |     |     +--+ for(int k = ValData-&gt;ArrayDefPosS ; k &lt; ValData-&gt;ArrayDefPosE ; k++){  | 
              |     |     |     |  +--+---------------------------------------------------------------------+ 
  2534        |     |     |     |     +--- Token = (TToken *)TokenList-&gt;Items[k];
              |     |     |     |     |  +--------------------------------+ 
  2535        |     |     |     |     +--+ if(Token-&gt;TokId == tid_Koron){ | 
              |     |     |     |     |  +--+-----------------------------+ 
  2536        |     |     |     |     |     +--- // :の前が ( か , の場合、;の後が )か,の場合は要素数不明
  2537        |     |     |     |     |     +--- Token2 = (TToken *)TokenList-&gt;Items[k-1];
              |     |     |     |     |     |  +------------------------------------------------------------------+ 
  2538        |     |     |     |     |     +--+ if((Token2-&gt;TokId == tid_Kakko)||(Token2-&gt;TokId == tid_Kannma)){ | 
              |     |     |     |     |     |  +--+---------------------------------------------------------------+ 
  2539        |     |     |     |     |     |     +--- UndefindeArgCount++;    // 未定義変数扱いとする・
              |     |     |     |     |     |     |  +--------+ 
  2540        |     |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |     |  +--------+ 
              |     |     |     |     |     |   +-+---+ 
  2541        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
  2542        |     |     |     |     |     +--- Token2 = (TToken *)TokenList-&gt;Items[k+1];
              |     |     |     |     |     |  +------------------------------------------------------------------+ 
  2543        |     |     |     |     |     +--+ if((Token2-&gt;TokId == tid_Kakko)||(Token2-&gt;TokId == tid_Kannma)){ | 
              |     |     |     |     |     |  +--+---------------------------------------------------------------+ 
  2544        |     |     |     |     |     |     +--- UndefindeArgCount++;    // 未定義変数扱いとする・
              |     |     |     |     |     |     |  +--------+ 
  2545        |     |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |     |  +--------+ 
              |     |     |     |     |     |   +-+---+ 
  2546        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |   +-+---+ 
  2547        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
  2548        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
  2549        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  2550        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  2551        |   |  }  | 
              |   +-----+ 
              |  +------------------------------+ 
  2552        +--+ if(UndefindeArgCount == 0){  | 
              |  +--+---------------------------+ 
  2553        |     +--- //
  2554        |     |    // 未定義の変数がなければ、最後に別関数として追加する。  
  2555        |     |    //                                                       
              |     |  +------------+ 
  2556        |     +--+ return 0;  | 
              |     |  +------------+ 
              |   +-+---+ 
  2557        |   |  }  | 
              |   +-----+ 
  2558        +--- //
  2559        |    // 未定義の変数があった場合は、containsで組み込む。                            
  2560        |    // リージョンがModule内にあるかを調べる。もしモジュール内にあれば、            
  2561        |    // そのモジュール内にのみ組み込み、それ以外は use module で参照する形とする。  
  2562        |    //                                                                             
  2563        +--- ModuleNest = -1;
  2564        +--- NestLevel = 0;
  2565        +--- RegionStartInModuleF = false;
              |  +------------------------------------------+ 
  2566        +--+ for(i = 0 ; i &lt; TokenList-&gt;Count ;i++){  | 
              |  +--+---------------------------------------+ 
  2567        |     +--- Token = (TToken *)TokenList-&gt;Items[i];
              |     |  +------------------------+ 
  2568        |     +--+ switch(Token-&gt;TokId){  | 
              |     |  +--+---------------------+ 
              |     |     +-------------------------------------+ 
  2569        |     |     |  case tid_MODULE:        // MODULE  | 
              |     |     +-------------------------------------+ 
  2570        |     |     +--- ModuleNest = NestLevel;
  2571        |     |     +--- NestLevel++;
              |     |     |  +--------+ 
  2572        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-------------------------------------+ 
  2573        |     |     |  case tid_PROGRAM:       // PROGRAM | 
              |     |     +-------------------------------------+ 
              |     |     +---------------------------------------+ 
  2574        |     |     |  case tid_INTERFACE:     // INTERFACE | 
              |     |     +---------------------------------------+ 
              |     |     +-----------------------------------------+ 
  2575        |     |     |  case tid_SUBROUTINE:    // SUBROUTINE  | 
              |     |     +-----------------------------------------+ 
              |     |     +---------------------------------------+ 
  2576        |     |     |  case tid_FUNCTION:      // FUNCTION  | 
              |     |     +---------------------------------------+ 
              |     |     +-----------------+ 
  2577        |     |     |  case tid_TYPE: | 
              |     |     +-----------------+ 
  2578        |     |     +--- NestLevel++;
              |     |     |  +--------+ 
  2579        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-----------------+ 
  2580        |     |     |  case tid_END:  | 
              |     |     +-----------------+ 
  2581        |     |     +--- NestLevel--;
              |     |     |  +------------------------------+ 
  2582        |     |     +--+ if(ModuleNest == NestLevel){ | 
              |     |     |  +--+---------------------------+ 
  2583        |     |     |     +--- ModuleNest = -1;
              |     |     |   +-+---+ 
  2584        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +------------------------------------+ 
  2585        |     |     +--+ for(; i &lt; TokenList-&gt;Count ;i++){  | 
              |     |     |  +--+---------------------------------+ 
  2586        |     |     |     +--- Token2 = (TToken *)TokenList-&gt;Items[i];
              |     |     |     |  +------------------------------------+ 
  2587        |     |     |     +--+ if(Token2-&gt;TokId == tid_LineEnd){  | 
              |     |     |     |  +--+---------------------------------+ 
              |     |     |     |     |  +----------------------------------------------------------------+ 
  2588        |     |     |     |     +--+ break; // LineEndまでスキップ END TYPE , END FUNCTION 等の対応 | 
              |     |     |     |     |  +----------------------------------------------------------------+ 
              |     |     |     |   +-+---+ 
  2589        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
  2590        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------+ 
  2591        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +---------------------------------------+ 
  2592        |     |     |  case tid_CONTAINS:      // CONTAINS  | 
              |     |     +---------------------------------------+ 
              |     |     |  +--------+ 
  2593        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-----------+ 
  2594        |     |     |  default: | 
              |     |     +-----------+ 
              |     |     |  +--------+ 
  2595        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
  2596        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------+ 
  2597        |     +--+ if(Token-&gt;Script != NULL){ | 
              |     |  +--+-------------------------+ 
  2598        |     |     +--- Script = (TScript *)Token-&gt;Script;
              |     |     |  +--------------------------------------------------------+ 
  2599        |     |     +--+ if(Script-&gt;ScRegion == scr_start){  // リージョン開始  | 
              |     |     |  +--+-----------------------------------------------------+ 
              |     |     |     |  +------------------------+ 
  2600        |     |     |     +--+ if(ModuleNest != -1){  | 
              |     |     |     |  +--+---------------------+ 
  2601        |     |     |     |     +--- // モジュール内にリージョン開始があった。そのモジュールの最後にのみ追加する。
  2602        |     |     |     |     +--- RegionStartInModuleF = true;
              |     |     |     |   +-+---+ 
  2603        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
  2604        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  2605        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  2606        |   |  }  | 
              |   +-----+ 
  2607        +--- //
  2608        |    //  未定義の変数を持ち、Module内でのリージョン開始でない場合。 
  2609        |    //  この場合は、各出現単位ごとにContainsで追加する。           
  2610        |    //  Containsを含む場合は、同じ位置を２回セットする。           
  2611        |    //                                                             
  2612        +--- ModuleNest = -1;
  2613        +--- NestLevel = 0;
  2614        +--- AddIncludeReqF = false;
  2615        +--- ContainsF = false;
              |  +------------------------------------------+ 
  2616        +--+ for(i = 0 ; i &lt; TokenList-&gt;Count ;i++){  | 
              |  +--+---------------------------------------+ 
  2617        |     +--- Token = (TToken *)TokenList-&gt;Items[i];
              |     |  +------------------------+ 
  2618        |     +--+ switch(Token-&gt;TokId){  | 
              |     |  +--+---------------------+ 
              |     |     +-------------------------------------+ 
  2619        |     |     |  case tid_MODULE:        // MODULE  | 
              |     |     +-------------------------------------+ 
  2620        |     |     +--- ModuleNest = NestLevel;
  2621        |     |     +--- NestLevel++;
              |     |     |  +--------+ 
  2622        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-------------------------------------+ 
  2623        |     |     |  case tid_PROGRAM:       // PROGRAM | 
              |     |     +-------------------------------------+ 
              |     |     +---------------------------------------+ 
  2624        |     |     |  case tid_INTERFACE:     // INTERFACE | 
              |     |     +---------------------------------------+ 
              |     |     +-----------------------------------------+ 
  2625        |     |     |  case tid_SUBROUTINE:    // SUBROUTINE  | 
              |     |     +-----------------------------------------+ 
              |     |     +---------------------------------------+ 
  2626        |     |     |  case tid_FUNCTION:      // FUNCTION  | 
              |     |     +---------------------------------------+ 
              |     |     +-----------------+ 
  2627        |     |     |  case tid_TYPE: | 
              |     |     +-----------------+ 
  2628        |     |     +--- NestLevel++;
              |     |     |  +--------+ 
  2629        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-----------------+ 
  2630        |     |     |  case tid_END:  | 
              |     |     +-----------------+ 
  2631        |     |     +--- NestLevel--;
              |     |     |  +----------------------+ 
  2632        |     |     +--+ if(NestLevel == 0){  | 
              |     |     |  +--+-------------------+ 
              |     |     |     |  +----------------------+ 
  2633        |     |     |     +--+ if(AddIncludeReqF){  | 
              |     |     |     |  +--+-------------------+ 
  2634        |     |     |     |     +--- AddIncludeReqF = false;
              |     |     |     |     |  +------------------------------------------------+ 
  2635        |     |     |     |     +--+ if(RegionStartInModuleF &amp;&amp;(ModuleNest == -1)){ | 
              |     |     |     |     |  +--+---------------------------------------------+ 
  2636        |     |     |     |     |     +--- // モジュール内にセットの場合、モジュール出現まで待つ
              |     |     |     |     |   +-+---+ 
  2637        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-+---+ 
              |     |     |     |     |   +-+-------+ 
  2637        |     |     |     |     |   |  else{  | 
              |     |     |     |     |   +-+-------+ 
  2638        |     |     |     |     |     +--- TokenPos = i;
  2639        |     |     |     |     |     +--- InsertIncludePosList-&gt;Add((void *)(long)TokenPos);
              |     |     |     |     |     |  +------------------+ 
  2640        |     |     |     |     |     +--+ if(!ContainsF){  | 
              |     |     |     |     |     |  +--+---------------+ 
  2641        |     |     |     |     |     |     +--- // Containsがなければ追加する。
  2642        |     |     |     |     |     |     +--- InsertIncludePosList-&gt;Add((void *)(long)TokenPos);
              |     |     |     |     |     |   +-+---+ 
  2643        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |  +------------------------------------------------------------------+ 
  2644        |     |     |     |     |     +--+ if(RegionStartInModuleF){ // モジュール内であれば、１つで終了。  | 
              |     |     |     |     |     |  +--+---------------------------------------------------------------+ 
              |     |     |     |     |     |     |  +------------+ 
  2645        |     |     |     |     |     |     +--+ return 1;  | 
              |     |     |     |     |     |     |  +------------+ 
              |     |     |     |     |     |   +-+---+ 
  2646        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |   +-+---+ 
  2647        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
  2648        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
  2649        |     |     |     +--- ContainsF = false;
              |     |     |   +-+---+ 
  2650        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +------------------------------------+ 
  2651        |     |     +--+ for(; i &lt; TokenList-&gt;Count ;i++){  | 
              |     |     |  +--+---------------------------------+ 
  2652        |     |     |     +--- Token2 = (TToken *)TokenList-&gt;Items[i];
              |     |     |     |  +------------------------------------+ 
  2653        |     |     |     +--+ if(Token2-&gt;TokId == tid_LineEnd){  | 
              |     |     |     |  +--+---------------------------------+ 
              |     |     |     |     |  +----------------------------------------------------------------+ 
  2654        |     |     |     |     +--+ break; // LineEndまでスキップ END TYPE , END FUNCTION 等の対応 | 
              |     |     |     |     |  +----------------------------------------------------------------+ 
              |     |     |     |   +-+---+ 
  2655        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
  2656        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +------------------------------+ 
  2657        |     |     +--+ if(ModuleNest == NestLevel){ | 
              |     |     |  +--+---------------------------+ 
  2658        |     |     |     +--- ModuleNest = -1;
              |     |     |   +-+---+ 
  2659        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------+ 
  2660        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +---------------------------------------+ 
  2661        |     |     |  case tid_CONTAINS:      // CONTAINS  | 
              |     |     +---------------------------------------+ 
  2662        |     |     +--- ContainsF = true;
              |     |     |  +--------+ 
  2663        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-----------+ 
  2664        |     |     |  default: | 
              |     |     +-----------+ 
              |     |     |  +--------+ 
  2665        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
  2666        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------+ 
  2667        |     +--+ if(Token-&gt;Script != NULL){ | 
              |     |  +--+-------------------------+ 
  2668        |     |     +--- Script = (TScript *)Token-&gt;Script;
              |     |     |  +--------------------------------------------------------+ 
  2669        |     |     +--+ if(Script-&gt;ScRegion == scr_start){  // リージョン開始  | 
              |     |     |  +--+-----------------------------------------------------+ 
  2670        |     |     |     +--- AddIncludeReqF = true;
              |     |     |   +-+---+ 
  2671        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+---------------------------------------------------+ 
  2671        |     |     |   |  else if(Script-&gt;ScType == sct_ATExec){ // ATExec() | 
              |     |     |   +-+---------------------------------------------------+ 
  2672        |     |     |     +--- AddIncludeReqF = true;
              |     |     |   +-+---+ 
  2673        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  2674        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  2675        |   |  }  | 
              |   +-----+ 
              |  +----------------------+ 
  2676        +--+ if(AddIncludeReqF){  | 
              |  +--+-------------------+ 
  2677        |     +--- AddIncludeReqF = false;
  2678        |     +--- TokenPos = TokenList-&gt;Count-1;
  2679        |     +--- InsertIncludePosList-&gt;Add((void *)(long)TokenPos);
              |   +-+---+ 
  2680        |   |  }  | 
              |   +-----+ 
              |  +------------+ 
  2681        +--+ return 0;  | 
              |  +------------+ 
            +-+---+ 
  2682      |  }  | 
            +-----+ 
</pre>


</body>
</html>
