
<html>
<head>
<title>GetDefStr_Fortran メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.11.4. GetDefStr_Fortran メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>GetDefStr_Fortran</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>pass2.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>2536</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TValData</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>public</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>string GetDefStr_Fortran ( )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>変数の定義文字列を返す。Fortran言語用</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap>定義文字列</td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap></td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap></td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_5_4.htm">TScript::GetATExecArgStr</a></td>
<td nowrap><a href="5_4.htm">pass3.cpp</a></td>
<td nowrap><a href="16_5_4.htm">663</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_10_32.htm">TTuneRegion::OutputAutoExecCode_Fortran</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_32.htm">2878</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_10_34.htm">TTuneRegion::OutputExecCode_Fortran</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_34.htm">7321</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap><a href="16_10_36.htm">TTuneRegion::OutputLoopFusionExecCode_Fortran</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_36.htm">8004</a></td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap><a href="16_10_51.htm">TTuneRegion::OutputUnrollExecCode_Fortran</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_51.htm">8599</a></td>
</tr>
</table>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>Trim</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>105</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>find</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap>length</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
</table>

<p></p>
参照外部変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>MainF</td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap>53</td>
</tr>
</table>

<p></p>
参照メンバ変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TValData::DataType</td>
<td nowrap><a href="5_11.htm">pass2.h</a></td>
<td nowrap>125</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>TValData::DefPos</td>
<td nowrap><a href="5_11.htm">pass2.h</a></td>
<td nowrap>137</td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap>TValData::DefPosE</td>
<td nowrap><a href="5_11.htm">pass2.h</a></td>
<td nowrap>134</td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>TValData::DefPosS</td>
<td nowrap><a href="5_11.htm">pass2.h</a></td>
<td nowrap>132</td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>TValData::DefStr1</td>
<td nowrap><a href="5_11.htm">pass2.h</a></td>
<td nowrap>129</td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap>TValData::DefStr2</td>
<td nowrap><a href="5_11.htm">pass2.h</a></td>
<td nowrap>130</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_9_1.htm">TToken</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="16_9_1.htm">294</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +--------------------------------------+ 
  2536  +--+ string TValData::GetDefStr_Fortran() | 
  2537     | {                                    | 
           +--+-----------------------------------+ 
  2538        +--- int j;
  2539        +--- string s;
  2540        +--- TToken *Token;
  2541        |    
  2542        +--- s = &quot;&quot;;
              |  +--------------------+ 
  2543        +--+ if(DefStr1 != &quot;&quot;){ | 
              |  +--+-----------------+ 
  2544        |     +--- s = Trim(DefStr1 + DefStr2);
  2545        |     +--- // 変数が最初に出現する位置 DefPosから前にスキャンして、
  2546        |     |    // 変数や関数以外が現れる前に改行があれば、改行＋空白を含んだDefStr1を使用し 
  2547        |     |    // 元のソースに近い形にする。                                                
              |     |  +------------------------------------+ 
  2548        |     +--+ for(j = DefPos-1 ; j &gt;= 0 ; j--){  | 
              |     |  +--+---------------------------------+ 
  2549        |     |     +--- Token = (TToken *)MainF-&gt;TokenList-&gt;Items[j];
              |     |     |  +------------------------------------------------------------+ 
  2550        |     |     +--+ if((Token-&gt;TokId == tid_Val)||(Token-&gt;TokId == tid_Func)){ | 
              |     |     |  +--+---------------------------------------------------------+ 
              |     |     |     |  +--------+ 
  2551        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
  2552        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +----------------------------------+ 
  2553        |     |     +--+ if(Token-&gt;TokId == tid_LineEnd){ | 
              |     |     |  +--+-------------------------------+ 
              |     |     |     |  +------------------------------------------+ 
  2554        |     |     |     +--+ if(DefStr1.find('\n') == string::npos){  | 
              |     |     |     |  +--+---------------------------------------+ 
  2555        |     |     |     |     +--- s = &quot;\n&quot;+ DefStr1+Trim(DefStr2);
              |     |     |     |   +-+---+ 
  2556        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+-------+ 
  2556        |     |     |     |   |  else{  | 
              |     |     |     |   +-+-------+ 
  2557        |     |     |     |     +--- s = DefStr1+Trim(DefStr2);
              |     |     |     |   +-+---+ 
  2558        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
  2559        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  2560        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------------------+ 
  2561        |     +--+ if((s == &quot;&quot;)||(s[s.length()-1] != '*')){ | 
              |     |  +--+---------------------------------------+ 
  2562        |     |     +--- s = s+ &quot; &quot;;
              |     |   +-+---+ 
  2563        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  2564        |   |  }  | 
              |   +-+---+ 
              |   +-+-------------------------+ 
  2564        |   |  else if(DefPosS != -1){  | 
              |   +-+-------------------------+ 
              |     |  +----------------------------------------+ 
  2565        |     +--+ for(j = DefPosS ; j &lt; DefPosE ; j++){  | 
              |     |  +--+-------------------------------------+ 
  2566        |     |     +--- Token = (TToken *)MainF-&gt;TokenList-&gt;Items[j];
              |     |     |  +----------------------------------------------------------------------+ 
  2567        |     |     +--+ if((Token-&gt;TokId == tid_Kannma)&amp;&amp;(j+1 &lt; DefPosE)&amp;&amp;                   | 
  2568        |     |     |  |     (((TToken *)MainF-&gt;TokenList-&gt;Items[j+1])-&gt;TokId == tid_SAVE)){  | 
              |     |     |  +--+-------------------------------------------------------------------+ 
  2569        |     |     |     +--- // , Save はスキップする。
  2570        |     |     |     +--- j++;
              |     |     |     |  +------------+ 
  2571        |     |     |     +--+ continue;  | 
              |     |     |     |  +------------+ 
              |     |     |   +-+---+ 
  2572        |     |     |   |  }  | 
              |     |     |   +-----+ 
  2573        |     |     +--- s += Token-&gt;OrgStr;
              |     |   +-+---+ 
  2574        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  2575        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
  2575        |   |  else{  | 
              |   +-+-------+ 
  2576        |     +--- // 定義文字がない場合は、暗黙の了解として作成して返す。
  2577        |     |    // 先頭の空白は、６文字（デフォルト）とする。            
              |     |  +--------------------+ 
  2578        |     +--+ switch(DataType){  | 
              |     |  +--+-----------------+ 
              |     |     +---------------+ 
  2579        |     |     |  case dt_Int: | 
              |     |     +---------------+ 
  2580        |     |     +--- s += &quot;integer&quot;;
              |     |     |  +--------+ 
  2581        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-----------------+ 
  2582        |     |     |  case dt_Real:  | 
              |     |     +-----------------+ 
  2583        |     |     +--- s += &quot;real&quot;;
              |     |     |  +--------+ 
  2584        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-----------------+ 
  2585        |     |     |  case dt_Char:  | 
              |     |     +-----------------+ 
  2586        |     |     +--- s += &quot;character&quot;;
              |     |     |  +--------+ 
  2587        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-----------------+ 
  2588        |     |     |  case dt_Logic: | 
              |     |     +-----------------+ 
  2589        |     |     +--- s += &quot;logical&quot;;
              |     |     |  +--------+ 
  2590        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-------------------+ 
  2591        |     |     |  case dt_Complex: | 
              |     |     +-------------------+ 
  2592        |     |     +--- s += &quot;complex&quot;;
              |     |     |  +--------+ 
  2593        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |     +-----------+ 
  2594        |     |     |  default: | 
              |     |     +-----------+ 
              |     |     |  +------------+ 
  2595        |     |     +--+ return &quot;&quot;; | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
  2596        |     |   |  }  | 
              |     |   +-----+ 
  2597        |     +--- s = &quot;      &quot;+s;
              |   +-+---+ 
  2598        |   |  }  | 
              |   +-----+ 
              |  +------------+ 
  2599        +--+ return s;  | 
              |  +------------+ 
            +-+---+ 
  2600      |  }  | 
            +-----+ 
</pre>


</body>
</html>
