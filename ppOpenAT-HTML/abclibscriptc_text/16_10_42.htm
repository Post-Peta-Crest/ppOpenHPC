
<html>
<head>
<title>OutputSetParmSrcCode メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.10.42. OutputSetParmSrcCode メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>OutputSetParmSrcCode</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>TuneRegion.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>11609</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TTuneRegion</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>public</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>void OutputSetParmSrcCode ( FILE * fp , string IndentStr )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>SetParmコードを出力</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap></td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap>fp  出力先ファイルポインタ<br>IndentStr   インデント文字列</td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap></td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_4_9.htm">TPass5::MakeFunctionCode_C</a></td>
<td nowrap><a href="5_6.htm">pass5.cpp</a></td>
<td nowrap><a href="16_4_9.htm">1592</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_10_43.htm">TTuneRegion::OutputSrcCode</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_43.htm">11776</a></td>
</tr>
</table>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_5_4.htm">TScript::GetATExecArgStr</a></td>
<td nowrap><a href="5_4.htm">pass3.cpp</a></td>
<td nowrap><a href="16_5_4.htm">663</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_10_18.htm">TTuneRegion::GetPrePostBPSetSubregionStr</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_18.htm">12522</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="31_21.htm">SepLongStr</a></td>
<td nowrap><a href="5_4.htm">pass3.cpp</a></td>
<td nowrap><a href="31_21.htm">950</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>IntToStr</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>107</td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>Trim</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>105</td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap>c_str</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>find</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>fprintf</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>replace</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
</table>

<p></p>
参照外部変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>MainF</td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap>53</td>
</tr>
</table>

<p></p>
参照メンバ変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TTuneRegion::BaseValList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>216</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>TTuneRegion::CaseCount</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>209</td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap>TTuneRegion::FittingDspline</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>248</td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>TTuneRegion::Name</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>192</td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>TTuneRegion::TuneGroup</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>195</td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap>TTuneRegion::TuneGroupName</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>196</td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>TTuneRegion::ValDataList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>188</td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>TTuneRegion::variedFromValue</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>235</td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>TTuneRegion::variedStepValue</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>237</td>
</tr>
<tr>
<td nowrap>10</td>
<td nowrap>TTuneRegion::variedToValue</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>236</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_5_1.htm">TScript</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_12.htm">pass3.h</a></td>
<td nowrap><a href="16_5_1.htm">209</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +--------------------------------------------------------------------+ 
 11609  +--+ void TTuneRegion::OutputSetParmSrcCode(FILE *fp,string IndentStr)  | 
 11610     | {                                                                  | 
           +--+-----------------------------------------------------------------+ 
 11611        +--- string s,ValName;
 11612        +--- string BaseValName;
 11613        +--- string ArgStr;
 11614        +--- string s1;
 11615        |    
              |  +----------------------------------------+ 
 11616        +--+ if(MainF-&gt;Call_ATExec_Script == NULL){ | 
              |  +--+-------------------------------------+ 
 11617        |     +--- TScript *Script = new TScript(MainF-&gt;TokenList,0,NULL,ValDataList);
 11618        |     +--- ArgStr = Script-&gt;GetATExecArgStr(false,&quot;&quot;,&quot;&quot;);
 11619        |     +--- delete Script;
              |   +-+---+ 
 11620        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
 11620        |   |  else{  | 
              |   +-+-------+ 
 11621        |     +--- ArgStr = MainF-&gt;Call_ATExec_Script-&gt;GetATExecArgStr(false,&quot;&quot;,&quot;&quot;);
              |   +-+---+ 
 11622        |   |  }  | 
              |   +-----+ 
 11623        +--- BaseValName = &quot;0&quot;;
              |  +------------------------------+ 
 11624        +--+ if(BaseValList-&gt;Count &gt; 0){  | 
              |  +--+---------------------------+ 
 11625        |     +--- ValName = BaseValList-&gt;Strings[0];
              |     |  +--------------------------+ 
 11626        |     +--+ if(Trim(ValName) != &quot;&quot;){ | 
              |     |  +--+-----------------------+ 
 11627        |     |     +--- BaseValName = ValName;
              |     |   +-+---+ 
 11628        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
 11629        |   |  }  | 
              |   +-----+ 
              |  +------------------------------------------------+ 
 11630        +--+ if(MainF-&gt;SrcCodeType == MainF-&gt;sctFortran90){ | 
              |  +--+---------------------------------------------+ 
 11631        |     +--- #if 1
 11632        |     +--- s = &quot;      ctmp = \&quot;&quot;+ Name + &quot;\&quot;\n&quot;;
 11633        |     +--- s1 = SepLongStr(s);
 11634        |     +--- s = &quot;      call OAT_SetParm(&quot;+ IntToStr(TuneGroup+1);
 11635        |     +--- s += &quot;,ctmp&quot;;
 11636        |     +--- s += &quot;,&quot;+BaseValName;
 11637        |     +--- s += &quot;,iusw1_&quot;+Name+ArgStr+&quot;)\n&quot;;   // 複数変数対応の unroll
 11638        |     +--- s = s1 + SepLongStr(s);
 11639        |     +--- #else
 11640        |     +--- s = &quot;      call OAT_SetParm(&quot;+ IntToStr(TuneGroup+1);
 11641        |     +--- s += &quot;,\&quot;&quot;+ Name + &quot;\&quot;&quot;;
 11642        |     +--- s += &quot;,&quot;+BaseValName;
 11643        |     +--- s += &quot;,iusw1_&quot;+Name+ArgStr+&quot;)\n&quot;;   // 複数変数対応の unroll
 11644        |     +--- s = SepLongStr(s);
 11645        |     +--- #endif
              |   +-+---+ 
 11646        |   |  }  | 
              |   +-+---+ 
              |   +-+---------------------------------------------+ 
 11646        |   |  else if(MainF-&gt;SrcCodeType == MainF-&gt;sctC){  | 
              |   +-+---------------------------------------------+ 
 11647        |     +--- #if 1
 11648        |     +--- s = IndentStr+&quot;\tOAT_SetParm(&quot;+ IntToStr(TuneGroup+1);
 11649        |     +--- s += &quot;,\&quot;&quot;+ Name + &quot;\&quot;&quot;;
 11650        |     +--- s += &quot;,&amp;OAT_iusw1_&quot;+Name+ArgStr+&quot;);\n&quot;; // 複数変数対応の unrollとなる。
 11651        |     +--- s = SepLongStr(s);
 11652        |     +--- #else
 11653        |     +--- s = IndentStr+&quot;\tOAT_SetParm(&quot;+ IntToStr(TuneGroup+1);
 11654        |     +--- s += &quot;,\&quot;&quot;+ Name + &quot;\&quot;&quot;;
 11655        |     +--- s += &quot;,&quot;+BaseValName;
 11656        |     +--- s += &quot;,&amp;OAT_iusw1_&quot;+Name+ArgStr+&quot;);\n&quot;;
 11657        |     +--- s = SepLongStr(s);
 11658        |     +--- #endif
              |   +-+---+ 
 11659        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
 11659        |   |  else{  | 
              |   +-+-------+ 
 11660        |     +--- s = &quot;      call OAT_SetParm(&quot;+ IntToStr(TuneGroup+1);
 11661        |     +--- s += &quot;,\&quot;&quot;+ Name + &quot;\&quot;&quot;;
 11662        |     +--- s += &quot;,&quot;+BaseValName;
 11663        |     +--- //      s += &quot;,iusw1_&quot;+Name+&quot;);\n&quot;; // 複数変数対応の unrollとなる。
 11664        |     +--- s += &quot;,iusw1_&quot;+Name+ArgStr+&quot;)\n&quot;;   // 複数変数対応の unroll 2015/02/28
 11665        |     +--- s = SepLongStr(s);
              |   +-+---+ 
 11666        |   |  }  | 
              |   +-----+ 
 11667        +--- #if 1
 11668        +--- // Pre BPset , Post BPset の行を前後に挿入する。TuneRegion範囲が対象
 11669        +--- s = GetPrePostBPSetSubregionStr(0) + s;
 11670        +--- s = s + GetPrePostBPSetSubregionStr(1);
 11671        +--- #endif
 11672        +--- //d-spline用追加部分
 11673        +--- int CaseArrayCount;
 11674        +--- CaseArrayCount = CaseCount;
 11675        |    
 11676        +--- /***********************************************************************************************************************************************************/
 11677        |    //                                                                                                                                                             
 11678        |    //Kogakuin Irie                                                                                                                                                
 11679        |    //Fortran90にd-Splineを対応させるための変更，および2次元用追加部分                                                                                             
 11680        |    //既存のコードはコメントアウト                                                                                                                                 
 11681        |    //                                                                                                                                                             
 11682        +--- //  if(FittingDynamic == 1){
 11683        |    //      fprintf(fp,&quot;\tdouble t1,t2;\n//%s\tdynamicDspline(%d,&amp;OAT_iusw1_&quot;,s.c_str(),CaseArrayCount); 
 11684        |    //                                                                                                   
 11685        |    //      s = Name;                                                                                    
 11686        |    //      fprintf(fp,&quot;%s,1,0);\n\tt1 = OAT_Wtime();\n&quot;,s.c_str() );                                    
 11687        |    //                                                                                                   
 11688        |    //                                                                                                   
 11689        |    //  }                                                                                                
 11690        |                                                                                                         
              |  +----------------------------------------------------+ 
 11691        +--+ if(TuneGroup == tgDynamic &amp;&amp; FittingDspline != 0){ | 
              |  +--+-------------------------------------------------+ 
              |     |  +--------------------------+ 
 11692        |     +--+ if(FittingDspline == 1){ | 
              |     |  +--+-----------------------+ 
              |     |     |  +----------------------------------------+ 
 11693        |     |     +--+ if(MainF-&gt;SrcCodeType == MainF-&gt;sctC){ | 
              |     |     |  +--+-------------------------------------+ 
 11694        |     |     |     +--- fprintf(fp,&quot;\tdouble t1,t2;\n/*%s*/\tdynamicDspline%s%s(%d,&amp;OAT_iusw1_&quot;,s.c_str(),TuneGroupName.c_str(),Name.c_str(),CaseArrayCount);
 11695        |     |     |     |    
 11696        |     |     |     +--- s = Name;
 11697        |     |     |     +--- fprintf(fp,&quot;%s,1,0);\n\tt1 = OAT_Wtime();\n&quot;,s.c_str() );
              |     |     |   +-+---+ 
 11698        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-----------------------------------------------------+ 
 11699        |     |     |   |  else if(MainF-&gt;SrcCodeType == MainF-&gt;sctFortran90){  | 
              |     |     |   +-+-----------------------------------------------------+ 
 11700        |     |     |     +--- int index;
 11701        |     |     |     +--- /*OAT_SetParmをコメントアウトするための処理*/
 11702        |     |     |     +--- index = s.find(&quot;\n&quot;);
 11703        |     |     |     +--- s.replace(index,2,&quot;\n!&quot;);
 11704        |     |     |     +--- /*OAT_SetParmをコメントアウトここまで*/
 11705        |     |     |     +--- fprintf(fp,&quot;!%s      call dynamicDspline%s%s(%d,iusw1_&quot;,s.c_str(),TuneGroupName.c_str(),Name.c_str(),CaseArrayCount);
 11706        |     |     |     |    
 11707        |     |     |     +--- s = Name;
 11708        |     |     |     +--- fprintf(fp,&quot;%s,1,0.0d0)\n      t1 = omp_get_wtime()\n&quot;,s.c_str() );
              |     |     |   +-+---+ 
 11709        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
 11710        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------------------------------+ 
 11711        |     |   |  else if(FittingDspline == 2){  | 
              |     |   +-+-------------------------------+ 
 11712        |     |     +--- int CaseArrayCount2[2];
 11713        |     |     +--- CaseArrayCount2[0] = (int)( (variedToValue[0] - variedFromValue[0]) / variedStepValue[0] + 1 );
 11714        |     |     +--- CaseArrayCount2[1] = (int)( (variedToValue[1] - variedFromValue[1]) / variedStepValue[1] + 1 );
 11715        |     |     |    
              |     |     |  +----------------------------------------+ 
 11716        |     |     +--+ if(MainF-&gt;SrcCodeType == MainF-&gt;sctC){ | 
              |     |     |  +--+-------------------------------------+ 
 11717        |     |     |     +--- fprintf(fp, &quot;\tdouble t1,t2;\n/*%s*/\tdynamicDspline2%s%s(%d,%d,%d,&amp;OAT_iusw1_&quot;,s.c_str(),TuneGroupName.c_str(),
 11718        |     |     |     |        Name.c_str(),CaseArrayCount,CaseArrayCount2[0],CaseArrayCount2[1]);                                          
 11719        |     |     |     |    
 11720        |     |     |     +--- s = Name;
 11721        |     |     |     +--- fprintf(fp,&quot;%s,1,0);\n\tt1 = OAT_Wtime();\n&quot;,s.c_str() );
              |     |     |   +-+---+ 
 11722        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-----------------------------------------------------+ 
 11723        |     |     |   |  else if(MainF-&gt;SrcCodeType == MainF-&gt;sctFortran90){  | 
              |     |     |   +-+-----------------------------------------------------+ 
 11724        |     |     |     +--- int index;
 11725        |     |     |     +--- /*OAT_SetParmをコメントアウトするための処理*/
 11726        |     |     |     +--- index = s.find(&quot;\n&quot;);
 11727        |     |     |     +--- s.replace(index,2,&quot;\n!&quot;);
 11728        |     |     |     +--- /*OAT_SetParmをコメントアウトここまで*/
 11729        |     |     |     +--- fprintf(fp,&quot;!%s      call dynamicDspline2%s%s(%d,%d,%d,iusw1_&quot;,s.c_str(),TuneGroupName.c_str(),Name.c_str(),
 11730        |     |     |     |        CaseArrayCount,CaseArrayCount2[0],CaseArrayCount2[1]);                                                   
 11731        |     |     |     |    
 11732        |     |     |     +--- s = Name;
 11733        |     |     |     +--- fprintf(fp,&quot;%s,1,0.0d0)\n      t1 = omp_get_wtime()\n&quot;,s.c_str() );
              |     |     |   +-+---+ 
 11734        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
 11735        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
 11736        |   |  }  | 
              |   +-----+ 
 11737        +--- //
 11738        |    //ここまで                                                                                                                                                     
 11739        |    //                                                                                                                                                             
 11740        |    /***********************************************************************************************************************************************************/  
              |   +-+-------+ 
 11741        |   |  else{  | 
              |   +-+-------+ 
 11742        |     +--- fprintf(fp,&quot;%s&quot;,s.c_str()); //既存部分
              |   +-+---+ 
 11743        |   |  }  | 
              |   +-----+ 
 11744        +--- //d-spline用追加部分　ここまで　既存の部分をelseで囲っている
            +-+---+ 
 11745      |  }  | 
            +-----+ 
</pre>


</body>
</html>
