
<html>
<head>
<title>TTuneRegion メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.10.54. TTuneRegion メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>TTuneRegion</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>TuneRegion.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>67</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TTuneRegion</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>public</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>TTuneRegion ( TPass4 * aPass4 , int Pos )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>TRuneReginクラスの生成</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap></td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap>aPass4  呼び出し元パス４<br>Pos 開始位置</td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap></td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TStringList::AddObject</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>84</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_2_6.htm">TMainF::ErrMessage</a></td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap><a href="16_2_6.htm">767</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_10_26.htm">TTuneRegion::MakeLoopFusionSplitData</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_26.htm">1313</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap><a href="16_10_28.htm">TTuneRegion::MakeSelectData</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_28.htm">308</a></td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap><a href="16_10_29.htm">TTuneRegion::MakeUnrollData</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_29.htm">1001</a></td>
</tr>
</table>

<p></p>
参照外部変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>MainF</td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap>53</td>
</tr>
</table>

<p></p>
参照メンバ変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TTuneRegion::AccordingStr</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>201</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>TTuneRegion::ArgValList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>207</td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap>TTuneRegion::BaseValList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>216</td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>TTuneRegion::CaseCount</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>209</td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>TTuneRegion::Comment</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>161</td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap>TTuneRegion::DoEndEPos</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>283</td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>TTuneRegion::DoEndSPos</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>282</td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>TTuneRegion::DoStartEPos</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>281</td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>TTuneRegion::DoStartSPos</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>280</td>
</tr>
<tr>
<td nowrap>10</td>
<td nowrap>TTuneRegion::DoStepEPos</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>285</td>
</tr>
<tr>
<td nowrap>11</td>
<td nowrap>TTuneRegion::DoStepSPos</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>284</td>
</tr>
<tr>
<td nowrap>12</td>
<td nowrap>TTuneRegion::DoToken</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>278</td>
</tr>
<tr>
<td nowrap>13</td>
<td nowrap>TTuneRegion::DoValToken</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>279</td>
</tr>
<tr>
<td nowrap>14</td>
<td nowrap>TTuneRegion::FittingDegree</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>253</td>
</tr>
<tr>
<td nowrap>15</td>
<td nowrap>TTuneRegion::FittingDspline</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>248</td>
</tr>
<tr>
<td nowrap>16</td>
<td nowrap>TTuneRegion::FittingDynamic</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>249</td>
</tr>
<tr>
<td nowrap>17</td>
<td nowrap>TTuneRegion::FittingType</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>251</td>
</tr>
<tr>
<td nowrap>18</td>
<td nowrap>TTuneRegion::GPUOption</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>260</td>
</tr>
<tr>
<td nowrap>19</td>
<td nowrap>TTuneRegion::Number</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>205</td>
</tr>
<tr>
<td nowrap>20</td>
<td nowrap>TTuneRegion::OffsetStr</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>214</td>
</tr>
<tr>
<td nowrap>21</td>
<td nowrap>TTuneRegion::ParamValList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>220</td>
</tr>
<tr>
<td nowrap>22</td>
<td nowrap>TTuneRegion::Pass4</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>145</td>
</tr>
<tr>
<td nowrap>23</td>
<td nowrap>TTuneRegion::RotaionOrderList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>295</td>
</tr>
<tr>
<td nowrap>24</td>
<td nowrap>TTuneRegion::SampledList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>254</td>
</tr>
<tr>
<td nowrap>25</td>
<td nowrap>TTuneRegion::SplitPointCopyDef_EndPos</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>266</td>
</tr>
<tr>
<td nowrap>26</td>
<td nowrap>TTuneRegion::SplitPointCopyDef_StartPos</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>265</td>
</tr>
<tr>
<td nowrap>27</td>
<td nowrap>TTuneRegion::SubRegionList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>211</td>
</tr>
<tr>
<td nowrap>28</td>
<td nowrap>TTuneRegion::TokenEndPos</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>190</td>
</tr>
<tr>
<td nowrap>29</td>
<td nowrap>TTuneRegion::TokenList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>187</td>
</tr>
<tr>
<td nowrap>30</td>
<td nowrap>TTuneRegion::TokenStartPos</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>189</td>
</tr>
<tr>
<td nowrap>31</td>
<td nowrap>TTuneRegion::TuneGroup</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>195</td>
</tr>
<tr>
<td nowrap>32</td>
<td nowrap>TTuneRegion::TuneGroupName</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>196</td>
</tr>
<tr>
<td nowrap>33</td>
<td nowrap>TTuneRegion::TuneKind</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>197</td>
</tr>
<tr>
<td nowrap>34</td>
<td nowrap>TTuneRegion::UndefinedArgValList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>208</td>
</tr>
<tr>
<td nowrap>35</td>
<td nowrap>TTuneRegion::UseAccordingF</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>199</td>
</tr>
<tr>
<td nowrap>36</td>
<td nowrap>TTuneRegion::UsedDynPefThis</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>202</td>
</tr>
<tr>
<td nowrap>37</td>
<td nowrap>TTuneRegion::ValBitsList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>210</td>
</tr>
<tr>
<td nowrap>38</td>
<td nowrap>TTuneRegion::ValDataList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>188</td>
</tr>
<tr>
<td nowrap>39</td>
<td nowrap>TTuneRegion::variedCount</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>225</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_1_1.htm">TList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_1_1.htm">57</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_3_1.htm">TPass4</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_13.htm">pass4.h</a></td>
<td nowrap><a href="16_3_1.htm">64</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_5_1.htm">TScript</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_12.htm">pass3.h</a></td>
<td nowrap><a href="16_5_1.htm">209</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap><a href="16_6_1.htm">TScValData</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_12.htm">pass3.h</a></td>
<td nowrap><a href="16_6_1.htm">170</a></td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap><a href="16_7_1.htm">TStringList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_7_1.htm">74</a></td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap><a href="16_9_1.htm">TToken</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="16_9_1.htm">294</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +--------------------------------------------------+ 
    67  +--+ TTuneRegion::TTuneRegion(TPass4 *aPass4,int Pos) | 
    68     | {                                                | 
           +--+-----------------------------------------------+ 
    69        +--- TScript *Script;
    70        +--- TToken *Token;
    71        +--- int i,Nest;
    72        +--- int j;
    73        +--- TScValData *ScValData;
    74        |    
              |  +------------------------------------------------+ 
    75        +--+ if(MainF-&gt;SrcCodeType == MainF-&gt;sctFortran77){ | 
              |  +--+---------------------------------------------+ 
    76        |     +--- Comment = 'c';
              |   +-+---+ 
    77        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
    77        |   |  else{  | 
              |   +-+-------+ 
    78        |     +--- Comment = '!';
              |   +-+---+ 
    79        |   |  }  | 
              |   +-----+ 
    80        +--- Pass4 = aPass4;
    81        +--- TokenStartPos = Pos;
    82        +--- TokenList = Pass4-&gt;TokenList;
    83        +--- ValDataList = Pass4-&gt;ValDataList;
    84        +--- ArgValList = new TStringList;   // サブルーチンにする場合の引数リスト
    85        +--- UndefinedArgValList = new TList;            // 定義が見つからない引数データ
    86        +--- BaseValList = new TStringList;  // 基本パラメータ名の変数リスト
    87        +--- ParamValList = new TStringList; // パラメータ文の変数リスト
    88        +--- ValBitsList = new TList;
    89        +--- SubRegionList = new TList;      // サブリージョンリスト TSubRegion クラス
    90        +--- RotaionOrderList = new TList;
    91        +--- UseAccordingF = false;
    92        +--- UsedDynPefThis = false;  // DynPefThisスクリプトが使用された。
    93        +--- Number = 0;
    94        +--- AccordingStr = &quot;&quot;;
    95        +--- OffsetStr = &quot;&quot;;
    96        |    
    97        +--- //d-spline用コード追加部分
    98        +--- FittingDspline = 0;
    99        +--- FittingDynamic = 0;
   100        +--- //d-spline用コード追加部分　ここまで
   101        |                                         
   102        +--- FittingType = 0;        // Type = 0:なし、1:least-square,2:user_defined
   103        +--- FittingDegree = 0;      // 多項式の次数
   104        +--- SampledList = NULL;     // intの形で Sampledの値がセット（実体は、Scriptのデータ）
   105        +--- GPUOption = gpu_option_None;    // GPUオプション なし
   106        +--- SplitPointCopyDef_StartPos = 0;
   107        +--- SplitPointCopyDef_EndPos = 0;
   108        |    
   109        +--- /*****************************************/
   110        |    //                                           
   111        |    //Kogakuin Irie                              
   112        |    //TuneRegion.h内の配列を初期化する処理を追加 
   113        |    //                                           
              |  +------------------------------+ 
   114        +--+ for( i = 0 ; i &lt; 32 ; i++ )  | 
   115        |  | {                            | 
              |  +--+---------------------------+ 
   116        |     +--- DoStartSPos[i] = 0;
   117        |     +--- DoStartEPos[i] = 0;
   118        |     +--- DoEndSPos[i] = 0;
   119        |     +--- DoEndEPos[i] = 0;
   120        |     +--- DoStepSPos[i] = 0;
   121        |     +--- DoStepEPos[i] = 0;
              |   +-+---+ 
   122        |   |  }  | 
              |   +-----+ 
   123        +--- //
   124        |    //ここまで                                   
   125        |    //                                           
   126        |    /*****************************************/  
   127        |                                                 
              |  +------------------------------------+ 
   128        +--+ for(int kk = 0 ; kk &lt; 32 ; kk++){  | 
              |  +--+---------------------------------+ 
   129        |     +--- DoToken[kk] = NULL;
   130        |     +--- DoValToken[kk] = NULL;
              |   +-+---+ 
   131        |   |  }  | 
              |   +-----+ 
   132        +--- Token = (TToken *)TokenList-&gt;Items[Pos];
   133        +--- Script = (TScript *)Token-&gt;Script;
   134        +--- variedCount = 0;
   135        |    
              |  +------------------------------------+ 
   136        +--+ if(Script-&gt;ScType == sct_install){ | 
              |  +--+---------------------------------+ 
   137        |     +--- TuneGroup = tgInstall;
   138        |     +--- TuneGroupName = &quot;Install&quot;;
              |   +-+---+ 
   139        |   |  }  | 
              |   +-+---+ 
              |   +-+---------------------------------------+ 
   139        |   |  else if(Script-&gt;ScType == sct_static){ | 
              |   +-+---------------------------------------+ 
   140        |     +--- TuneGroup = tgStatic;
   141        |     +--- TuneGroupName = &quot;Static&quot;;
              |   +-+---+ 
   142        |   |  }  | 
              |   +-+---+ 
              |   +-+-----------------------------------------+ 
   142        |   |  else if(Script-&gt;ScType == sct_dynamic){  | 
              |   +-+-----------------------------------------+ 
   143        |     +--- TuneGroup = tgDynamic;
   144        |     +--- TuneGroupName = &quot;Dynamic&quot;;
              |   +-+---+ 
   145        |   |  }  | 
              |   +-----+ 
   146        +--- //
   147        |    // region end を探す。（そこまでが、ブロックになる） 
   148        |    // Nestしている場合は、内側は別とする。              
   149        |    //                                                   
   150        +--- TokenEndPos = -1;
   151        +--- Nest = 0;
              |  +--------------------------------------------+ 
   152        +--+ for(i = Pos ; i &lt; TokenList-&gt;Count ; i++){ | 
              |  +--+-----------------------------------------+ 
   153        |     +--- Token = (TToken *)TokenList-&gt;Items[i];
              |     |  +----------------------------+ 
   154        |     +--+ if(Token-&gt;Script == NULL){ | 
              |     |  +--+-------------------------+ 
              |     |     |  +------------+ 
   155        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   156        |     |   |  }  | 
              |     |   +-----+ 
   157        |     +--- Script = (TScript *)Token-&gt;Script;
              |     |  +------------------------------------+ 
   158        |     +--+ if(Script-&gt;ScRegion == scr_start){ | 
              |     |  +--+---------------------------------+ 
   159        |     |     +--- Nest++;
              |     |   +-+---+ 
   160        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+---------------------------------------+ 
   160        |     |   |  else if(Script-&gt;ScRegion == scr_end){  | 
              |     |   +-+---------------------------------------+ 
   161        |     |     +--- Nest--;
              |     |     |  +----------------+ 
   162        |     |     +--+ if(Nest == 0){ | 
              |     |     |  +--+-------------+ 
   163        |     |     |     +--- TokenEndPos = i;
              |     |     |     |  +--------+ 
   164        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
   165        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   166        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   167        |   |  }  | 
              |   +-----+ 
              |  +------------------------+ 
   168        +--+ if(TokenEndPos == -1){ | 
              |  +--+---------------------+ 
   169        |     +--- TokenEndPos = Pos;  // Loop回避のため
   170        |     +--- //      MainF-&gt;err(Pos,&quot;region end が見つかりません。&quot;);
   171        |     +--- MainF-&gt;ErrMessage(Pos,&quot;region end is not found.&quot;);
   172        |     +--- BaseValList-&gt;AddObject(&quot;UndefinedBPSet&quot;,NULL);
              |     |  +----------+ 
   173        |     +--+ return;  | 
              |     |  +----------+ 
              |   +-+---+ 
   174        |   |  }  | 
              |   +-----+ 
              |  +--------------------------------------+ 
   175        +--+ if(Script-&gt;ScAction == sca_unroll){  | 
              |  +--+-----------------------------------+ 
   176        |     +--- TuneKind = tkUnroll;
   177        |     +--- MakeUnrollData(Pos); // Unrollのデータを作成する。
              |   +-+---+ 
   178        |   |  }  | 
              |   +-+---+ 
              |   +-+-----------------------------------------+ 
   178        |   |  else if(Script-&gt;ScAction == sca_select){ | 
              |   +-+-----------------------------------------+ 
   179        |     +--- TuneKind = tkSelect;
   180        |     +--- MakeSelectData(Pos); // Selectのデータを作成する。
              |   +-+---+ 
   181        |   |  }  | 
              |   +-+---+ 
              |   +-+---------------------------------------------------+ 
   181        |   |  else if(Script-&gt;ScAction == sca_loopfusionsplit){  | 
              |   +-+---------------------------------------------------+ 
   182        |     +--- TuneKind = tkLoopFusionSplit;
   183        |     +--- MakeLoopFusionSplitData(Pos); // LoopFusionのデータを作成する。
              |   +-+---+ 
   184        |   |  }  | 
              |   +-+---+ 
              |   +-+---------------------------------------------+ 
   184        |   |  else if(Script-&gt;ScAction == sca_loopfusion){ | 
              |   +-+---------------------------------------------+ 
   185        |     +--- TuneKind = tkLoopFusion;
   186        |     +--- MakeLoopFusionSplitData(Pos); // LoopFusionのデータを作成する。
              |   +-+---+ 
   187        |   |  }  | 
              |   +-+---+ 
              |   +-+---------------------------------------------+ 
   187        |   |  else if(Script-&gt;ScAction == sca_loopsplit){  | 
              |   +-+---------------------------------------------+ 
   188        |     +--- TuneKind = tkLoopSplit;
   189        |     +--- MakeLoopFusionSplitData(Pos); // LoopFusionのデータを作成する。
              |   +-+---+ 
   190        |   |  }  | 
              |   +-+---+ 
              |   +-+-------------------------------------------------+ 
   190        |   |  else if(Script-&gt;ScAction == sca_rotationorder){  | 
              |   +-+-------------------------------------------------+ 
   191        |     +--- TuneKind = tkRotationOrder;
   192        |     +--- MakeLoopFusionSplitData(Pos); // LoopFusionのデータを作成する。
              |   +-+---+ 
   193        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
   193        |   |  else{  | 
              |   +-+-------+ 
   194        |     +--- TuneKind = tkSelect;
   195        |     +--- MakeSelectData(Pos); // Selectのデータを作成する。
              |   +-+---+ 
   196        |   |  }  | 
              |   +-----+ 
   197        +--- //
   198        |    //  リージョン開始直前のスクリプト　BPsetを探す。                      
   199        |    //  BPset (ValNameList)から BaseValNameListを作成する。                
   200        |    //  もし、定義がない場合は、以前との互換性のために N,NX,NY,NZとなる。  
   201        |    //                                                                     
              |  +--------------------------------------+ 
   202        +--+ for(i = TokenEndPos ; i &gt;= 0 ; i--){ | 
              |  +--+-----------------------------------+ 
   203        |     +--- Token = (TToken *)TokenList-&gt;Items[i];
              |     |  +----------------------------+ 
   204        |     +--+ if(Token-&gt;Script == NULL){ | 
              |     |  +--+-------------------------+ 
              |     |     |  +------------+ 
   205        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   206        |     |   |  }  | 
              |     |   +-----+ 
   207        |     +--- Script = (TScript *)Token-&gt;Script;
              |     |  +----------------------------------------------------------------------+ 
   208        |     +--+ if((Script-&gt;ScType == sct_BPset)&amp;&amp;(Script-&gt;ScValDataList != NULL)){  | 
              |     |  +--+-------------------------------------------------------------------+ 
              |     |     |  +------------------------------------------------------+ 
   209        |     |     +--+ for(j = 0 ; j &lt; Script-&gt;ScValDataList-&gt;Count ; j++){ | 
              |     |     |  +--+---------------------------------------------------+ 
   210        |     |     |     +--- ScValData = (TScValData *)Script-&gt;ScValDataList-&gt;Items[j];
   211        |     |     |     +--- BaseValList-&gt;AddObject(ScValData-&gt;Str,(void *)ScValData);
              |     |     |   +-+---+ 
   212        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------+ 
   213        |     |     +--+ break; | 
              |     |     |  +--------+ 
              |     |   +-+---+ 
   214        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   215        |   |  }  | 
              |   +-----+ 
   216        +--- //
   217        |    //  定義がない場合はソースコード上で UndefinedBPSetとしてエラーとする。  
   218        |    //  Select等の場合は定義がなくてもエラーでないため。                     
   219        |    //  検索は行わない。　2012/02/28                                         
   220        |    //                                                                       
              |  +------------------------------+ 
   221        +--+ if(BaseValList-&gt;Count == 0){ | 
              |  +--+---------------------------+ 
   222        |     +--- MainF-&gt;ErrMessage(TokenEndPos,&quot;oat_bpset が見つかりません。&quot;);
   223        |     +--- BaseValList-&gt;AddObject(&quot;UndefinedBPSet&quot;,NULL);
              |   +-+---+ 
   224        |   |  }  | 
              |   +-----+ 
   225        +--- //
   226        |    //  #Pragme OAT allocate()を探して見つかれば設定を行う。 
   227        |    //                                                       
              |  +--------------------------------------+ 
   228        +--+ for(i = 0 ;  i &lt;= TokenEndPos; i++){ | 
              |  +--+-----------------------------------+ 
   229        |     +--- Token = (TToken *)TokenList-&gt;Items[i];
              |     |  +----------------------------+ 
   230        |     +--+ if(Token-&gt;Script == NULL){ | 
              |     |  +--+-------------------------+ 
              |     |     |  +------------+ 
   231        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   232        |     |   |  }  | 
              |     |   +-----+ 
   233        |     +--- Script = (TScript *)Token-&gt;Script;
              |     |  +------------------------------------------------------------------------+ 
   234        |     +--+ if((Script-&gt;ScType == sct_Allocate)&amp;&amp;(Script-&gt;ScValDataList != NULL)){ | 
              |     |  +--+---------------------------------------------------------------------+ 
              |     |     |  +----------------------------------+ 
   235        |     |     +--+ if(MainF-&gt;cc_option_str == &quot;&quot;){  | 
              |     |     |  +--+-------------------------------+ 
   236        |     |     |     +--- GPUOption = gpu_option_None;    // -cc 指定なしの場合は、GPUオプションなし。
              |     |     |     |  +--------+ 
   237        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
   238        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +------------------------------------------------------+ 
   239        |     |     +--+ for(j = 0 ; j &lt; Script-&gt;ScValDataList-&gt;Count ; j++){ | 
              |     |     |  +--+---------------------------------------------------+ 
   240        |     |     |     +--- ScValData = (TScValData *)Script-&gt;ScValDataList-&gt;Items[j];
              |     |     |     |  +------------------------------+ 
   241        |     |     |     +--+ if(ScValData-&gt;Str == &quot;cpu&quot;){ | 
              |     |     |     |  +--+---------------------------+ 
   242        |     |     |     |     +--- GPUOption = gpu_option_CPU;     // GPUオプション CPU
              |     |     |     |   +-+---+ 
   243        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+-----------------------------------+ 
   243        |     |     |     |   |  else if(ScValData-&gt;Str == &quot;gpu&quot;){  | 
              |     |     |     |   +-+-----------------------------------+ 
   244        |     |     |     |     +--- GPUOption = gpu_option_GPU;     // GPUオプション GPU
              |     |     |     |   +-+---+ 
   245        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+-----------------------------------+ 
   245        |     |     |     |   |  else if(ScValData-&gt;Str == &quot;auto&quot;){ | 
              |     |     |     |   +-+-----------------------------------+ 
   246        |     |     |     |     +--- GPUOption = gpu_option_auto;    // GPUオプション auto
              |     |     |     |   +-+---+ 
   247        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+-------+ 
   247        |     |     |     |   |  else{  | 
              |     |     |     |   +-+-------+ 
   248        |     |     |     |     +--- MainF-&gt;ErrMessage(i,&quot;allocate の指定が CPU,GPU,autoのいずれでもありません。&quot;);
              |     |     |     |   +-+---+ 
   249        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   250        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   251        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   252        |   |  }  | 
              |   +-----+ 
   253        +--- //
   254        |    //  GPUOptionがautoの場合は、Case数を２倍にする。 2010/12/29 
   255        |    //                                                           
              |  +------------------------------------------------------------+ 
   256        +--+ if(GPUOption == gpu_option_auto){   // GPUオプション auto  | 
              |  +--+---------------------------------------------------------+ 
   257        |     +--- CaseCount *= 2;
              |   +-+---+ 
   258        |   |  }  | 
              |   +-----+ 
            +-+---+ 
   259      |  }  | 
            +-----+ 
</pre>


</body>
</html>
