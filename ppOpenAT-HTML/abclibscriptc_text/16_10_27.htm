
<html>
<head>
<title>MakeRotaionOrderSrcTokenList メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.10.27. MakeRotaionOrderSrcTokenList メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>MakeRotaionOrderSrcTokenList</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>TuneRegion.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>8515</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TTuneRegion</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>public</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>TList * MakeRotaionOrderSrcTokenList ( )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>RotaionOrder sub regionに合わせて順番を変えたTokenListを作成して返す。</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap></td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap></td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap>元のTokenListを参照して参照の順番を変えたTokenListを作成して返す。<br>参照の順番を変えただけなのでTokData等の実体はTokList内と同じ。</td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_10_36.htm">TTuneRegion::OutputLoopFusionExecCode_Fortran</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_36.htm">8004</a></td>
</tr>
</table>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TList::Add</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>64</td>
</tr>
</table>

<p></p>

<p></p>
参照メンバ変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TTuneRegion::RotaionOrderList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>295</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>TTuneRegion::TokenList</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap>187</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_1_1.htm">TList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_1_1.htm">57</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_9_1.htm">TToken</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="16_9_1.htm">294</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +------------------------------------------------------+ 
  8515  +--+ TList * TTuneRegion::MakeRotaionOrderSrcTokenList()  | 
  8516     | {                                                    | 
           +--+---------------------------------------------------+ 
  8517        +--- TList *NewTokenList;
  8518        +--- int i;
  8519        +--- int RotIdx;
  8520        +--- int *RotationOrderSPos,*RotationOrderEPos;
  8521        +--- int *RotationOrderCurPos;
  8522        +--- TToken *Token;
  8523        +--- bool AddNewTokenF;
  8524        |    
  8525        +--- NewTokenList = new TList;
  8526        |    
  8527        +--- RotationOrderSPos = new int[RotaionOrderList-&gt;Count/2+1];
  8528        +--- RotationOrderEPos = new int[RotaionOrderList-&gt;Count/2+1];
  8529        +--- RotationOrderCurPos = new int[RotaionOrderList-&gt;Count/2+1];
  8530        +--- RotationOrderSPos[0] = 0;
  8531        +--- RotationOrderEPos[0] = 0;
  8532        +--- RotationOrderCurPos[0] = 0;
              |  +----------------------------------------------------+ 
  8533        +--+ for(i = 0 ; i &lt; RotaionOrderList-&gt;Count/2 ; i++){  | 
              |  +--+-------------------------------------------------+ 
  8534        |     +--- RotationOrderSPos[i] = (long)RotaionOrderList-&gt;Items[2*i];
  8535        |     +--- RotationOrderEPos[i] = (long)RotaionOrderList-&gt;Items[2*i+1];
  8536        |     +--- RotationOrderCurPos[i] = RotationOrderSPos[i];
              |   +-+---+ 
  8537        |   |  }  | 
              |   +-----+ 
  8538        +--- //
  8539        |    // 最初のRotationOrder sub regionまで複写  
  8540        |    //                                         
              |  +----------------------------------------------+ 
  8541        +--+ for(i = 0 ; i &lt; RotationOrderSPos[0] ; i++){ | 
              |  +--+-------------------------------------------+ 
  8542        |     +--- NewTokenList-&gt;Add(TokenList-&gt;Items[i]);
              |   +-+---+ 
  8543        |   |  }  | 
              |   +-----+ 
  8544        +--- //
  8545        |    //  それぞれの RotationOrder sub region を行ごとに順番に出力       
  8546        |    //  出力終了（NewTokenListへの追加がなくなった場合）まで繰り返す。 
  8547        |    //                                                                 
  8548        +--- AddNewTokenF = true;
              |  +----------------------+ 
  8549        +--+ while(AddNewTokenF){ | 
              |  +--+-------------------+ 
  8550        |     +--- AddNewTokenF = false;
              |     |  +------------------------------------------------------------------+ 
  8551        |     +--+ for(RotIdx = 0 ; RotIdx &lt; RotaionOrderList-&gt;Count/2 ; RotIdx++){ | 
              |     |  +--+---------------------------------------------------------------+ 
              |     |     |  +----------------------------------------------------------------------------+ 
  8552        |     |     +--+ for(i = RotationOrderCurPos[RotIdx]; i &lt; RotationOrderEPos[RotIdx] ; i++){ | 
              |     |     |  +--+-------------------------------------------------------------------------+ 
  8553        |     |     |     +--- AddNewTokenF = true;
  8554        |     |     |     +--- NewTokenList-&gt;Add(TokenList-&gt;Items[i]);
  8555        |     |     |     +--- Token = (TToken*)TokenList-&gt;Items[i];
              |     |     |     |  +----------------------------------+ 
  8556        |     |     |     +--+ if(Token-&gt;TokId == tid_LineEnd){ | 
              |     |     |     |  +--+-------------------------------+ 
  8557        |     |     |     |     +--- i++;
              |     |     |     |     |  +--------+ 
  8558        |     |     |     |     +--+ break; | 
              |     |     |     |     |  +--------+ 
              |     |     |     |   +-+---+ 
  8559        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
  8560        |     |     |   |  }  | 
              |     |     |   +-----+ 
  8561        |     |     +--- RotationOrderCurPos[RotIdx] = i;
              |     |   +-+---+ 
  8562        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
  8563        |   |  }  | 
              |   +-----+ 
  8564        +--- //
  8565        |    //  残りのTokenListをRotateionOrder sub region の間を除いて複写  
  8566        |    //                                                               
              |  +--------------------------------------------------------------+ 
  8567        +--+ for(i = RotationOrderEPos[0] ; i &lt; TokenList-&gt;Count ; i++){  | 
              |  +--+-----------------------------------------------------------+ 
              |     |  +------------------------------------------------------------------+ 
  8568        |     +--+ for(RotIdx = 0 ; RotIdx &lt; RotaionOrderList-&gt;Count/2 ; RotIdx++){ | 
              |     |  +--+---------------------------------------------------------------+ 
              |     |     |  +------------------------------------------------------------------------+ 
  8569        |     |     +--+ if((i &gt;= RotationOrderSPos[RotIdx])&amp;&amp;(i &lt; RotationOrderEPos[RotIdx])){ | 
              |     |     |  +--+---------------------------------------------------------------------+ 
              |     |     |     |  +--------+ 
  8570        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
  8571        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
  8572        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------------------+ 
  8573        |     +--+ if(RotIdx &lt; RotaionOrderList-&gt;Count/2){  | 
              |     |  +--+---------------------------------------+ 
              |     |     |  +------------------------+ 
  8574        |     |     +--+ continue; // Skip対象  | 
              |     |     |  +------------------------+ 
              |     |   +-+---+ 
  8575        |     |   |  }  | 
              |     |   +-----+ 
  8576        |     +--- NewTokenList-&gt;Add(TokenList-&gt;Items[i]);
              |   +-+---+ 
  8577        |   |  }  | 
              |   +-----+ 
  8578        +--- delete[] RotationOrderSPos;
  8579        +--- delete[] RotationOrderEPos;
              |  +----------------------+ 
  8580        +--+ return NewTokenList; | 
              |  +----------------------+ 
            +-+---+ 
  8581      |  }  | 
            +-----+ 
</pre>


</body>
</html>
