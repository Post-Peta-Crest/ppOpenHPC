
<html>
<head>
<title>pass2.h ò_óùÉ`ÉÉÅ[Ég</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC ÉvÉçÉWÉFÉNÉg</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">5.11. pass2.h ò_óùÉ`ÉÉÅ[Ég</font></td>
</tr>
</table>

<p></p>
<pre>
ÉtÉ@ÉCÉãò_óùÉ`ÉÉÅ[Ég

     1  +--- ÔªÉ\/*=====================================================================*
     2  |     *                                                                     *           
     3  |     *   Software Name : ppOpen-AT                                         *           
     4  |     *         Version : 0.1                                               *           
     5  |     *                                                                     *           
     6  |     *   License                                                           *           
     7  |     *     This file is part of ppOpen-AT.                                 *           
     8  |     *     ppOpen-AT is a free software, you can use it under the terms    *           
     9  |     *     of The MIT License (MIT). See LICENSE file and User's guide     *           
    10  |     *     for more details.                                               *           
    11  |     *                                                                     *           
    12  |     *   ppOpen-HPC project:                                               *           
    13  |     *     Open Source Infrastructure for Development and Execution of     *           
    14  |     *     Large-Scale Scientific Applications on Post-Peta-Scale          *           
    15  |     *     Supercomputers with Automatic Tuning (AT).                      *           
    16  |     *                                                                     *           
    17  |     *   Organizations:                                                    *           
    18  |     *     The University of Tokyo                                         *           
    19  |     *       - Information Technology Center                               *           
    20  |     *       - Atmosphere and Ocean Research Institute (AORI)              *           
    21  |     *       - Graduate School of Interdisciplinary Information Studies    *           
    22  |     *         /Earthquake Research Institute (ERI)                        *           
    23  |     *       - Graduate School of Frontier Science                         *           
    24  |     *     Kyoto University                                                *           
    25  |     *       - Academic Center for Computing and Media Studies             *           
    26  |     *     Japan Agency for Marine-Earth Science and Technology (JAMSTEC)  *           
    27  |     *                                                                     *           
    28  |     *   Sponsorship:                                                      *           
    29  |     *     Japan Science and Technology Agency (JST), Basic Research       *           
    30  |     *     Programs: CREST, Development of System Software Technologies    *           
    31  |     *     for post-Peta Scale High Performance Computing.                 *           
    32  |     *                                                                     *           
    33  |     *   Copyright (c) 2012                                                *           
    34  |     *      Information Technology Center, The University of Tokyo         *           
    35  |     *                                                                     *           
    36  |     *=====================================================================*/          
    37  |     /*----------------------------------------------------------------------------*/  
    38  |    //                                                                                 
    39  |    //  Ê¶ÇËÉíÅ                                                                        
    40  |    //    „Éë„ÇπÔºí„ÄÄ„Éò„ÉÉ„ÉÄ                                                        
    41  |    //                                                                                 
    42  |    //  ‰ΩúÊàêËÄÖ                                                                      
    43  |    //                                                                                 
    44  |    /*----------------------------------------------------------------------------*/   
    45  |                                                                                       
    46  +--- #ifndef pass2H
    47  +--- #define pass2H
    48  +--- //---------------------------------------------------------------------------
    49  |                                                                                   
    50  +--- #include &quot;pass1.h&quot;
    51  |    
    52  +--- void Pass2(TList *TokenList,TList *ValDataList);
    53  +--- int Pass2_Fortran(TList *TokenList,int sPos,TList *ValDataList);
    54  +--- int GetValIdx(TList *ValDataLlst,string ValName,int ModuleIdx);
    55  |    
    56  +--- void AddDataDef_Fortran(TList *TokenList,int sPos,int ePos,TList *ValDataList);
    57  +--- void AddDataDef_C(TList *TokenList,int sPos,int ePos,TList *ValDataList);
    58  |    
    59  +--- #define ARRAY_MAX   8   // ÊúÄÂ§É@ÔºòÊÉÉÅBÂÖÉ„Åæ„ÅÉ@„ÅÉáÈÖçÂàó„ÅÉHÂØÉZÂøú„Åô„Çã„ÄÇ
    60  |                                                                                       
    61  +--- //
    62  |    // Â§âÊï∞„Éá„Éº„ÇÉ\Á®ÉáÈ°û                                                       
    63  |    //                                                                               
    64  |    /*----------------------------------------------------------------------------*/ 
    65  |    //  1.ÊóÅEÊúÉÉË™ûÂêç                                                             
    66  |    //                                                                               
    67  |    //  2.Ê¶ÇËÉíÅ                                                                    
    68  |    //    Â§âÊï∞„ÅÉá„Éá„Éº„ÇÉ\Á®ÉáÈ°û                                                
    69  |    //                                                                               
    70  |    //  3.Ê©üËÉΩË™ÉÉÊòé                                                              
    71  |    //                                                                               
    72  |    //  4.ÂÇôËÄÉ                                                                     
    73  |    //                                                                               
    74  |    /*----------------------------------------------------------------------------*/ 
        |  +----------------------+ 
    75  +--+ enum Enum_DataType{  | 
        |  +--+-------------------+ 
    76  |     +--- dt_Int,
    77  |     |    dt_Real,                           
    78  |     |    dt_Char,                           
    79  |     |    dt_Logic,                          
    80  |     |    dt_Complex,                        
    81  |     |    dt_Float,   // Add 2011/07/27      
    82  |     |    dt_Void,    // Add 2012/02/23      
    83  |     |                                       
    84  |     |    dt_IntFunc,                        
    85  |     |    dt_RealFunc,                       
    86  |     |    dt_CharFunc,                       
    87  |     |    dt_LogicFunc,                      
    88  |     |    dt_ComplexFunc,                    
    89  |     |    dt_FloatFunc,   // Add 2011/07/27  
    90  |     |    dt_VoidFunc,    // Add 2012/02/23  
        |   +-+---+ 
    91  |   |  }; | 
        |   +-----+ 
    92  +--- /*----------------------------------------------------------------------------*/
    93  |    //  1.ÊóÅEÊúÉÉË™ûÂêç                                                                                                             
    94  |    //                                                                                                                               
    95  |    //  2.Ê¶ÇËÉíÅ                                                                                                                    
    96  |    //    FortranÂ§âÊï∞„ÇÉb„ÉÉD„ÇÉP                                                                                                  
    97  |    //    ÊñÅ[„Åó„ÅÑÂ§âÊï∞„Åå„ÇΩ„ÉÉV„ÇÉPÂÜÖ„Å´Ë¶ã„Å§„Åã„Çã„Åî„Å®‰ΩúÊàê„Åï„Çå„Çã„ÄÇÂêå„Åò„É¢„ÇÉN„ÉÅE„ÉÉV„ÉÉH„ÅÉáÂêå„ÅòÂ§âÊï∞„ÅÉbÂêå   
    98  |    //    „ÅòÊâ±„ÅÑ„Å®„ÅÉF„Çã„ÄÇ                                                                                                     
    99  |    //    Â§âÊï∞„Éá„Éº„ÇÉ\ÂÜÖ„Å´„ÅÉb„ÄÅÔÉVÅAÔºÉbÂ§âÊï∞„Åã„Å©„ÅÜ„Åã„ÇÑ„ÄÅÂèÇÁÖÉ@ÂõûÊï∞„ÅÉF„ÅÉD„ÅÉáÊÉÖÂ†ÉA„ÇÇÊ†ÉVÁ¥ç„Åï„Çå„Çã„ÄÇ       
   100  |    //                                                                                                                               
   101  |    //  3.Ê©üËÉΩË™ÉÉÊòé                                                                                                              
   102  |    //                                                                                                                               
   103  |    //  4.ÂÇôËÄÉ                                                                                                                     
   104  |    //                                                                                                                               
   105  |    /*----------------------------------------------------------------------------*/                                                 
        |  +------------------+ 
   106  +--+ class TValData{  | 
        |  +--+---------------+ 
   107  |     |    
        |     +-----------+ 
   108  |     |  public:  | 
        |     +-----------+ 
   109  |     +--- string Str;                     // Â§âÊï∞Âêç
   110  |     |                                                 
   111  |     +--- bool ParamValF;                 // ÂÆöÊï∞ PARAMETER „ÅÉáÂÆöÁÉZÉDÂ§âÊï∞„ÅÉ@„ÅÇ„Çã„Åì„Å®„Çí
   112  |     |                                    // Á§ÉR„Åô„ÄÇ                                              
   113  |     |                                    // „Åü„Å†„Åó„ÄÅint,real ‰ªÅEÂ§ñ„ÅØ„ÄÅÂÉáöÊï∞„ÅÉB„Åó„Å¶„ÅÉb 
   114  |     |                                    // ÊâÉA„Çè„Çå„ÅÉF„ÅÑ„ÄÇ                                    
   115  |     |                                                                                               
   116  |     +--- bool ArrayOrFuncF;              // Â§âÊï∞Âêç„ÅÆÁõÉGÂæå„Å´Ôºà„Åå„ÅÇ„Å£„ÅüÂ†ÉGÂêà„Å´„ÇÉT„ÉÉ„Éà
   117  |     |                                    // „Åï„Çå„Çã„ÄÇ                                              
   118  |     +--- bool ArgF;                      // SUBRUTION,FUNCTION„ÅÉáÂºïÊï∞„ÅÉB„Åó„Å¶‰ΩÉ\ÁîÉB„Åï
   119  |     |                                    // „Çå„Å¶„ÅÑ„Çã„ÄÇ                                   
   120  |     |                                                                                         
   121  |     +--- int ModuleIdx;                  // „ÉÅu„ÇÉN„ÉÅE„ÉÉV„ÉÉHÔºÉDÔΩÑÔÉXò (end„ÅÉ@++)„ÄÄ„ÇÉP„ÇÉE„ÉÉV„Éó
   122  |     |                                    // ÁØÑÂõ≤                                                        
   123  |     +--- int BrNestLevel;                // {} () „ÅÉá„ÉÉÉ„Éô„É´„ÇÅ[„ÉÉÖ„ÉÉV„Éê„É´„Åã„Å©„ÅÜ„Åã„ÅÉáÂàÅAÂÆö„Å´‰ΩÉ\ÁîÉB„ÄÇ
   124  |     |                                                                                                                   
   125  |     +--- Enum_DataType DataType;         // int,real„ÅÉF„ÅÉD„ÅÉá„Éá„Éº„ÇÉ\Á®ÉáÂàÅE
   126  |     +--- int DataLength;                 // real*8 „ÅÉF„ÅÉD„ÅÉá„Éá„Éº„ÇÉ\ÈïÉL„ÇíÁÅAÉR„Åô„ÄÇÂà•ÂÆöÁÉZÉDÊôÇ
   127  |     |                                    // „ÅÉHÂøÖËÉíÅ                                                   
   128  |     |                                                                                                     
   129  |     +--- string DefStr1;                 // &quot;double **&quot; Á≠â„ÅÆ double ÂÆöÁÉZÉDÈÉÉBÂàÜ„ÅÆÊñáÂÉÖóÂàó„ÄÇ
   130  |     +--- string DefStr2;                 // &quot;double **&quot; Á≠â„ÅÆ ** ÂÆöÁÉZÉDÈÉÉBÂàÜ„ÅÆÊñáÂÉÖóÂàó„ÄÇ
   131  |     |                                                                                             
   132  |     +--- int DefPosS;                    // real*8 „ÅÉF„ÅÉD„ÅÉá ÂÆöÁÉZÉDÈÉÉBÂàÜ„ÅÆTokenPos„ÅÉF„ÅÉD
   133  |     |                                    // „ÅÉáÁØÑÂõ≤                                              
   134  |     +--- int DefPosE;                    // real*8 „ÅÉF„ÅÉD„ÅÉá ÂÆöÁÉZÉDÈÉÉBÂàÜ„ÅÆTokenPos„ÅÉF„ÅÉD
   135  |     |                                    // „ÅÉáÁØÑÂõ≤                                              
   136  |     |                                                                                               
   137  |     +--- int DefPos;                     // ÊúÄÂàù„Å´ÂÆöÁÉZÉD„ÅÉ@ÂáÉRÁèÉZ„Åó„ÅüPos
   138  |     +--- int ArrayDefPosS;               // ArrayÂÆöÁÉZÉDÊôÇ„ÅÆTokenPos (N,N) „ÅÉF„ÅÉD„ÅÉáÁØÑ
   139  |     |                                    // ÂõÉC                                              
   140  |     +--- int ArrayDefPosE;               // ArrayÂÆöÁÉZÉDÊôÇ„ÅÆTokenPos (N,N) „ÅÉF„ÅÉD„ÅÉáÁØÑ
   141  |     |                                    // ÂõÉC                                              
   142  |     +--- int RefCount;                   // Â§âÊï∞ÂèÇÁÖßCount
   143  |     +--- int SetCount;                   // Â§âÊï∞Ë®ÉÖÂÆöCount
   144  |     |                                                           
   145  |     +--- double dData;                   // ÂÆöÊï∞„ÅÉáÂ†ÉGÂêà„ÅÆÂÄÅA
   146  |     +--- int ArrayLevel ;                // ÈÖçÂàóÊ¨ÅBÂÖÉÊï∞
   147  |     |                                                         
   148  |     +--- int ArrayStart[ARRAY_MAX];      // ÈÖçÂàóË¶ÅÁÉG†ÈñãÂÉ@ãÁï™ÂèÉL„ÉÉF„ÇÉP„Éà -1„ÅÉbÊúÉFÂÆö
   149  |     +--- int ArrayCount[ARRAY_MAX];      // ÈÖçÂàóË¶ÅÁÉG†ÊïÅ[„ÉÉF„ÇÉP„Éà -1„ÅÉbÊúÉFÂÆö
   150  |     |                                                                                   
   151  |     +--- // UnRollÊôÇ„Å´‰∏ÄÊôÇÁöÑ„ÅÉH‰ΩÉ\ÁîÉB„Åï„Çå„Çã„ÄÇ
   152  |     |    // Ë§áÊï∞„ÅÉáDo(DoValCount)„ÅÉHÂØÉZÂøú„Åô„Çã„Åü„ÇÅ„Å´„ÄÅbit„ÅÉH‰øÉáÊ≠Åv 2004/3/13  
   153  |     |    // RefDoValBits„ÅÉb„ÄÅËÅAáÊï∞„ÅÉáBit„ÅåÔÉVë„Å´„ÅÉF„ÇãÂ†ÉGÂêà„ÇÇ„ÅÇ„Çã„ÄÇ           
   154  |     |    //                                                                                 
   155  |     +--- unsigned int DoValBits;         // DoÂ§âÊï∞ËáÉFË∫ÉH„Åã„Å©„ÅÜ„Åã„ÄÇ
   156  |     +--- unsigned int RefDoValBits;      // DoÂ§âÊï∞‰æùÂÉÖò„Åã„ÅÉD„ÅÜ„Åã„ÄÇ
   157  |     +--- unsigned int DoEndValBits;      // UnRoll„ÅÉáDo„ÅÉáÁµÇ„Çè„ÇäÂÄÅA„ÅÉáÂ§âÊï∞ÔºàÂÉVè„ÅØÔºÉáÔºÉ@Ôºâ
   158  |     |                                                                                                     
   159  |     +--- TValData(string aStr);          // ÁîüÊàê
   160  |     +--- ~TValData();                    // Á†ÉGÊ£Ñ
   161  |     |                                               
   162  |     +--- string ToString();              // ÊñáÂÉÖóÂàó„ÅÉ@ÊÉÖÂ†ÉA„ÇíÊâÄÂæó
   163  |     +--- string GetDefStr_C();
   164  |     +--- string GetDefStr_Fortran();
   165  |     |    
        |   +-+---+ 
   166  |   |  }; | 
        |   +-----+ 
   167  |    
   168  +--- #endif
</pre>


</body>
</html>
