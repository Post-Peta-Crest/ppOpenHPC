
<html>
<head>
<title>CodeGen メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.2.3. CodeGen メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>CodeGen</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>main.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>493</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TMainF</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>public</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>void CodeGen ( )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>コード生成をを行う。各パスを順次に呼び出す。</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap>なし</td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap></td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap></td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="31_10.htm">main</a></td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap><a href="31_10.htm">75</a></td>
</tr>
</table>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TList::Add</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>64</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_2_6.htm">TMainF::ErrMessage</a></td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap><a href="16_2_6.htm">767</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_3_3.htm">TPass4::Exec</a></td>
<td nowrap><a href="5_5.htm">pass4.cpp</a></td>
<td nowrap><a href="16_3_3.htm">138</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap><a href="16_4_6.htm">TPass5::Exec</a></td>
<td nowrap><a href="5_6.htm">pass5.cpp</a></td>
<td nowrap><a href="16_4_6.htm">264</a></td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap><a href="16_12_4.htm">TVisualDM::Exec</a></td>
<td nowrap><a href="5_8.htm">Visual.cpp</a></td>
<td nowrap><a href="16_12_4.htm">63</a></td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap><a href="31_13.htm">Pass1</a></td>
<td nowrap><a href="5_2.htm">pass1.cpp</a></td>
<td nowrap><a href="31_13.htm">79</a></td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap><a href="31_16.htm">Pass2</a></td>
<td nowrap><a href="5_3.htm">pass2.cpp</a></td>
<td nowrap><a href="31_16.htm">87</a></td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap><a href="31_19.htm">Pass3</a></td>
<td nowrap><a href="5_4.htm">pass3.cpp</a></td>
<td nowrap><a href="31_19.htm">69</a></td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap><a href="16_2_9.htm">TMainF::print</a></td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap><a href="16_2_9.htm">716</a></td>
</tr>
<tr>
<td nowrap>10</td>
<td nowrap>FileExists</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>112</td>
</tr>
<tr>
<td nowrap>11</td>
<td nowrap>IntToStr</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>107</td>
</tr>
<tr>
<td nowrap>12</td>
<td nowrap>fclose</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>13</td>
<td nowrap>GetInfo</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>14</td>
<td nowrap>printf</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>15</td>
<td nowrap>ToString</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
</table>

<p></p>

<p></p>
参照メンバ変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TMainF::Call_ATExec_Script</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>104</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>TMainF::CloseReqF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>83</td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap>TMainF::EndF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>84</td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>TMainF::ErrCount</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>80</td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>TMainF::ErrF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>81</td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap>TMainF::LogFp</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>78</td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>TMainF::NotSkipByErrF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>82</td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>TMainF::SrcFileNameList</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>77</td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>TMainF::TokenList</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>109</td>
</tr>
<tr>
<td nowrap>10</td>
<td nowrap>TMainF::TuneRegionList</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>111</td>
</tr>
<tr>
<td nowrap>11</td>
<td nowrap>TMainF::ValDataList</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>110</td>
</tr>
<tr>
<td nowrap>12</td>
<td nowrap>TMainF::VisualF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>85</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_3_1.htm">TPass4</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_13.htm">pass4.h</a></td>
<td nowrap><a href="16_3_1.htm">64</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_4_1.htm">TPass5</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_14.htm">pass5.h</a></td>
<td nowrap><a href="16_4_1.htm">65</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_9_1.htm">TToken</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="16_9_1.htm">294</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap><a href="16_10_1.htm">TTuneRegion</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_15.htm">TuneRegion.h</a></td>
<td nowrap><a href="16_10_1.htm">143</a></td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap><a href="16_11_1.htm">TValData</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_11.htm">pass2.h</a></td>
<td nowrap><a href="16_11_1.htm">106</a></td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap><a href="16_12_1.htm">TVisualDM</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_17.htm">Visual.h</a></td>
<td nowrap><a href="16_12_1.htm">55</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +--------------------------+ 
   493  +--+ void TMainF::CodeGen() { | 
           +--+-----------------------+ 
   494        +--- int i;
   495        +--- string s;
   496        +--- TPass4 *Pass4 = NULL;
   497        +--- TPass5 *Pass5 = NULL;
   498        +--- string DirName, SrcFileName;
   499        |    
   500        +--- ErrCount = 0;
   501        +--- ErrF = false;
              |  +----------------------------------+ 
   502        +--+ if (SrcFileNameList.Count == 0){ | 
              |  +--+-------------------------------+ 
   503        |     +--- print(&quot;SrcFile Open error.&quot;);
              |     |  +----------+ 
   504        |     +--+ return;  | 
              |     |  +----------+ 
              |   +-+---+ 
   505        |   |  }  | 
              |   +-----+ 
   506        +--- print(&quot;**** Start Code Generation ****&quot;);
              |  +----------------------------------------------+ 
   507        +--+ for (i = 0; i &lt; SrcFileNameList.Count; i++){ | 
              |  +--+-------------------------------------------+ 
   508        |     +--- SrcFileNameList.Objects[i] = (void*)(long)TokenList-&gt;Count;
   509        |     +--- // TokenListの開始位置をセット
   510        |     +--- SrcFileName = SrcFileNameList.Strings[i];
   511        |     +--- print(&quot;SrcFile =\&quot;&quot; + SrcFileName + &quot;\&quot;&quot;);
              |     |  +--------------------------------+ 
   512        |     +--+ if (!FileExists(SrcFileName)){ | 
              |     |  +--+-----------------------------+ 
   513        |     |     +--- printf(&quot;SrcFile Open error.\n&quot;);
   514        |     |     +--- print(&quot;**** End Code Generation **** Error !&quot;);
              |     |     |  +----------+ 
   515        |     |     +--+ return;  | 
              |     |     |  +----------+ 
              |     |   +-+---+ 
   516        |     |   |  }  | 
              |     |   +-----+ 
   517        |     +--- print(&quot;Pass1 Start&quot;);
   518        |     +--- TokenList-&gt;Add((void*)new TToken(&quot;&quot;, tid_null)); // 先頭にnullを追加。
   519        |     +--- Pass1(SrcFileName, TokenList); // SrcFileをトークンに解析し、TokenListを生成
   520        |     +--- TokenList-&gt;Add((void*)new TToken(&quot;&quot;, tid_null)); // 最後
   521        |     +--- #if 0   // Pass1の後の表示確認用
   522        |     +--- DispTokenList();
   523        |     +--- #endif
              |   +-+---+ 
   524        |   |  }  | 
              |   +-----+ 
              |  +------------------------------+ 
   525        +--+ if (!ErrF || NotSkipByErrF){ | 
              |  +--+---------------------------+ 
   526        |     +--- print(&quot;Pass2 Start&quot;);
   527        |     +--- Pass2(TokenList, ValDataList); // TokenListから構文解析を行い、ValDataリストを生成
   528        |     +--- #if 0   // Pass2の後の表示確認用
              |     |  +----------------------------------------------+ 
   529        |     +--+ for (int i = 0; i &lt; TokenList-&gt;Count; i++){  | 
              |     |  +--+-------------------------------------------+ 
   530        |     |     +--- string s;
   531        |     |     |    
   532        |     |     +--- s = IntToStr(i) + &quot; [&quot; + ((TToken*)TokenList-&gt;Items[i])
   533        |     |     |        -&gt;Str + &quot;] Id = &quot;                                                      
   534        |     |     |    // + IntToStr(((TToken *)TokenList-&gt;Items[i])-&gt;TokId)                      
   535        |     |     |    + ((TToken*)TokenList-&gt;Items[i])-&gt;GetTokIdStr()                            
   536        |     |     |        + &quot; Line=&quot; + IntToStr(((TToken*)TokenList-&gt;Items[i])-&gt;LineNo)          
   537        |     |     |        + &quot; ModuleIdx=&quot; + IntToStr(((TToken*)TokenList-&gt;Items[i])-&gt;ModuleIdx)  
   538        |     |     |        + &quot; NestLevel=&quot; + IntToStr(((TToken*)TokenList-&gt;Items[i])-&gt;NestLevel)  
   539        |     |     |        + &quot; [&quot; + ((TToken*)TokenList-&gt;Items[i])-&gt;OrgStr + &quot;]&quot;;                 
              |     |     |  +------------------------------------------------+ 
   540        |     |     +--+ if (((TToken*)TokenList-&gt;Items[i])-&gt;LineEndF){ | 
              |     |     |  +--+---------------------------------------------+ 
   541        |     |     |     +--- s += &quot; [LineEnd] &quot;;
              |     |     |   +-+---+ 
   542        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +--------------------------------------------------------+ 
   543        |     |     +--+ if (((TToken*)TokenList-&gt;Items[i])-&gt;TokId == tid_Val){ | 
              |     |     |  +--+-----------------------------------------------------+ 
   544        |     |     |     +--- s += &quot;Val &quot;;
              |     |     |   +-+---+ 
   545        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------------------------------------------------------------+ 
   546        |     |     |   |  else if (((TToken*)TokenList-&gt;Items[i])-&gt;TokId == tid_Func){ | 
              |     |     |   +-+-------------------------------------------------------------+ 
   547        |     |     |     +--- s += &quot;Func &quot;;
              |     |     |   +-+---+ 
   548        |     |     |   |  }  | 
              |     |     |   +-----+ 
   549        |     |     +--- MainF-&gt;print(s);
              |     |   +-+---+ 
   550        |     |   |  }  | 
              |     |   +-----+ 
   551        |     +--- #endif
              |   +-+---+ 
   552        |   |  }  | 
              |   +-----+ 
   553        +--- #if 1   // 変数リスト表示
   554        +--- print(&quot;------ Val List ---------&quot;);
              |  +------------------------------------------------+ 
   555        +--+ for (int i = 0; i &lt; ValDataList-&gt;Count; i++){  | 
              |  +--+---------------------------------------------+ 
   556        |     +--- TValData *ValData = (TValData*)ValDataList-&gt;Items[i];
   557        |     +--- print(IntToStr(i) + &quot;:&quot; + ((TValData*)ValDataList-&gt;Items[i])-&gt;ToString
   558        |     |        () + &quot; DefPos=&quot; + IntToStr(ValData-&gt;DefPos));                      
              |   +-+---+ 
   559        |   |  }  | 
              |   +-----+ 
   560        +--- #endif
   561        +--- // スクリプト解析
              |  +------------------------------+ 
   562        +--+ if (!ErrF || NotSkipByErrF){ | 
              |  +--+---------------------------+ 
   563        |     +--- print(&quot;Pass3 Start&quot;);
   564        |     +--- Pass3(TokenList, ValDataList);
              |   +-+---+ 
   565        |   |  }  | 
              |   +-----+ 
   566        |    
   567        +--- // チューニングリージョン生成
              |  +------------------------------+ 
   568        +--+ if (!ErrF || NotSkipByErrF){ | 
              |  +--+---------------------------+ 
   569        |     +--- print(&quot;Pass4 Start&quot;);
   570        |     +--- Pass4 = new TPass4(TokenList, ValDataList, TuneRegionList);
   571        |     +--- Pass4-&gt;Exec();
              |   +-+---+ 
   572        |   |  }  | 
              |   +-----+ 
   573        +--- #if 1 // 生成されたチューニングリージョンの表示
              |  +------------------------------+ 
   574        +--+ if (!ErrF || NotSkipByErrF){ | 
              |  +--+---------------------------+ 
   575        |     +--- print(&quot;------ Tuning Region -- Count = &quot; + IntToStr(TuneRegionList-&gt;Count)
   576        |     |        );                                                                     
              |     |  +--------------------------------------------------+ 
   577        |     +--+ for (int i = 0; i &lt; TuneRegionList-&gt;Count; i++){ | 
              |     |  +--+-----------------------------------------------+ 
   578        |     |     +--- print(&quot;Tuning Region : &quot; + IntToStr(i));
   579        |     |     +--- print(((TTuneRegion*)TuneRegionList-&gt;Items[i])-&gt;GetInfo());
              |     |   +-+---+ 
   580        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   581        |   |  }  | 
              |   +-----+ 
   582        +--- #endif
   583        +--- // 出力ファイル生成
              |  +----------------------------------+ 
   584        +--+ if (Call_ATExec_Script == NULL){ | 
              |  +--+-------------------------------+ 
   585        |     +--- ErrMessage(-1, &quot;!OAT$ call OAT_ATexec() Script is not found.&quot;);
              |   +-+---+ 
   586        |   |  }  | 
              |   +-----+ 
              |  +------------------------------+ 
   587        +--+ if (!ErrF || NotSkipByErrF){ | 
              |  +--+---------------------------+ 
   588        |     +--- print(&quot;Pass5 Start&quot;);
   589        |     +--- Pass5 = new TPass5(TokenList, ValDataList, TuneRegionList);
   590        |     +--- Pass5-&gt;Exec();
              |   +-+---+ 
   591        |   |  }  | 
              |   +-----+ 
   592        +--- //
   593        |    // Visual化 ファイル出力 
   594        |    //                       
              |  +------------------------------+ 
   595        +--+ if (!ErrF || NotSkipByErrF){ | 
              |  +--+---------------------------+ 
              |     |  +----------------+ 
   596        |     +--+ if (VisualF){  | 
              |     |  +--+-------------+ 
   597        |     |     +--- TVisualDM VisualDM;
   598        |     |     +--- VisualDM.Exec();
              |     |   +-+---+ 
   599        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   600        |   |  }  | 
              |   +-----+ 
              |  +--------------+ 
   601        +--+ if (Pass4){  | 
              |  +--+-----------+ 
   602        |     +--- delete Pass4;
              |   +-+---+ 
   603        |   |  }  | 
              |   +-----+ 
              |  +--------------+ 
   604        +--+ if (Pass5){  | 
              |  +--+-----------+ 
   605        |     +--- delete Pass5;
              |   +-+---+ 
   606        |   |  }  | 
              |   +-----+ 
              |  +------------------+ 
   607        +--+ if (CloseReqF){  | 
              |  +--+---------------+ 
   608        |     +--- print(&quot;**** End Code Generation **** Aboart !&quot;);
   609        |     +--- ErrF = true;
              |   +-+---+ 
   610        |   |  }  | 
              |   +-+---+ 
              |   +-+-----------------+ 
   611        |   |  else if (ErrF){  | 
              |   +-+-----------------+ 
   612        |     +--- print(&quot;**** End Code Generation **** Error ! ErrorCount = &quot; + IntToStr
   613        |     |        (ErrCount));                                                       
              |   +-+---+ 
   614        |   |  }  | 
              |   +-+---+ 
              |   +-+-------+ 
   615        |   |  else{  | 
              |   +-+-------+ 
   616        |     +--- print(&quot;**** End Code Generation **** OK !&quot;);
              |   +-+---+ 
   617        |   |  }  | 
              |   +-----+ 
   618        +--- EndF = true;
              |  +----------------------+ 
   619        +--+ if (LogFp != NULL){  | 
              |  +--+-------------------+ 
   620        |     +--- fclose(LogFp);
   621        |     +--- LogFp = NULL;
              |   +-+---+ 
   622        |   |  }  | 
              |   +-----+ 
            +-+---+ 
   623      |  }  | 
            +-----+ 
</pre>


</body>
</html>
