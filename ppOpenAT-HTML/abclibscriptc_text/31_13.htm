
<html>
<head>
<title>Pass1 関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">21.13. Pass1 関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>関数名</th>        <td nowrap>Pass1</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>pass1.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>79</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>void Pass1 ( string SrcFileName , TList * TokenList )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>ソース文字列をスキャンし区切り文字列で分割したトークンリストを生成する。<br>生成したトークンは、TokenListに追加される。<br>CとFortranの両方で使用する。</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap>なし</td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap>SrcFileName ソースファイル名<br>TokenList   生成したトークンの格納先</td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap></td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_2_3.htm">TMainF::CodeGen</a></td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap><a href="16_2_3.htm">493</a></td>
</tr>
</table>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TList::Add</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>64</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>TStringList::Add</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>83</td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_2_8.htm">TMainF::IsF90SrcFile</a></td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap><a href="16_2_8.htm">454</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>TStringList::LoadFromFile</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>93</td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap><a href="31_14.htm">Pass1_2</a></td>
<td nowrap><a href="5_2.htm">pass1.cpp</a></td>
<td nowrap><a href="31_14.htm">566</a></td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap><a href="31_15.htm">Pass1_3_Fortran</a></td>
<td nowrap><a href="5_2.htm">pass1.cpp</a></td>
<td nowrap><a href="31_15.htm">723</a></td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>LowerCase</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>109</td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>Trim</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>105</td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>atoi</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>10</td>
<td nowrap>c_str</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>11</td>
<td nowrap>erase</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>12</td>
<td nowrap>find</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>13</td>
<td nowrap>length</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>14</td>
<td nowrap>strchr</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>15</td>
<td nowrap>strtod</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>16</td>
<td nowrap>strtol</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>17</td>
<td nowrap>substr</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
</table>

<p></p>
参照外部変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>MainF</td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap>53</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>SepStr</td>
<td nowrap><a href="5_2.htm">pass1.cpp</a></td>
<td nowrap>56</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_1_1.htm">TList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_1_1.htm">57</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_7_1.htm">TStringList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_7_1.htm">74</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_9_1.htm">TToken</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="16_9_1.htm">294</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap><a href="27_9.htm">TTokId</a></td>
<td nowrap>列挙型</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="27_9.htm">64</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +--------------------------------------------------+ 
    79  +--+ void Pass1(string SrcFileName,TList *TokenList)  | 
    80     | {                                                | 
           +--+-----------------------------------------------+ 
    81        +--- char c,c2;
    82        +--- string Str;
    83        +--- TStringList *StrList;
    84        +--- int cp,cp1,cp2;
    85        +--- char cData;
    86        +--- int TextLength;
    87        +--- string ErrMsg = &quot;&quot;;
    88        +--- TTokId TokId;
    89        +--- TToken *TokData;
    90        +--- int LineNo;
    91        +--- string LineText;
    92        +--- string s,s1;
    93        +--- char *lp;
    94        +--- bool *ContinuedLineF = NULL;
    95        +--- int ContinuedLineCount = 0;
    96        +--- string OrgStr;
    97        +--- bool IsF90SrcFileF;
    98        |    
    99        +--- IsF90SrcFileF = MainF-&gt;IsF90SrcFile(SrcFileName);
   100        |    
   101        +--- //
   102        |    //  Ｃの場合は、Fortranと違い、行の概念がない.                         
   103        |    //  文字列 &quot;&quot; とコメント /* */ // 以外は、全てトークンとして分析する。 
   104        |    //                                                                     
   105        +--- StrList = new TStringList;
   106        +--- StrList-&gt;LoadFromFile(SrcFileName); // 行ごとに区切って読み込む。
   107        +--- StrList-&gt;Add(&quot;\n&quot;);
   108        |    
   109        +--- //
   110        |    //  固定形式Fortranの場合は、継続行の処理を行う。                            
   111        |    //  継続行が長い１行（文字列が継続される場合もあり）に変換される。           
   112        |    //  自由形式 f80の場合は、トークンでの処理となるので文字列としてはそのまま。 
   113        |    //                                                                           
   114        +--- ContinuedLineF = new bool[StrList-&gt;Count+1];
              |  +----------------------------------------------------------+ 
   115        +--+ for(LineNo = 0 ; LineNo &lt; StrList-&gt;Count+1 ; LineNo++){  | 
              |  +--+-------------------------------------------------------+ 
   116        |     +--- ContinuedLineF[LineNo] = false;
              |   +-+---+ 
   117        |   |  }  | 
              |   +-----+ 
              |  +------------------------------------------------+ 
   118        +--+ if(MainF-&gt;SrcCodeType == MainF-&gt;sctFortran77){ | 
              |  +--+---------------------------------------------+ 
              |     |  +--------------------------------------------------------+ 
   119        |     +--+ for(LineNo = 1 ; LineNo &lt; StrList-&gt;Count ; LineNo++){  | 
              |     |  +--+-----------------------------------------------------+ 
   120        |     |     +--- Str = StrList-&gt;Strings[LineNo];
   121        |     |     +--- /*
   122        |     |     |                if((Str.length() &gt; 1)&amp;&amp;(Str[Str.length()-1] == '&amp;')){            
   123        |     |     |                    // 最後が&amp;の場合は次が継続行　固定形式の場合はないのでＣＵＴ 
   124        |     |     |                    ContinuedLineF[LineNo+1] = true;                             
   125        |     |     |                    Str.erase(Str.length()-1,1);    // 最後の &amp; をカット         
   126        |     |     |                    StrList-&gt;Strings[LineNo] = Str;                              
   127        |     |     |                }                                                                
   128        |     |     |    */                                                                           
              |     |     |  +----------------------------------------------------------+ 
   129        |     |     +--+ if((Str.length() &gt;= 6)&amp;&amp;(Str[0] == ' ')&amp;&amp;(Str[1] == ' ') | 
   130        |     |     |  |     &amp;&amp;(Str[2] == ' ')&amp;&amp;(Str[3] == ' ')&amp;&amp;(Str[4] == ' ')  | 
   131        |     |     |  |     &amp;&amp;(Str[5] != ' ')&amp;&amp; (Str[5] != '0')){                | 
              |     |     |  +--+-------------------------------------------------------+ 
   132        |     |     |     +--- ContinuedLineF[LineNo] = true;
   133        |     |     |     +--- Str = Str.erase(0,6);   // 先頭の６文字をカット
   134        |     |     |     +--- StrList-&gt;Strings[LineNo] = Str;
              |     |     |   +-+---+ 
   135        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   136        |     |   |  }  | 
              |     |   +-----+ 
   137        |     +--- // 継続行をまとめる。空の行が作成される。これで正しく表示される形に調整する。
              |     |  +----------------------------------------------+ 
   138        |     +--+ for(int i = StrList-&gt;Count-1 ; i &gt; 0 ; i--){ | 
              |     |  +--+-------------------------------------------+ 
              |     |     |  +------------------------+ 
   139        |     |     +--+ if(ContinuedLineF[i]){ | 
              |     |     |  +--+---------------------+ 
   140        |     |     |     +--- s1= StrList-&gt;Strings[i-1]+StrList-&gt;Strings[i];
   141        |     |     |     +--- StrList-&gt;Strings[i] = &quot;&quot;;
              |     |     |     |  +--------------------------------------------+ 
   142        |     |     |     +--+ for(int j = s1.length()-1 ; j &gt;= 0 ; j--){ | 
              |     |     |     |  +--+-----------------------------------------+ 
              |     |     |     |     |  +--------------------+ 
   143        |     |     |     |     +--+ if(s1[j] == '\r'){ | 
              |     |     |     |     |  +--+-----------------+ 
   144        |     |     |     |     |     +--- s1.erase(j,1);
              |     |     |     |     |   +-+---+ 
   145        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
   146        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
   147        |     |     |     +--- StrList-&gt;Strings[i-1] = s1;
              |     |     |   +-+---+ 
   148        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   149        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   150        |   |  }  | 
              |   +-----+ 
   151        +--- LineNo = 0;
   152        +--- LineText = &quot;&quot;;
   153        +--- cp = 0;
   154        |    
   155        +--- Str = &quot;&quot;;
   156        +--- TextLength = 0;
              |  +----------------------------------+ 
   157        +--+ while(LineNo &lt; StrList-&gt;Count){  | 
              |  +--+-------------------------------+ 
              |     |  +----------------------------------------------------------------+ 
   158        |     +--+ if(cp &gt;= TextLength){   // 残りの文字がないので行を読み込む。  | 
              |     |  +--+-------------------------------------------------------------+ 
              |     |     |  +------------------+ 
   159        |     |     +--+ if(LineNo != 0){ | 
              |     |     |  +--+---------------+ 
   160        |     |     |     +--- TokData = new TToken(&quot;\n&quot;,tid_LineEnd);
   161        |     |     |     +--- TokData-&gt;OrgStr = &quot;\n&quot;;
   162        |     |     |     +--- //              TokData-&gt;OrgStr = &quot; [CR]\n&quot;; // テスト用
   163        |     |     |     +--- TokData-&gt;LineNo = LineNo - ContinuedLineCount; // 元のライン番号、Fortranの場合は解析にも使用。
   164        |     |     |     +--- TokData-&gt;LineEndF = true;
   165        |     |     |     +--- TokenList-&gt;Add(TokData);
              |     |     |   +-+---+ 
   166        |     |     |   |  }  | 
              |     |     |   +-----+ 
   167        |     |     +--- LineText = StrList-&gt;Strings[LineNo++];
              |     |     |  +--------------------------------+ 
   168        |     |     +--+ if(ContinuedLineF[LineNo-1]){  | 
              |     |     |  +--+-----------------------------+ 
   169        |     |     |     +--- ContinuedLineCount++;
   170        |     |     |     +--- //              MainF-&gt;print(IntToStr(LineNo)+&quot;&gt; &quot;+ LineText);
              |     |     |   +-+---+ 
   171        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------+ 
   171        |     |     |   |  else{  | 
              |     |     |   +-+-------+ 
   172        |     |     |     +--- ContinuedLineCount=0;
              |     |     |   +-+---+ 
   173        |     |     |   |  }  | 
              |     |     |   +-----+ 
   174        |     |     +--- TextLength = LineText.length();
   175        |     |     +--- cp = 0;
              |     |     |  +------------+ 
   176        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   177        |     |   |  }  | 
              |     |   +-----+ 
   178        |     +--- // １単語を追加する。
   179        |     +--- cp1 = cp;
              |     |  +--------------------------------------------------+ 
   180        |     +--+ while((cp &lt; TextLength)&amp;&amp;(LineText[cp] &lt;= ' ')){ | 
              |     |  +--+-----------------------------------------------+ 
   181        |     |     +--- cp++;   // 先頭のスペースは追加しない
              |     |   +-+---+ 
   182        |     |   |  }  | 
              |     |   +-----+ 
   183        |     +--- cp2 = cp;
   184        |     +--- //
   185        |     |    // Strにチェックするトークンを読み込む                           
   186        |     |    // セパレータが出現するまで読み込むことで、高速化を図る。        
   187        |     |    // セパレータが見つかれば、その手前までの文字をStrに入れて検索へ 
   188        |     |    //                                                               
              |     |  +----------------------------------------------------------+ 
   189        |     +--+ for( ; cp &lt; TextLength ; cp++){  // 行末もセパレータ扱い | 
              |     |  +--+-------------------------------------------------------+ 
   190        |     |     +--- cData = LineText[cp];
              |     |     |  +------------------------------------+ 
   191        |     |     +--+ if(strchr(SepStr,cData) != NULL){  | 
              |     |     |  +--+---------------------------------+ 
              |     |     |     |  +----------------+ 
   192        |     |     |     +--+ if(cp == cp2){ | 
              |     |     |     |  +--+-------------+ 
   193        |     |     |     |     +--- cp++;
              |     |     |     |   +-+---+ 
   194        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |     |  +--------+ 
   195        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
   196        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   197        |     |   |  }  | 
              |     |   +-----+ 
   198        |     +--- Str = LineText.substr(cp2,cp-cp2);   // セパレータ手前までの文字列
              |     |  +----------------+ 
   199        |     +--+ if(Str == &quot;&quot;){ | 
              |     |  +--+-------------+ 
              |     |     |  +------------+ 
   200        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   201        |     |   |  }  | 
              |     |   +-----+ 
   202        |     +--- TokId = tid_null;
   203        |     +--- c = Str[0];
              |     |  +----------------------------------------------------------+ 
   204        |     +--+ if(cp2 + 1 &lt; TextLength){   // /* 等の判定用の次の文字。 | 
              |     |  +--+-------------------------------------------------------+ 
   205        |     |     +--- c2 = LineText[cp2+1];
              |     |   +-+---+ 
   206        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
   206        |     |   |  else{  | 
              |     |   +-+-------+ 
   207        |     |     +--- c2 = 0;
              |     |   +-+---+ 
   208        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------------------+ 
   209        |     +--+ if(MainF-&gt;SrcCodeType != MainF-&gt;sctC){ | 
              |     |  +--+-------------------------------------+ 
              |     |     |  +------------------------------------------------+ 
   210        |     |     +--+ if((c == '&quot;')||(c == '\'')){  // 文字列の処理  | 
              |     |     |  +--+---------------------------------------------+ 
   211        |     |     |     +--- TokData = new TToken(Str,0);
   212        |     |     |     +--- TokData-&gt;TokId = tid_ConstStr; // 文字列
   213        |     |     |     +--- TokData-&gt;LineNo = LineNo - ContinuedLineCount;
   214        |     |     |     |    
   215        |     |     |     +--- OrgStr = LineText.substr(cp1,cp-cp1);
   216        |     |     |     +--- Str = LineText[cp++];
              |     |     |     |  +--------------------------+ 
   217        |     |     |     +--+ while(cp &lt; TextLength){  | 
              |     |     |     |  +--+-----------------------+ 
   218        |     |     |     |     +--- OrgStr += LineText[cp];
   219        |     |     |     |     +--- //
   220        |     |     |     |     |    //  継続行の処理を行う。 
   221        |     |     |     |     |    //                       
              |     |     |     |     |  +----------------------------------------------------------------------------+ 
   222        |     |     |     |     +--+ if(IsF90SrcFileF &amp;&amp; (LineText[cp] == '&amp;')&amp;&amp;                                | 
   223        |     |     |     |     |  |     ((cp &gt;= TextLength)||(Trim(LineText.substr(cp+1,TextLength)) == &quot;&quot;))){ | 
              |     |     |     |     |  +--+-------------------------------------------------------------------------+ 
              |     |     |     |     |     |  +--------------------------------+ 
   224        |     |     |     |     |     +--+ if(LineNo+1 &lt; StrList-&gt;Count){ | 
              |     |     |     |     |     |  +--+-----------------------------+ 
   225        |     |     |     |     |     |     +--- OrgStr += &quot;\n&quot;;
   226        |     |     |     |     |     |     +--- LineText = StrList-&gt;Strings[LineNo++];
   227        |     |     |     |     |     |     +--- TextLength = LineText.length();
   228        |     |     |     |     |     |     +--- cp = 0;
   229        |     |     |     |     |     |     +--- s = Trim(LineText);
              |     |     |     |     |     |     |  +--------------------------------------+ 
   230        |     |     |     |     |     |     +--+ if((s.length() &gt; 0)&amp;&amp;(s[0] == '&amp;')){ | 
              |     |     |     |     |     |     |  +--+-----------------------------------+ 
   231        |     |     |     |     |     |     |     +--- cp = LineText.find('&amp;')+1;  // 先頭の &amp; 位置
   232        |     |     |     |     |     |     |     +--- s = LineText.substr(0,cp);
   233        |     |     |     |     |     |     |     +--- OrgStr += s;
              |     |     |     |     |     |     |   +-+---+ 
   234        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |   +-+---+ 
   235        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |   +-+---+ 
   236        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |     |  +------------------------+ 
   237        |     |     |     |     +--+ if(LineText[cp] == c){ | 
              |     |     |     |     |  +--+---------------------+ 
   238        |     |     |     |     |     +--- cp++;
              |     |     |     |     |     |  +--------+ 
   239        |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |  +--------+ 
              |     |     |     |     |   +-+---+ 
   240        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
   241        |     |     |     |     +--- Str += LineText[cp++];
              |     |     |     |   +-+---+ 
   242        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |     |  +----------------------+ 
   243        |     |     |     +--+ if(cp &gt; TextLength){ | 
              |     |     |     |  +--+-------------------+ 
   244        |     |     |     |     +--- ErrMsg = &quot;String is not closed. &quot;;
              |     |     |     |     |  +--------+ 
   245        |     |     |     |     +--+ break; | 
              |     |     |     |     |  +--------+ 
              |     |     |     |   +-+---+ 
   246        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
   247        |     |     |     +--- OrgStr = LineText.substr(cp1,cp-cp1);
   248        |     |     |     +--- TokData-&gt;Str = Str;
   249        |     |     |     +--- TokData-&gt;OrgStr = OrgStr;
   250        |     |     |     +--- TokenList-&gt;Add(TokData);
   251        |     |     |     |    
              |     |     |     |  +------------------------------------------------+ 
   252        |     |     |     +--+ continue;  // 継続 LineText[cp]から継続する。  | 
              |     |     |     |  +------------------------------------------------+ 
              |     |     |   +-+---+ 
   253        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------------------------------------------------------+ 
   253        |     |     |   |  else if(((c &gt;= '0')&amp;&amp;(c &lt;= '9'))||(c == '.')){ // 数値 | 
              |     |     |   +-+-------------------------------------------------------+ 
   254        |     |     |     +--- cp = cp2; // 前に戻ってから再度解析
   255        |     |     |     +--- TokId = tid_ConstInt;
              |     |     |     |  +--------------------------+ 
   256        |     |     |     +--+ while(cp &lt; TextLength){  | 
              |     |     |     |  +--+-----------------------+ 
   257        |     |     |     |     +--- c = LineText[cp++];
              |     |     |     |     |  +--------------------------------------------+ 
   258        |     |     |     |     +--+ if(((c &gt;= '0')&amp;&amp;(c &lt;= '9'))||(c == '.')){  | 
              |     |     |     |     |  +--+-----------------------------------------+ 
              |     |     |     |     |     |  +------------+ 
   259        |     |     |     |     |     +--+ continue;  | 
              |     |     |     |     |     |  +------------+ 
              |     |     |     |     |   +-+---+ 
   260        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-+---+ 
              |     |     |     |     |   +-+---------------------------------------------------------+ 
   260        |     |     |     |     |   |  else if((c == 'd')||(c == 'D')||(c == 'e')||(c == 'E')){ | 
              |     |     |     |     |   +-+---------------------------------------------------------+ 
   261        |     |     |     |     |     +--- TokId = tid_ConstReal;
              |     |     |     |     |     |  +----------------------+ 
   262        |     |     |     |     |     +--+ if(cp &lt; TextLength){ | 
              |     |     |     |     |     |  +--+-------------------+ 
   263        |     |     |     |     |     |     +--- c = LineText[cp++];
              |     |     |     |     |     |     |  +------------------------------+ 
   264        |     |     |     |     |     |     +--+ if((c == '+')||(c == '-')){  | 
              |     |     |     |     |     |     |  +--+---------------------------+ 
   265        |     |     |     |     |     |     |     +--- cp++;
              |     |     |     |     |     |     |   +-+---+ 
   266        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |   +-+---+ 
   267        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |  +--------------------------+ 
   268        |     |     |     |     |     +--+ while(cp &lt; TextLength){  | 
              |     |     |     |     |     |  +--+-----------------------+ 
   269        |     |     |     |     |     |     +--- c = LineText[cp++];
              |     |     |     |     |     |     |  +------------------------------+ 
   270        |     |     |     |     |     |     +--+ if((c &gt;= '0')&amp;&amp;(c &lt;= '9')){  | 
              |     |     |     |     |     |     |  +--+---------------------------+ 
              |     |     |     |     |     |     |     |  +------------+ 
   271        |     |     |     |     |     |     |     +--+ continue;  | 
              |     |     |     |     |     |     |     |  +------------+ 
              |     |     |     |     |     |     |   +-+---+ 
   272        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |     |  +--------+ 
   273        |     |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |     |  +--------+ 
              |     |     |     |     |     |   +-+---+ 
   274        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |   +-+---+ 
   275        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
   276        |     |     |     |     +--- cp--;
              |     |     |     |     |  +--------+ 
   277        |     |     |     |     +--+ break; | 
              |     |     |     |     |  +--------+ 
              |     |     |     |   +-+---+ 
   278        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |     |  +------------------------------------------------------------+ 
   279        |     |     |     +--+ if(c == '_'){   // 定数の種別値の指定あり。 &quot;定数_変数名&quot;  | 
   280        |     |     |     |  |                 // セパレータまで進める。                  | 
              |     |     |     |  +--+---------------------------------------------------------+ 
              |     |     |     |     |  +----------------------------------+ 
   281        |     |     |     |     +--+ for( ; cp &lt; TextLength ; cp++){  | 
              |     |     |     |     |  +--+-------------------------------+ 
   282        |     |     |     |     |     +--- cData = LineText[cp];
              |     |     |     |     |     |  +------------------------------------+ 
   283        |     |     |     |     |     +--+ if(strchr(SepStr,cData) != NULL){  | 
              |     |     |     |     |     |  +--+---------------------------------+ 
              |     |     |     |     |     |     |  +----------------+ 
   284        |     |     |     |     |     |     +--+ if(cp == cp2){ | 
              |     |     |     |     |     |     |  +--+-------------+ 
   285        |     |     |     |     |     |     |     +--- cp++;
              |     |     |     |     |     |     |   +-+---+ 
   286        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |     |  +--------+ 
   287        |     |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |     |  +--------+ 
              |     |     |     |     |     |   +-+---+ 
   288        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |   +-+---+ 
   289        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
   290        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
   291        |     |     |     +--- Str = LineText.substr(cp2,cp-cp2);
              |     |     |     |  +------------------------------------+ 
   292        |     |     |     +--+ if(Str.find('.') != string::npos){ | 
              |     |     |     |  +--+---------------------------------+ 
   293        |     |     |     |     +--- TokId = tid_ConstReal;
              |     |     |     |   +-+---+ 
   294        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   295        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+---------------------------------------------------------------+ 
   296        |     |     |   |  else if(c == '!'){ // ! 以後は行末までコメント // F77等も含む  | 
              |     |     |   +-+---------------------------------------------------------------+ 
   297        |     |     |     +--- TokId = tid_Comment;
   298        |     |     |     +--- Str = LineText.substr(cp2,TextLength-cp2);
   299        |     |     |     +--- cp = LowerCase(Str).find(&quot;!oat$&quot;);
              |     |     |     |  +--------------+ 
   300        |     |     |     +--+ if(cp &lt; 0){  | 
              |     |     |     |  +--+-----------+ 
   301        |     |     |     |     +--- cp = TextLength;
              |     |     |     |   +-+---+ 
   302        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+-------+ 
   302        |     |     |     |   |  else{  | 
              |     |     |     |   +-+-------+ 
   303        |     |     |     |     +--- // ATExecや Call等の実行のために、トークン分解する。
   304        |     |     |     |     +--- cp = cp + 5 + cp2;
   305        |     |     |     |     +--- Str = LineText.substr(cp2,cp-cp2);
              |     |     |     |   +-+---+ 
   306        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   307        |     |     |   |  }  | 
              |     |     |   +-----+ 
   308        |     |     +--- // 固定形式でのコメント処理
              |     |     |   +-+-------------------------------------------------------------------------------------------------+ 
   309        |     |     |   |  else if(!IsF90SrcFileF &amp;&amp; (cp2 == 0)&amp;&amp;((c == 'c')||(c == 'C')||(c == '*'))){ // １文字目がc,C,*  | 
              |     |     |   +-+-------------------------------------------------------------------------------------------------+ 
   310        |     |     |     +--- cp = TextLength;
   311        |     |     |     +--- TokId = tid_Comment;
   312        |     |     |     +--- Str = LineText.substr(cp2,cp-cp2);
              |     |     |   +-+---+ 
   313        |     |     |   |  }  | 
              |     |     |   +-----+ 
   314        |     |     +--- //
   315        |     |     |    // 自由形式での継続行の処理。固定形式の継続行は読込時点で文字列として処理済  
   316        |     |     |    // 文字列での継続行処理は、文字列の中で行う。                                
   317        |     |     |    // 行の最後の &amp; が見つかれば、　&amp; と場合によっては次の行に&amp;までの文字列を    
   318        |     |     |    // OrgStrとして実体のStr=&quot;&quot; の継続行トークンが追加される。                   
   319        |     |     |    //                                                                           
   320        |     |     |    // 文末の&amp; は、 &amp;の後が空白やコントロールコード !で始まるコメントも含む。    
   321        |     |     |    // コメントを含んだ場合には [&amp; ! Comment \n   &amp;] が継続用文字列となる。      
   322        |     |     |    //                                                                           
              |     |     |  +----------------------------------+ 
   323        |     |     +--+ if(IsF90SrcFileF &amp;&amp; (c == '&amp;')){ | 
              |     |     |  +--+-------------------------------+ 
   324        |     |     |     +--- int i2;
   325        |     |     |     +--- char c2;
   326        |     |     |     |    
              |     |     |     |  +------------------------------------------+ 
   327        |     |     |     +--+ for(i2 =cp+1 ; i2 &lt; TextLength ; i2++){  | 
              |     |     |     |  +--+---------------------------------------+ 
   328        |     |     |     |     +--- c2 = LineText[i2];
              |     |     |     |     |  +----------------+ 
   329        |     |     |     |     +--+ if(c2 == '!'){ | 
              |     |     |     |     |  +--+-------------+ 
   330        |     |     |     |     |     +--- i2 = TextLength;
              |     |     |     |     |     |  +--------+ 
   331        |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |  +--------+ 
              |     |     |     |     |   +-+---+ 
   332        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |     |  +----------------+ 
   333        |     |     |     |     +--+ if(c2 &gt; ' '){  | 
              |     |     |     |     |  +--+-------------+ 
              |     |     |     |     |     |  +--------+ 
   334        |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |  +--------+ 
              |     |     |     |     |   +-+---+ 
   335        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
   336        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |     |  +--------------------------------------+ 
   337        |     |     |     +--+ if(i2 &gt;= TextLength){ // 継続行用の&amp; | 
              |     |     |     |  +--+-----------------------------------+ 
   338        |     |     |     |     +--- //
   339        |     |     |     |     |    //  行末までの文字を入れる。 
   340        |     |     |     |     |    //                           
   341        |     |     |     |     +--- Str = &quot;&quot;;
   342        |     |     |     |     +--- OrgStr = LineText.substr(cp1,TextLength)+&quot;\n&quot;;
   343        |     |     |     |     |    
   344        |     |     |     |     +--- TokData = new TToken(Str,0);
   345        |     |     |     |     +--- TokData-&gt;TokId = tid_ContinuedLineStr;  // 継続行用 &amp;\n    &amp;
   346        |     |     |     |     +--- TokData-&gt;LineNo = LineNo - ContinuedLineCount;
   347        |     |     |     |     +--- //
   348        |     |     |     |     |    //  次の行の先頭の&amp;までが継続行トークンとなる。  
   349        |     |     |     |     |    // cpだけでなくLineTextも更新ｓれる。            
   350        |     |     |     |     |    //                                               
              |     |     |     |     |  +--------------------------------+ 
   351        |     |     |     |     +--+ if(LineNo+1 &lt; StrList-&gt;Count){ | 
              |     |     |     |     |  +--+-----------------------------+ 
   352        |     |     |     |     |     +--- LineText = StrList-&gt;Strings[LineNo++];
   353        |     |     |     |     |     +--- TextLength = LineText.length();
   354        |     |     |     |     |     +--- cp = 0;
   355        |     |     |     |     |     +--- s = Trim(LineText);
              |     |     |     |     |     |  +--------------------------------------+ 
   356        |     |     |     |     |     +--+ if((s.length() &gt; 0)&amp;&amp;(s[0] == '&amp;')){ | 
              |     |     |     |     |     |  +--+-----------------------------------+ 
   357        |     |     |     |     |     |     +--- cp = LineText.find('&amp;')+1;  // 先頭の &amp; 位置
   358        |     |     |     |     |     |     +--- s = LineText.substr(0,cp);
   359        |     |     |     |     |     |     +--- OrgStr += s;    // &quot;   &amp;&quot; を追加。
              |     |     |     |     |     |   +-+---+ 
   360        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |   +-+---+ 
   361        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
   362        |     |     |     |     +--- TokData-&gt;OrgStr = OrgStr;
   363        |     |     |     |     +--- TokenList-&gt;Add(TokData);
   364        |     |     |     |     |    
              |     |     |     |     |  +------------------------------------------------+ 
   365        |     |     |     |     +--+ continue;  // 継続 LineText[cp]から継続する。  | 
              |     |     |     |     |  +------------------------------------------------+ 
              |     |     |     |   +-+---+ 
   366        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   367        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   368        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+---------------------+ 
   368        |     |   |  else{  //  C用の解析 | 
              |     |   +-+---------------------+ 
              |     |     |  +------------------------------------------------+ 
   369        |     |     +--+ if((c == '&quot;')||(c == '\'')){  // 文字列の処理  | 
              |     |     |  +--+---------------------------------------------+ 
   370        |     |     |     +--- Str = LineText[cp++];
              |     |     |     |  +--------------------------+ 
   371        |     |     |     +--+ while(cp &lt; TextLength){  | 
              |     |     |     |  +--+-----------------------+ 
              |     |     |     |     |  +------------------------+ 
   372        |     |     |     |     +--+ if(LineText[cp] == c){ | 
              |     |     |     |     |  +--+---------------------+ 
   373        |     |     |     |     |     +--- cp++;
              |     |     |     |     |     |  +--------+ 
   374        |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |  +--------+ 
              |     |     |     |     |   +-+---+ 
   375        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |     |  +--------------------------------------------------------------------+ 
   376        |     |     |     |     +--+ if((LineText[cp] == '\\')&amp;&amp;(cp &lt; TextLength)){  //  エスケープ文字 | 
              |     |     |     |     |  +--+-----------------------------------------------------------------+ 
   377        |     |     |     |     |     +--- cp++;
              |     |     |     |     |     |  +--------------------------+ 
   378        |     |     |     |     |     +--+ if(LineText[cp] == 'n'){ | 
              |     |     |     |     |     |  +--+-----------------------+ 
   379        |     |     |     |     |     |     +--- Str += &quot;\n&quot;;
              |     |     |     |     |     |   +-+---+ 
   380        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-+---+ 
              |     |     |     |     |     |   +-+-------------------------------+ 
   380        |     |     |     |     |     |   |  else if(LineText[cp] == 'r'){  | 
              |     |     |     |     |     |   +-+-------------------------------+ 
   381        |     |     |     |     |     |     +--- Str += &quot;\r&quot;;
              |     |     |     |     |     |   +-+---+ 
   382        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-+---+ 
              |     |     |     |     |     |   +-+-------------------------------+ 
   382        |     |     |     |     |     |   |  else if(LineText[cp] == 't'){  | 
              |     |     |     |     |     |   +-+-------------------------------+ 
   383        |     |     |     |     |     |     +--- Str += &quot;\t&quot;;
              |     |     |     |     |     |   +-+---+ 
   384        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-+---+ 
              |     |     |     |     |     |   +-+-----------------------------------------------------+ 
   384        |     |     |     |     |     |   |  else if((LineText[cp] == 'x')&amp;&amp;(cp+2 &lt; TextLength)){ | 
              |     |     |     |     |     |   +-+-----------------------------------------------------+ 
   385        |     |     |     |     |     |     +--- int Data;
   386        |     |     |     |     |     |     +--- string s2;
   387        |     |     |     |     |     |     |    
   388        |     |     |     |     |     |     +--- s2 = LineText.substr(cp+1,2);
   389        |     |     |     |     |     |     +--- Data = strtol(s2.c_str(),NULL,16);
              |     |     |     |     |     |     |  +------------------+ 
   390        |     |     |     |     |     |     +--+ if(Data != -1){  | 
              |     |     |     |     |     |     |  +--+---------------+ 
   391        |     |     |     |     |     |     |     +--- Str += (char)Data;
              |     |     |     |     |     |     |   +-+---+ 
   392        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
   393        |     |     |     |     |     |     +--- cp += 2;
              |     |     |     |     |     |   +-+---+ 
   394        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-+---+ 
              |     |     |     |     |     |   +-+-------+ 
   394        |     |     |     |     |     |   |  else{  | 
              |     |     |     |     |     |   +-+-------+ 
   395        |     |     |     |     |     |     +--- Str += LineText[cp];    // \c 文字そのもの。\\,\&quot;,\'
              |     |     |     |     |     |   +-+---+ 
   396        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
   397        |     |     |     |     |     +--- cp++;
              |     |     |     |     |   +-+---+ 
   398        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-+---+ 
              |     |     |     |     |   +-+-------+ 
   398        |     |     |     |     |   |  else{  | 
              |     |     |     |     |   +-+-------+ 
   399        |     |     |     |     |     +--- Str += LineText[cp++];
              |     |     |     |     |   +-+---+ 
   400        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |     |  +------------------------+ 
   401        |     |     |     |     +--+ if(cp &gt;= TextLength){  | 
              |     |     |     |     |  +--+---------------------+ 
   402        |     |     |     |     |     +--- ErrMsg = &quot;String is not closed. &quot;;
              |     |     |     |     |     |  +--------+ 
   403        |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |  +--------+ 
              |     |     |     |     |   +-+---+ 
   404        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
   405        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
   406        |     |     |     +--- TokId = tid_ConstStr; // 文字列
              |     |     |   +-+---+ 
   407        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-----------------------------------------------+ 
   407        |     |     |   |  else if(((c &gt;= '0')&amp;&amp;(c &lt;= '9'))||(c == '.')){ | 
              |     |     |   +-+-----------------------------------------------+ 
   408        |     |     |     +--- //
   409        |     |     |     |    // 数値（先頭の+-は別トークン）  
   410        |     |     |     |    //                               
   411        |     |     |     +--- cp = cp2; // 前に戻ってから再度解析
              |     |     |     |  +--------------------------+ 
   412        |     |     |     +--+ while(cp &lt; TextLength){  | 
              |     |     |     |  +--+-----------------------+ 
   413        |     |     |     |     +--- c = LineText[cp++];
              |     |     |     |     |  +--------------------------------------------+ 
   414        |     |     |     |     +--+ if(((c &gt;= '0')&amp;&amp;(c &lt;= '9'))||(c == '.')){  | 
              |     |     |     |     |  +--+-----------------------------------------+ 
              |     |     |     |     |     |  +------------+ 
   415        |     |     |     |     |     +--+ continue;  | 
              |     |     |     |     |     |  +------------+ 
              |     |     |     |     |   +-+---+ 
   416        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-+---+ 
              |     |     |     |     |   +-+---------------------------------+ 
   416        |     |     |     |     |   |  else if((c == 'e')||(c == 'E')){ | 
              |     |     |     |     |   +-+---------------------------------+ 
              |     |     |     |     |     |  +----------------------+ 
   417        |     |     |     |     |     +--+ if(cp &lt; TextLength){ | 
              |     |     |     |     |     |  +--+-------------------+ 
   418        |     |     |     |     |     |     +--- c = LineText[cp++];
              |     |     |     |     |     |     |  +------------------------------+ 
   419        |     |     |     |     |     |     +--+ if((c == '+')||(c == '-')){  | 
              |     |     |     |     |     |     |  +--+---------------------------+ 
   420        |     |     |     |     |     |     |     +--- cp++;
              |     |     |     |     |     |     |   +-+---+ 
   421        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |   +-+---+ 
   422        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |  +--------------------------+ 
   423        |     |     |     |     |     +--+ while(cp &lt; TextLength){  | 
              |     |     |     |     |     |  +--+-----------------------+ 
   424        |     |     |     |     |     |     +--- c = LineText[cp++];
              |     |     |     |     |     |     |  +------------------------------+ 
   425        |     |     |     |     |     |     +--+ if((c &gt;= '0')&amp;&amp;(c &lt;= '9')){  | 
              |     |     |     |     |     |     |  +--+---------------------------+ 
              |     |     |     |     |     |     |     |  +------------+ 
   426        |     |     |     |     |     |     |     +--+ continue;  | 
              |     |     |     |     |     |     |     |  +------------+ 
              |     |     |     |     |     |     |   +-+---+ 
   427        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |     |  +--------+ 
   428        |     |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |     |  +--------+ 
              |     |     |     |     |     |   +-+---+ 
   429        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |   +-+---+ 
   430        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-+---+ 
              |     |     |     |     |   +-+---------------------------------+ 
   430        |     |     |     |     |   |  else if((c == 'X')||(c == 'x')){ | 
              |     |     |     |     |   +-+---------------------------------+ 
              |     |     |     |     |     |  +--------------------------+ 
   431        |     |     |     |     |     +--+ while(cp &lt; TextLength){  | 
              |     |     |     |     |     |  +--+-----------------------+ 
   432        |     |     |     |     |     |     +--- c = LineText[cp++];
              |     |     |     |     |     |     |  +------------------------------+ 
   433        |     |     |     |     |     |     +--+ if((c &gt;= '0')&amp;&amp;(c &lt;= '9')){  | 
              |     |     |     |     |     |     |  +--+---------------------------+ 
              |     |     |     |     |     |     |     |  +------------+ 
   434        |     |     |     |     |     |     |     +--+ continue;  | 
              |     |     |     |     |     |     |     |  +------------+ 
              |     |     |     |     |     |     |   +-+---+ 
   435        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |     |  +------------------------------+ 
   436        |     |     |     |     |     |     +--+ if((c &gt;= 'a')&amp;&amp;(c &lt;= 'f')){  | 
              |     |     |     |     |     |     |  +--+---------------------------+ 
              |     |     |     |     |     |     |     |  +------------+ 
   437        |     |     |     |     |     |     |     +--+ continue;  | 
              |     |     |     |     |     |     |     |  +------------+ 
              |     |     |     |     |     |     |   +-+---+ 
   438        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |     |  +------------------------------+ 
   439        |     |     |     |     |     |     +--+ if((c &gt;= 'A')&amp;&amp;(c &lt;= 'F')){  | 
              |     |     |     |     |     |     |  +--+---------------------------+ 
              |     |     |     |     |     |     |     |  +------------+ 
   440        |     |     |     |     |     |     |     +--+ continue;  | 
              |     |     |     |     |     |     |     |  +------------+ 
              |     |     |     |     |     |     |   +-+---+ 
   441        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |     |  +--------+ 
   442        |     |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |     |  +--------+ 
              |     |     |     |     |     |   +-+---+ 
   443        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |   +-+---+ 
   444        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
   445        |     |     |     |     +--- cp--;
              |     |     |     |     |  +--------+ 
   446        |     |     |     |     +--+ break; | 
              |     |     |     |     |  +--------+ 
              |     |     |     |   +-+---+ 
   447        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
   448        |     |     |     +--- TokId = tid_ConstNum;
   449        |     |     |     +--- Str = LineText.substr(cp2,cp-cp2);
              |     |     |   +-+---+ 
   450        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-----------------------------------+ 
   450        |     |     |   |  else if((c == '/')&amp;&amp;(c2 == '*')){  | 
              |     |     |   +-+-----------------------------------+ 
   451        |     |     |     +--- int CommentNest = 1;
   452        |     |     |     |    
   453        |     |     |     +--- cp++;
   454        |     |     |     +--- Str = LineText.substr(cp2,cp-cp2);
   455        |     |     |     +--- OrgStr = LineText.substr(cp1,cp-cp1);
              |     |     |     |  +----------------------------------+ 
   456        |     |     |     +--+ while(LineNo &lt; StrList-&gt;Count){  | 
              |     |     |     |  +--+-------------------------------+ 
              |     |     |     |     |  +----------------------------------------------------------------+ 
   457        |     |     |     |     +--+ if(cp &gt;= TextLength){   // 残りの文字がないので行を読み込む。  | 
              |     |     |     |     |  +--+-------------------------------------------------------------+ 
   458        |     |     |     |     |     +--- LineText = StrList-&gt;Strings[LineNo++];
   459        |     |     |     |     |     +--- TextLength = LineText.length();
   460        |     |     |     |     |     +--- cp = 0;
   461        |     |     |     |     |     +--- OrgStr += &quot;\n&quot;;
              |     |     |     |     |     |  +------------+ 
   462        |     |     |     |     |     +--+ continue;  | 
              |     |     |     |     |     |  +------------+ 
              |     |     |     |     |   +-+---+ 
   463        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |     |  +--------------------------------+ 
   464        |     |     |     |     +--+ for(; cp &lt; TextLength ; cp++){ | 
              |     |     |     |     |  +--+-----------------------------+ 
   465        |     |     |     |     |     +--- OrgStr += LineText[cp];
   466        |     |     |     |     |     +--- Str += LineText[cp];
              |     |     |     |     |     |  +--------------------------+ 
   467        |     |     |     |     |     +--+ if(cp == TextLength-1){  | 
              |     |     |     |     |     |  +--+-----------------------+ 
   468        |     |     |     |     |     |     |    
              |     |     |     |     |     |   +-+---+ 
   469        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-+---+ 
              |     |     |     |     |     |   +-+---------------------------------------------------------+ 
   469        |     |     |     |     |     |   |  else if((LineText[cp] == '/')&amp;&amp;(LineText[cp+1] == '*')){ | 
              |     |     |     |     |     |   +-+---------------------------------------------------------+ 
   470        |     |     |     |     |     |     +--- cp++;
   471        |     |     |     |     |     |     +--- Str += LineText[cp++];
              |     |     |     |     |     |     |  +------------------------+ 
   472        |     |     |     |     |     |     +--+ if(CommentNest == 0){  | 
              |     |     |     |     |     |     |  +--+---------------------+ 
   473        |     |     |     |     |     |     |     +--- CommentNest++;  // コメントネストはなし。
              |     |     |     |     |     |     |   +-+---+ 
   474        |     |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |   +-+---+ 
   475        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-+---+ 
              |     |     |     |     |     |   +-+---------------------------------------------------------+ 
   475        |     |     |     |     |     |   |  else if((LineText[cp] == '*')&amp;&amp;(LineText[cp+1] == '/')){ | 
              |     |     |     |     |     |   +-+---------------------------------------------------------+ 
   476        |     |     |     |     |     |     +--- cp++;
   477        |     |     |     |     |     |     +--- OrgStr += &quot;/&quot;;
   478        |     |     |     |     |     |     +--- Str += LineText[cp++];
   479        |     |     |     |     |     |     +--- CommentNest--;
              |     |     |     |     |     |   +-+---+ 
   480        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |     |  +------------------------+ 
   481        |     |     |     |     |     +--+ if(CommentNest == 0){  | 
              |     |     |     |     |     |  +--+---------------------+ 
              |     |     |     |     |     |     |  +--------+ 
   482        |     |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |     |  +--------+ 
              |     |     |     |     |     |   +-+---+ 
   483        |     |     |     |     |     |   |  }  | 
              |     |     |     |     |     |   +-----+ 
              |     |     |     |     |   +-+---+ 
   484        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |     |  +------------------------+ 
   485        |     |     |     |     +--+ if(CommentNest == 0){  | 
              |     |     |     |     |  +--+---------------------+ 
              |     |     |     |     |     |  +--------+ 
   486        |     |     |     |     |     +--+ break; | 
              |     |     |     |     |     |  +--------+ 
              |     |     |     |     |   +-+---+ 
   487        |     |     |     |     |   |  }  | 
              |     |     |     |     |   +-----+ 
              |     |     |     |   +-+---+ 
   488        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
   489        |     |     |     +--- TokId = tid_Comment;
   490        |     |     |     +--- TokData = new TToken(Str,0);
   491        |     |     |     +--- TokData-&gt;OrgStr = OrgStr;
   492        |     |     |     +--- TokData-&gt;TokId = TokId; // 文字列、コメント、数値は確定済。
   493        |     |     |     +--- // 元のライン番号、Fortranの場合は解析にも使用。
   494        |     |     |     +--- //              TokData-&gt;LineNo = LineNo; // 元のライン番号、Fortranの場合は解析にも使用。
   495        |     |     |     +--- TokData-&gt;LineNo = LineNo - ContinuedLineCount;
   496        |     |     |     +--- TokenList-&gt;Add(TokData);
              |     |     |     |  +------------+ 
   497        |     |     |     +--+ continue;  | 
              |     |     |     |  +------------+ 
   498        |     |     |     +--- //          }else if((c == '/')&amp;&amp;(LineText[cp+1] == '/')){ // 行末までのコメント処理
              |     |     |   +-+---+ 
   499        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------------------------------------------------------------+ 
   499        |     |     |   |  else if((c == '/')&amp;&amp;(c2 == '/')){ // 行末までのコメント処理  | 
              |     |     |   +-+-------------------------------------------------------------+ 
   500        |     |     |     +--- cp = TextLength;
   501        |     |     |     +--- TokId = tid_Comment;
   502        |     |     |     +--- Str = LineText.substr(cp2,cp-cp2);
              |     |     |   +-+---+ 
   503        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   504        |     |   |  }  | 
              |     |   +-----+ 
   505        |     +--- //
   506        |     |    // トークンとして追加する。この時点では文字列、コメント、数値以外は未定。  
   507        |     |    //                                                                         
   508        |     +--- TokData = new TToken(Str,0);
   509        |     +--- TokData-&gt;OrgStr = LineText.substr(cp1,cp-cp1);
   510        |     +--- TokData-&gt;TokId = TokId; // 文字列、コメント、数値は確定済。
   511        |     +--- // 元のライン番号、Fortranの場合は解析にも使用。
   512        |     +--- //      TokData-&gt;LineNo = LineNo; // 元のライン番号、Fortranの場合は解析にも使用。
   513        |     +--- TokData-&gt;LineNo = LineNo - ContinuedLineCount;
   514        |     +--- // 定数の場合は、数値も設定する。
              |     |  +----------------------------+ 
   515        |     +--+ if(TokId == tid_ConstInt){ | 
              |     |  +--+-------------------------+ 
   516        |     |     +--- TokData-&gt;dData = atoi(TokData-&gt;Str.c_str());
              |     |   +-+---+ 
   517        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+---------------------------------+ 
   517        |     |   |  else if(TokId == tid_ConstReal){ | 
              |     |   +-+---------------------------------+ 
   518        |     |     +--- s = TokData-&gt;Str;
              |     |     |  +----------------------------------------------+ 
   519        |     |     +--+ for(int i = 0 ; i &lt; (int)s.length() ; i++){  | 
              |     |     |  +--+-------------------------------------------+ 
              |     |     |     |  +------------------------------------+ 
   520        |     |     |     +--+ if((s[i] == 'D')||(s[i] == 'd')){  | 
              |     |     |     |  +--+---------------------------------+ 
   521        |     |     |     |     +--- s[i] = 'e';
              |     |     |     |   +-+---+ 
   522        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   523        |     |     |   |  }  | 
              |     |     |   +-----+ 
   524        |     |     +--- TokData-&gt;dData = strtod(s.c_str(),&amp;lp);
              |     |   +-+---+ 
   525        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-----------------------------------------------+ 
   525        |     |   |  else if(TokId == tid_ConstNum){ // C用の数値。 | 
              |     |   +-+-----------------------------------------------+ 
   526        |     |     +--- s = TokData-&gt;Str;
   527        |     |     +--- TokData-&gt;dData = strtod(s.c_str(),&amp;lp);
              |     |     |  +----------------------------------------------+ 
   528        |     |     +--+ for(int i = 0 ; i &lt; (int)s.length() ; i++){  | 
              |     |     |  +--+-------------------------------------------+ 
              |     |     |     |  +------------------------------------+ 
   529        |     |     |     +--+ if((s[i] == 'x')||(s[i] == 'X')){  | 
              |     |     |     |  +--+---------------------------------+ 
   530        |     |     |     |     +--- TokData-&gt;dData = strtol(s.c_str(),&amp;lp,16);
              |     |     |     |     |  +--------+ 
   531        |     |     |     |     +--+ break; | 
              |     |     |     |     |  +--------+ 
              |     |     |     |   +-+---+ 
   532        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   533        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   534        |     |   |  }  | 
              |     |   +-----+ 
   535        |     +--- TokenList-&gt;Add(TokData);
              |   +-+---+ 
   536        |   |  }  | 
              |   +-----+ 
   537        +--- delete StrList;
   538        +--- //
   539        |    //  TokData-&gt;Strの文字列から、TokIdをセットする。場合によっては複数トークンを１つにまとめる。  
   540        |    //                                                                                             
   541        +--- Pass1_2(TokenList);
              |  +----------------------------------------+ 
   542        +--+ if(MainF-&gt;SrcCodeType != MainF-&gt;sctC){ | 
              |  +--+-------------------------------------+ 
   543        |     +--- Pass1_3_Fortran(TokenList);
              |   +-+---+ 
   544        |   |  }  | 
              |   +-----+ 
   545        +--- delete[] ContinuedLineF;
            +-+---+ 
   546      |  }  | 
            +-----+ 
</pre>


</body>
</html>
