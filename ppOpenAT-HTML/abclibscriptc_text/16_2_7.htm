
<html>
<head>
<title>GetCommandLineArg メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.2.7. GetCommandLineArg メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>GetCommandLineArg</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>main.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>296</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TMainF</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>public</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>void GetCommandLineArg ( int argc , char * argv [ ] )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>コマンドラインの解析と実行を行う。</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap>なし</td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap>argc<br>argv</td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap></td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="31_10.htm">main</a></td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap><a href="31_10.htm">75</a></td>
</tr>
</table>

<p></p>
呼出し先関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TStringList::Add</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>83</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_2_6.htm">TMainF::ErrMessage</a></td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap><a href="16_2_6.htm">767</a></td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap><a href="16_2_8.htm">TMainF::IsF90SrcFile</a></td>
<td nowrap><a href="5_1.htm">main.cpp</a></td>
<td nowrap><a href="16_2_8.htm">454</a></td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>LowerCase</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap>109</td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>compare</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap>find</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>length</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>rfind</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>substr</td>
<td nowrap><br></td>
<td nowrap><br></td>
</tr>
</table>

<p></p>

<p></p>
参照メンバ変数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap>TMainF::cc_option_str</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>100</td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap>TMainF::DebugF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>87</td>
</tr>
<tr>
<td nowrap>3</td>
<td nowrap>TMainF::EECntlF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>98</td>
</tr>
<tr>
<td nowrap>4</td>
<td nowrap>TMainF::EndF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>84</td>
</tr>
<tr>
<td nowrap>5</td>
<td nowrap>TMainF::MPIF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>90</td>
</tr>
<tr>
<td nowrap>6</td>
<td nowrap>TMainF::my_timer_start</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>95</td>
</tr>
<tr>
<td nowrap>7</td>
<td nowrap>TMainF::my_timer_stop</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>96</td>
</tr>
<tr>
<td nowrap>8</td>
<td nowrap>TMainF::NoMPIF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>89</td>
</tr>
<tr>
<td nowrap>9</td>
<td nowrap>TMainF::NotSkipByErrF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>82</td>
</tr>
<tr>
<td nowrap>10</td>
<td nowrap>TMainF::OMP_InnerF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>92</td>
</tr>
<tr>
<td nowrap>11</td>
<td nowrap>TMainF::OMP_OuterF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>91</td>
</tr>
<tr>
<td nowrap>12</td>
<td nowrap>TMainF::SrcCodeType</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>69</td>
</tr>
<tr>
<td nowrap>13</td>
<td nowrap>TMainF::SrcFileNameList</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>77</td>
</tr>
<tr>
<td nowrap>14</td>
<td nowrap>TMainF::TimeFunc</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>93</td>
</tr>
<tr>
<td nowrap>15</td>
<td nowrap>TMainF::VisualF</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap>85</td>
</tr>
</table>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="27_7.htm">TMainF::TSrcCodeType</a></td>
<td nowrap>列挙型</td>
<td nowrap><a href="5_9.htm">main.h</a></td>
<td nowrap><a href="27_7.htm">69</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +----------------------------------------------------------+ 
   296  +--+ void TMainF::GetCommandLineArg(int argc, char* argv[]) { | 
           +--+-------------------------------------------------------+ 
   297        +--- int i, j, cp;
   298        +--- string s, SrcFileName;
   299        +--- TSrcCodeType CodeType;
   300        |    
   301        +--- NotSkipByErrF = false; // エラーがあっても実行継続
              |  +------------------------------+ 
   302        +--+ for (i = 1; i &lt; argc; i++){  | 
              |  +--+---------------------------+ 
   303        |     +--- s = LowerCase(argv[i]);
              |     |  +------------------------------------------------------------+ 
   304        |     +--+ if ((s.compare(&quot;-visualization&quot;) == 0) &amp;&amp; (i &lt; argc - 1)){ | 
              |     |  +--+---------------------------------------------------------+ 
   305        |     |     +--- s = LowerCase(argv[++i]);
              |     |     |  +----------------------------+ 
   306        |     |     +--+ if (s.compare(&quot;on&quot;) == 0){ | 
              |     |     |  +--+-------------------------+ 
   307        |     |     |     +--- VisualF = true;
              |     |     |   +-+---+ 
   308        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +------------+ 
   309        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   310        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------------------------------+ 
   311        |     +--+ if ((s.compare(&quot;-debug&quot;) == 0) &amp;&amp; (i &lt; argc - 1)){ | 
              |     |  +--+-------------------------------------------------+ 
   312        |     |     +--- s = LowerCase(argv[++i]);
              |     |     |  +----------------------------+ 
   313        |     |     +--+ if (s.compare(&quot;on&quot;) == 0){ | 
              |     |     |  +--+-------------------------+ 
   314        |     |     |     +--- DebugF = true;
              |     |     |   +-+---+ 
   315        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------+ 
   316        |     |     |   |  else{  | 
              |     |     |   +-+-------+ 
   317        |     |     |     +--- DebugF = false;
              |     |     |   +-+---+ 
   318        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +------------+ 
   319        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   320        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +--------------------------------+ 
   321        |     +--+ if (s.compare(&quot;-nompi&quot;) == 0){ | 
              |     |  +--+-----------------------------+ 
   322        |     |     +--- NoMPIF = true;
   323        |     |     +--- MPIF = false;
              |     |     |  +------------+ 
   324        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   325        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------+ 
   326        |     +--+ if (s.compare(&quot;-mpi&quot;) == 0){ | 
              |     |  +--+---------------------------+ 
   327        |     |     +--- NoMPIF = false;
   328        |     |     +--- MPIF = true;
              |     |     |  +------------+ 
   329        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   330        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------+ 
   331        |     +--+ if (s.compare(&quot;-omp&quot;) == 0){ | 
              |     |  +--+---------------------------+ 
   332        |     |     +--- OMP_OuterF = true;
              |     |     |  +------------+ 
   333        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   334        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------------+ 
   335        |     +--+ if (s.compare(&quot;-omp_outer&quot;) == 0){ | 
              |     |  +--+---------------------------------+ 
   336        |     |     +--- OMP_OuterF = true;
              |     |     |  +------------+ 
   337        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   338        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------------+ 
   339        |     +--+ if (s.compare(&quot;-omp_inner&quot;) == 0){ | 
              |     |  +--+---------------------------------+ 
   340        |     |     +--- OMP_InnerF = true;
              |     |     |  +------------+ 
   341        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   342        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------------+ 
   343        |     +--+ if (s.compare(&quot;-gcforce&quot;) == 0){ | 
              |     |  +--+-------------------------------+ 
   344        |     |     +--- NotSkipByErrF = true; // エラーがあっても実行継続
              |     |     |  +------------+ 
   345        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   346        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------------------------------+ 
   347        |     +--+ if ((s.compare(&quot;-time&quot;) == 0) &amp;&amp; (i &lt; argc - 1)){  | 
              |     |  +--+-------------------------------------------------+ 
   348        |     |     +--- TimeFunc = LowerCase(argv[++i]);
   349        |     |     +--- /*
   350        |     |     |                if (s.compare(&quot;-mpi&quot;) == 0) {      
   351        |     |     |                    s = &quot;MPI_Wtime&quot;;               
   352        |     |     |                }                                  
   353        |     |     |                else if (s.compare(&quot;-oat&quot;) == 0) { 
   354        |     |     |                    s = &quot;OAT_Wtime&quot;;               
   355        |     |     |                }                                  
   356        |     |     |                TimeFunc = s;                      
   357        |     |     |    */                                             
              |     |     |  +------------+ 
   358        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   359        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +--------------------------------------------------------------+ 
   360        |     +--+ if ((s.compare(&quot;-stime_and_etime&quot;) == 0) &amp;&amp; (i &lt; argc - 2)){ | 
              |     |  +--+-----------------------------------------------------------+ 
   361        |     |     +--- s = LowerCase(argv[++i]);
   362        |     |     +--- my_timer_start = s;
   363        |     |     +--- s = LowerCase(argv[++i]);
   364        |     |     +--- my_timer_stop = s;
              |     |     |  +------------+ 
   365        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   366        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------------------------------------------+ 
   367        |     +--+ if (s.compare(&quot;-eecnt&quot;) == 0){ // -eecntlは ON指定なしで有効。 | 
              |     |  +--+-------------------------------------------------------------+ 
   368        |     |     +--- EECntlF = true;
              |     |     |  +------------+ 
   369        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   370        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +----------------------------------------------------------------+ 
   371        |     +--+ if ((s.substr(0, 4).compare(&quot;-cc=&quot;) == 0) &amp;&amp; (i &lt; argc - 1)){  | 
              |     |  +--+-------------------------------------------------------------+ 
              |     |     |  +----------------------------------+ 
   372        |     |     +--+ if (s.compare(&quot;-cc=pgi&quot;) == 0){  | 
              |     |     |  +--+-------------------------------+ 
   373        |     |     |     +--- cc_option_str = &quot;PGI&quot;;
              |     |     |   +-+---+ 
   374        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-----------------------------------------+ 
   375        |     |     |   |  else if (s.compare(&quot;-cc=ompcuda&quot;) == 0){ | 
              |     |     |   +-+-----------------------------------------+ 
   376        |     |     |     +--- cc_option_str = &quot;OMPCUDA&quot;;
              |     |     |   +-+---+ 
   377        |     |     |   |  }  | 
              |     |     |   +-+---+ 
              |     |     |   +-+-------+ 
   378        |     |     |   |  else{  | 
              |     |     |   +-+-------+ 
   379        |     |     |     +--- // print(&quot;-cc=の後が、PGIまたはOMPCUDAでありません。&quot;);
   380        |     |     |     +--- ErrMessage(-1, &quot;-cc= is not PGI or OMPCUDA.&quot;);
   381        |     |     |     +--- EndF = true;
              |     |     |     |  +--------+ 
   382        |     |     |     +--+ break; | 
              |     |     |     |  +--------+ 
              |     |     |   +-+---+ 
   383        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |     |  +------------+ 
   384        |     |     +--+ continue;  | 
              |     |     |  +------------+ 
              |     |   +-+---+ 
   385        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +------------------------------------+ 
   386        |     +--+ if (s.find(&quot;.&quot;) != string::npos){  | 
              |     |  +--+---------------------------------+ 
   387        |     |     +--- SrcFileName = argv[i];
   388        |     |     +--- // ファイル名の \\ を / に変更する。
              |     |     |  +--------------------------------------------------+ 
   389        |     |     +--+ for (j = 0; j &lt; (int)SrcFileName.length(); j++){ | 
              |     |     |  +--+-----------------------------------------------+ 
              |     |     |     |  +------------------------------+ 
   390        |     |     |     +--+ if (SrcFileName[j] == '\\'){ | 
              |     |     |     |  +--+---------------------------+ 
   391        |     |     |     |     +--- SrcFileName[j] = '/';
              |     |     |     |   +-+---+ 
   392        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   393        |     |     |   |  }  | 
              |     |     |   +-----+ 
   394        |     |     +--- SrcFileNameList.Add(SrcFileName); // 対象ソースファイル名リスト。
              |     |   +-+---+ 
   395        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   396        |   |  }  | 
              |   +-----+ 
   397        +--- //
   398        |    // ソースコードの種類を調べる。拡張子にfが含まれていればFortranとする。  
   399        |    // .f は Fortran  .fxx は　f90として扱う。                               
   400        |    // 複数ファイル指定で異なるタイプが混在する場合はエラーとする。          
   401        |    //                                                                       
              |  +----------------------------------------------+ 
   402        +--+ for (i = 0; i &lt; SrcFileNameList.Count; i++){ | 
              |  +--+-------------------------------------------+ 
   403        |     +--- SrcFileName = SrcFileNameList.Strings[i];
   404        |     +--- CodeType = sctC;
   405        |     +--- s = LowerCase(SrcFileName);
   406        |     +--- cp = s.rfind('.');
              |     |  +------------------------------------------------+ 
   407        |     +--+ if ((cp != -1) &amp;&amp; (cp + 1 &lt; (int)s.length())){ | 
              |     |  +--+---------------------------------------------+ 
              |     |     |  +------------------------+ 
   408        |     |     +--+ if (s[cp + 1] == 'f'){ | 
              |     |     |  +--+---------------------+ 
              |     |     |     |  +----------------------------------+ 
   409        |     |     |     +--+ if (IsF90SrcFile(SrcFileName)){  | 
              |     |     |     |  +--+-------------------------------+ 
   410        |     |     |     |     +--- CodeType = sctFortran90;
              |     |     |     |   +-+---+ 
   411        |     |     |     |   |  }  | 
              |     |     |     |   +-+---+ 
              |     |     |     |   +-+-------+ 
   412        |     |     |     |   |  else{  | 
              |     |     |     |   +-+-------+ 
   413        |     |     |     |     +--- CodeType = sctFortran77;
              |     |     |     |   +-+---+ 
   414        |     |     |     |   |  }  | 
              |     |     |     |   +-----+ 
              |     |     |   +-+---+ 
   415        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   416        |     |   |  }  | 
              |     |   +-----+ 
              |     |  +--------------+ 
   417        |     +--+ if (i == 0){ | 
              |     |  +--+-----------+ 
   418        |     |     +--- SrcCodeType = CodeType;
              |     |   +-+---+ 
   419        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
   420        |     |   |  else{  | 
              |     |   +-+-------+ 
              |     |     |  +--------------------------------+ 
   421        |     |     +--+ if (SrcCodeType != CodeType){  | 
              |     |     |  +--+-----------------------------+ 
   422        |     |     |     +--- // ErrMessage(-1,&quot;異なる拡張子が混在しています。&quot;);
   423        |     |     |     +--- ErrMessage(-1, &quot;A different file extension is intermingled.&quot;);
              |     |     |   +-+---+ 
   424        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
   425        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   426        |   |  }  | 
              |   +-----+ 
              |  +----------------------------------------------------------------------------+ 
   427        +--+ if (TimeFunc == &quot;&quot;){ // TimeFuncの指定がない場合はデフォルトをセットする。 | 
              |  +--+-------------------------------------------------------------------------+ 
              |     |  +------------+ 
   428        |     +--+ if(MPIF){  | 
              |     |  +--+---------+ 
   429        |     |     +--- TimeFunc = &quot;MPI_Wtime&quot;;
              |     |   +-+---+ 
   430        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
   430        |     |   |  else{  | 
              |     |   +-+-------+ 
   431        |     |     +--- TimeFunc = &quot;OAT_Wtime&quot;;
              |     |   +-+---+ 
   432        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
   433        |   |  }  | 
              |   +-----+ 
            +-+---+ 
   434      |  }  | 
            +-----+ 
</pre>


</body>
</html>
