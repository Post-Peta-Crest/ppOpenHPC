
<html>
<head>
<title>FindEndIf メンバ関数説明</title><base target="main">
<link rel ="stylesheet" type="text/css" href="stylesheet.css" title="stylesheet">
<meta http-equiv="Content-Type" content="text/html;charset=Shift_JIS">
</head>

<body bgcolor="#ffffff">

<div align="right"><font size="2">ABCLibScriptC プロジェクト</font></div>

<table width=100% bgcolor="#e6e6fa" class="titlebgcolor" border="1" cellpadding="7" cellspacing="0">
<tr>
    <td><font class="titlefont">14.10.9. FindEndIf メンバ関数説明</font></td>
</tr>
</table>

<p></p>
<table border="1">
<tr><th align="left" nowrap>メンバ関数名</th>  <td nowrap>FindEndIf</td></tr>
<tr><th align="left" nowrap>定義ファイル名</th><td nowrap>TuneRegion.cpp</td></tr>
<tr><th align="left" nowrap>定義行</th>        <td nowrap>12702</td></tr>
<tr><th align="left" nowrap>所属名</th>        <td nowrap>TTuneRegion</td></tr>
<tr><th align="left" nowrap>アクセス属性</th>  <td nowrap>private</td></tr>
<tr><th align="left" nowrap>宣言形式</th>      <td nowrap>int FindEndIf ( TList * TokenList , int sPos )</td></tr>
<tr><th align="left" nowrap>概要</th>          <td nowrap>{ }を調べてネストが０の場合の位置を返す。<br>if()の後の{の位置からの検索に使用される。<br>ifの直後からの}の検索にはFindEndDo2を使用する。<br>見つからない場合は -1を返す行の先頭トークン位置で返す。</td></tr>
<tr><th align="left" nowrap>戻り値</th>        <td nowrap>対応する ENDIFDOの位置。見つからない場合は 開始位置 sPosを返す。</td></tr>
<tr><th align="left" nowrap>パラメタ説明</th>  <td nowrap>TokenList   トークンリスト<br>sPos    開始位置</td></tr>
<tr><th align="left" nowrap>機能説明</th>      <td nowrap></td></tr>
<tr><th align="left" nowrap>備考</th>          <td nowrap></td></tr>
</table>

<p></p>
呼出し元関数一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_10_46.htm">TTuneRegion::OutputUnroll_IfBlock_C</a></td>
<td nowrap><a href="5_7.htm">TuneRegion.cpp</a></td>
<td nowrap><a href="16_10_46.htm">10955</a></td>
</tr>
</table>

<p></p>

<p></p>

<p></p>

<p></p>
参照先一覧表
<table border="1">
<tr>
<th nowrap>№</th>
<th nowrap>名称</th>
<th nowrap>種別</th>
<th nowrap>定義ファイル名</th>
<th nowrap>定義行</th>
</tr>
<tr>
<td nowrap>1</td>
<td nowrap><a href="16_1_1.htm">TList</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_16.htm">VCL_Lib.h</a></td>
<td nowrap><a href="16_1_1.htm">57</a></td>
</tr>
<tr>
<td nowrap>2</td>
<td nowrap><a href="16_9_1.htm">TToken</a></td>
<td nowrap>クラス</td>
<td nowrap><a href="5_10.htm">pass1.h</a></td>
<td nowrap><a href="16_9_1.htm">294</a></td>
</tr>
</table>

<p></p>
<pre>
関数論理チャート

        |  +--------------------------------------------------------+ 
 12702  +--+ int TTuneRegion::FindEndIf(TList *TokenList,int sPos)  | 
 12703     | {                                                      | 
           +--+-----------------------------------------------------+ 
 12704        +--- int i;
 12705        +--- TToken *Token;
 12706        +--- int Nest = 0;
 12707        |    
              |  +----------------------------------------------+ 
 12708        +--+ for(i = sPos ; i &lt; TokenList-&gt;Count ; i++){  | 
              |  +--+-------------------------------------------+ 
 12709        |     +--- Token = (TToken *)TokenList-&gt;Items[i];
              |     |  +------------------------------------------------------------+ 
 12710        |     +--+ if((Token-&gt;TokId == tid_if)||(Token-&gt;TokId == tid_else)){  | 
              |     |  +--+---------------------------------------------------------+ 
 12711        |     |     |    
              |     |   +-+---+ 
 12712        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+---------------------------------------+ 
 12712        |     |   |  else if(Token-&gt;TokId == tid_DaiKakko){ | 
              |     |   +-+---------------------------------------+ 
 12713        |     |     +--- Nest++;
              |     |   +-+---+ 
 12714        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+---------------------------------------+ 
 12714        |     |   |  else if(Token-&gt;TokId == tid_DaiKokka){ | 
              |     |   +-+---------------------------------------+ 
 12715        |     |     +--- Nest--;
              |     |     |  +----------------+ 
 12716        |     |     +--+ if(Nest == 0){ | 
              |     |     |  +--+-------------+ 
              |     |     |     |  +------------+ 
 12717        |     |     |     +--+ return i;  | 
              |     |     |     |  +------------+ 
              |     |     |   +-+---+ 
 12718        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
 12719        |     |   |  }  | 
              |     |   +-+---+ 
              |     |   +-+-------+ 
 12719        |     |   |  else{  | 
              |     |   +-+-------+ 
              |     |     |  +----------------+ 
 12720        |     |     +--+ if(Nest == 0){ | 
              |     |     |  +--+-------------+ 
              |     |     |     |  +------------+ 
 12721        |     |     |     +--+ return i;  | 
              |     |     |     |  +------------+ 
              |     |     |   +-+---+ 
 12722        |     |     |   |  }  | 
              |     |     |   +-----+ 
              |     |   +-+---+ 
 12723        |     |   |  }  | 
              |     |   +-----+ 
              |   +-+---+ 
 12724        |   |  }  | 
              |   +-----+ 
 12725        +--- //  return -1;
              |  +--------------+ 
 12726        +--+ return sPos; | 
              |  +--------------+ 
            +-+---+ 
 12727      |  }  | 
            +-----+ 
</pre>


</body>
</html>
